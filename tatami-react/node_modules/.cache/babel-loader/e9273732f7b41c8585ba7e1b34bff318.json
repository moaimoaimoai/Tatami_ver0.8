{"ast":null,"code":"var _jsxFileName = \"/Users/hirakuono/Desktop/\\u958B\\u767A/tatamiproject_0.8_local/tatami-react/src/context/ApiContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ApiContext = /*#__PURE__*/createContext();\nconst ApiContextProvider = props => {\n  _s();\n  const token = props.cookies.get(\"current-token\");\n  const [profile, setProfile] = useState([]);\n  const [profiles, setProfiles] = useState([]);\n  const [specificProfile, setSpecificProfile] = useState([]);\n  const [editedProfile, setEditedProfile] = useState({\n    id: \"\",\n    nickName: \"\",\n    caption: \"\"\n  });\n  const [askList, setAskList] = useState([]);\n  const [askData, setAskData] = useState([]);\n  const [askListFull, setAskListFull] = useState([]);\n  const [cover, setCover] = useState([]);\n  const [coverBack, setCoverBack] = useState([]);\n  const [monopages, setMonopages] = useState([]);\n  const [monoposts, setMonoposts] = useState([]);\n  const [mymonoposts, setMyMonoposts] = useState([]);\n  const [monocomments, setMonocomments] = useState([]);\n  const [pageattribute, setPageattribute] = useState([]);\n  const [intpage, setIntpage] = useState([]);\n  const [postsforintpage, setPostsforintpage] = useState([]);\n  const [intpost, setIntpost] = useState([]);\n  const [intuser, setIntuser] = useState([]);\n  const [intcomment, setIntComment] = useState([]);\n  const [intattribute, setIntAttribute] = useState([]);\n  const [postsforintuser, setPostsforintuser] = useState([]);\n  const [monopageposts, setMonopageposts] = useState([]);\n  const [postimg, setPostimg] = useState([]);\n  const [createdmonopost, setCreatedMonopost] = useState({\n    text: \"\",\n    rating: \"\",\n    reviewTo: \"\"\n  });\n  const [friendrequest, setFriendRequest] = useState([]);\n  const [commentsforintpost, setCommentsforintpost] = useState([]);\n  const [createdcomment, setCreatedcomment] = useState({\n    text: \"\",\n    post: \"\"\n  });\n  const [followinguserpost, setFollowinguserpost] = useState([]);\n  const [followinguser, setFollowinguser] = useState([]);\n  const [followeduser, setFolloweduser] = useState([]);\n  const [mutualfollowinguser, setMutualfollowinguser] = useState([]);\n  const [followingpage, setFollowingpage] = useState([]);\n  const [owningpage, setOwningpage] = useState([]);\n  const [pagesforintattribute, setPagesforintattribute] = useState([]);\n  const [affiliates, setAffiliates] = useState([]);\n  const [isfollowingpage, setIsfollowingpage] = useState([]);\n  const [isowningpage, setIsOwningpage] = useState([]);\n  useEffect(() => {\n    const getMyProfile = async () => {\n      try {\n        const resmy = await axios.get(\"http://localhost:8000/api/user/myprofile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const res = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        resmy.data[0] && setProfile(resmy.data[0]);\n        resmy.data[0] && setEditedProfile({\n          id: resmy.data[0].id,\n          nickName: resmy.data[0].nickName,\n          caption: resmy.data[0].caption\n        });\n        resmy.data[0] && setAskList(res.data.filter(ask => {\n          return resmy.data[0].userProfile === ask.askTo;\n        }));\n        setAskListFull(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getFriendRequest = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const requests = resreqall.data.filter(each => {\n          return each.approved === false;\n        });\n        const requestsfromother = requests.filter(each => {\n          return each.askFrom !== profile.userProfile;\n        });\n        setFriendRequest(requestsfromother);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getProfile = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        setProfiles(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getMonoPages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        setMonopages(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getMonoPosts = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        setMonoposts(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getMonoComments = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        setMonocomments(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getAttribute = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        setPageattribute(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getFollowingUserPosts = async () => {\n      try {\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const following = resreqall.data.filter(each => {\n          return each;\n        });\n        const a = following.map(follow => {\n          return follow.askTo;\n        });\n        const b = following.map(follow => {\n          return follow.askFrom;\n        });\n        const concat = [...a, ...b];\n        const set = new Set(concat);\n        const followinguser = [...set];\n        const post = respost.data.filter(post => {\n          return followinguser.includes(post.userPost);\n        });\n        post && setFollowinguserpost(post);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const following = resreqall.data.filter(each => {\n          return each;\n        });\n        const a = following.map(follow => {\n          return follow.askTo;\n        });\n        const b = following.map(follow => {\n          return follow.askFrom;\n        });\n        const concat = [...a, ...b];\n        const set = new Set(concat);\n        const followinguser = [...set];\n        const followinguserprof = resprof.data.filter(prof => {\n          return followinguser.includes(prof.userProfile);\n        });\n        followinguserprof && setFollowinguser(followinguserprof);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getFollowedUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const following = resreqall.data.filter(each => {\n          return each;\n        });\n        const a = following.map(follow => {\n          return follow.askTo;\n        });\n        const concat = [...a];\n        const set = new Set(concat);\n        const followedusers = [...set];\n        const followeduserprof = resprof.data.filter(prof => {\n          return followedusers.includes(prof.userProfile);\n        });\n        followeduserprof && setFolloweduser(followeduserprof);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getMutualFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const following = resreqall.data.filter(each => {\n          return each.approved === true;\n        });\n        const a = following.map(follow => {\n          return follow.askTo;\n        });\n        const b = following.map(follow => {\n          return follow.askFrom;\n        });\n        const concat = [...a, ...b];\n        const set = new Set(concat);\n        const followinguser = [...set];\n        const followinguserprof = resprof.data.filter(prof => {\n          return followinguser.includes(prof.userProfile);\n        });\n        followinguserprof && setMutualfollowinguser(followinguserprof);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getFollowingPage = async () => {\n      try {\n        const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const followingpageid = resfollow.data.map(follow => {\n          return follow.pageId;\n        });\n        const followingpageinfo = respage.data.filter(page => {\n          return followingpageid.includes(page.id);\n        });\n        followingpageinfo && setFollowingpage(followingpageinfo);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getOwningPage = async () => {\n      try {\n        const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const owningpageid = resown.data.map(own => {\n          return own.pageId;\n        });\n        const owningpageinfo = respage.data.filter(page => {\n          return owningpageid.includes(page.id);\n        });\n        owningpageinfo && setOwningpage(owningpageinfo);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    const getUserInterest = async () => {\n      try {\n        const resintpage = await axios.get('http://localhost:8000/api/user/userintpage/', {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resintpost = await axios.get('http://localhost:8000/api/user/userintpost/', {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resintcomment = await axios.get('http://localhost:8000/api/user/userintcomment/', {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resintuser = await axios.get('http://localhost:8000/api/user/userintuser/', {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        resintpage.data[0] && setIntpage(respage.data.find(each => {\n          return each.id === Number(resintpage.data[0].intPageId);\n        }));\n        resintpost.data[0] && setIntpost(respost.data.find(each => {\n          return each.id === Number(resintpost.data[0].intPostId);\n        }));\n        resintcomment.data[0] && setIntComment(rescomment.data.find(each => {\n          return each.id === Number(resintcomment.data[0].intCommentId);\n        }));\n        resintuser.data[0] && setIntuser(resuser.data.find(each => {\n          return each.userProfile === Number(resintuser.data[0].intUserId);\n        }));\n        resintattribute.data[0] && setIntAttribute(resattribute.data.find(each => {\n          return each.id === Number(resintattribute.data[0].intAttributeId);\n        }));\n        resintpage.data[0] && setPostsforintpage(respost.data.filter(each => {\n          return each.reviewTo === Number(resintpage.data[0].intPageId);\n        }));\n        resintuser.data[0] && setPostsforintuser(respost.data.filter(each => {\n          return each.userPost === Number(resintuser.data[0].intUserId);\n        }));\n        resintpost.data[0] && setCommentsforintpost(rescomment.data.filter(each => {\n          return each.post === Number(resintpost.data[0].intPostId);\n        }));\n        resintattribute.data[0] && setPagesforintattribute(respage.data.filter(each => {\n          return each.attribute.includes(resintattribute.data[0].intAttributeId);\n        }));\n        resaf.data[0] && setAffiliates(resaf.data[0]);\n        // const tmpIntpage =respage.data.find((each) => {\n        //   return each.id === Number(resintpage.data[0].intPageId)\n        // });\n        // tmpIntpage && \n        // setAffiliates(resaf.data.find((each) => {\n        //   return each.id === Number(tmpIntpage.affiliateId)\n        // }));\n        // tmpIntpage && \n        // setIsfollowingpage(respage.data.find((each) => {\n        //   return each.id === tmpIntpage.id\n        // }));\n        console.log(\"API実行\");\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    getMyProfile();\n    getMonoComments();\n    getProfile();\n    getMonoPages();\n    getMonoPosts();\n    getUserInterest();\n    getUserInterest();\n    getUserInterest();\n    getFriendRequest();\n    getFollowingUserPosts();\n    getFollowingPage();\n    getOwningPage();\n    getAttribute();\n    getFollowingUser();\n    getMutualFollowingUser();\n    getFollowedUser();\n  }, [token, profile.id]);\n  const getFollowingPage = async () => {\n    try {\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const followingpageid = resfollow.data.map(follow => {\n        return follow.pageId;\n      });\n      const followingpageinfo = respage.data.filter(page => {\n        return followingpageid.includes(page.id);\n      });\n      followingpageinfo && setFollowingpage(followingpageinfo);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getOwningPage = async () => {\n    try {\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const owningpageid = resown.data.map(own => {\n        return own.pageId;\n      });\n      const owningpageinfo = respage.data.filter(page => {\n        return owningpageid.includes(page.id);\n      });\n      owningpageinfo && setOwningpage(owningpageinfo);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const following = resreqall.data.filter(each => {\n        return each;\n      });\n      const a = following.map(follow => {\n        return follow.askTo;\n      });\n      const b = following.map(follow => {\n        return follow.askFrom;\n      });\n      const concat = [...a, ...b];\n      const set = new Set(concat);\n      const followinguser = [...set];\n      const followinguserprof = resprof.data.filter(prof => {\n        return followinguser.includes(prof.userProfile);\n      });\n      followinguserprof && setFollowinguser(followinguserprof);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getFollowedUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const following = resreqall.data.filter(each => {\n        return each;\n      });\n      const a = following.map(follow => {\n        return follow.askTo;\n      });\n      const concat = [...a];\n      const set = new Set(concat);\n      const followedusers = [...set];\n      const followeduserprof = resprof.data.filter(prof => {\n        return followedusers.includes(prof.userProfile);\n      });\n      followeduserprof && setFollowinguser(followeduserprof);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getMutualFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const following = resreqall.data.filter(each => {\n        return each.approved === true;\n      });\n      const a = following.map(follow => {\n        return follow.askTo;\n      });\n      const b = following.map(follow => {\n        return follow.askFrom;\n      });\n      const concat = [...a, ...b];\n      const set = new Set(concat);\n      const followinguser = [...set];\n      const followinguserprof = resprof.data.filter(prof => {\n        return followinguser.includes(prof.userProfile);\n      });\n      followinguserprof && setMutualfollowinguser(followinguserprof);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getFriendRequest = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const requests = resreqall.data.filter(each => {\n        return each.approved === false;\n      });\n      requests.data && setFriendRequest(requests);\n      // requests.data && setFriendRequest(requests.filter((each) => {\n      //   return each.askTo === Number(resprof.data[0].userProfile)\n      // }))\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getProfile = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      setProfiles(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getMonoPages = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      setMonopages(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getMonoPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      setMonoposts(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getFollowingUserPosts = async () => {\n    try {\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const following = resreqall.data.filter(each => {\n        return each;\n      });\n      const a = following.map(follow => {\n        return follow.askTo;\n      });\n      const b = following.map(follow => {\n        return follow.askFrom;\n      });\n      const concat = [...a, ...b];\n      const set = new Set(concat);\n      const followinguser = [...set];\n      const post = respost.data.filter(post => {\n        return followinguser.includes(post.userPost);\n      });\n      post && setFollowinguserpost(post);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getMonoComments = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      setMonocomments(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const getUserInterest = async () => {\n    try {\n      const resintpage = await axios.get('http://localhost:8000/api/user/userintpage/', {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resintpost = await axios.get('http://localhost:8000/api/user/userintpost/', {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resintcomment = await axios.get('http://localhost:8000/api/user/userintcomment/', {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resintuser = await axios.get('http://localhost:8000/api/user/userintuser/', {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      resintpage.data[0] && setIntpage(respage.data.find(each => {\n        return each.id === Number(resintpage.data[0].intPageId);\n      }));\n      resintpost.data[0] && setIntpost(respost.data.find(each => {\n        return each.id === Number(resintpost.data[0].intPostId);\n      }));\n      resintcomment.data[0] && setIntComment(rescomment.data.find(each => {\n        return each.id === Number(resintcomment.data[0].intCommentId);\n      }));\n      resintuser.data[0] && setIntuser(resuser.data.find(each => {\n        return each.userProfile === Number(resintuser.data[0].intUserId);\n      }));\n      resintattribute.data[0] && setIntAttribute(resattribute.data.find(each => {\n        return each.id === Number(resintattribute.data[0].intAttributeId);\n      }));\n      resintpage.data[0] && setPostsforintpage(respost.data.filter(each => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId);\n      }));\n      resintuser.data[0] && setPostsforintuser(respost.data.filter(each => {\n        return each.userPost === Number(resintuser.data[0].intUserId);\n      }));\n      resintpost.data[0] && setCommentsforintpost(rescomment.data.filter(each => {\n        return each.post === Number(resintpost.data[0].intPostId);\n      }));\n      resintattribute.data[0] && setPagesforintattribute(respage.data.filter(each => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId);\n      }));\n      resaf.data[0] && setAffiliates(resaf.data[0]);\n      // const tmpIntpage =respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // });\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const createProfile = async () => {\n    const createData = new FormData();\n    editedProfile.nickName && createData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && createData.append(\"caption\", editedProfile.caption);\n    cover.name && createData.append(\"img\", cover, cover.name);\n    coverBack.name && createData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/profile/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setProfile(res.data);\n      setEditedProfile({\n        id: res.data.id,\n        nickName: res.data.nickName,\n        caption: res.data.caption\n      });\n      alert(\"プロフィールを新規作成しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const createMonoPost = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdmonopost.text);\n    createData.append(\"rating\", createdmonopost.rating);\n    createData.append(\"reviewTo\", createdmonopost.reviewTo);\n    postimg.name && createData.append(\"img\", postimg, postimg.name);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/monopost/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getMonoPosts();\n      getUserInterest();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const createRepost = async targetpost => {\n    const createData = new FormData();\n    createData.append(\"title\", targetpost.title);\n    createData.append(\"text\", targetpost.text);\n    createData.append(\"rating\", targetpost.rating);\n    createData.append(\"reviewTo\", targetpost.reviewTo);\n    createData.append(\"reposting\", true);\n    createData.append(\"repostingFrom\", targetpost.id);\n    createData.append(\"repostingFromUser\", targetpost.userPost);\n    targetpost.img && createData.append(\"text\", targetpost.text + '  【画像付き】');\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/monopost/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getMonoPosts();\n      getMonoPosts();\n      getFollowingUserPosts();\n      getFollowingUserPosts();\n      getUserInterest();\n      getUserInterest();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const createMonoComment = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdcomment.text);\n    createData.append(\"post\", createdcomment.post);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/monocomment/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getMonoComments();\n      getUserInterest();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const deleteMonopost = async deletepostid => {\n    try {\n      await axios.delete(`http://localhost:8000/api/user/monopost/${deletepostid}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setMonoposts(monoposts.filter(dev => dev.id !== deletepostid));\n      setMyMonoposts(mymonoposts.filter(dev => dev.id !== deletepostid));\n      setPostimg([]);\n    } catch {\n      console.log(\"error\");\n    }\n    ;\n  };\n  const getSpecificProfile = async userid => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/user/profile/${userid}`, {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      setSpecificProfile(res.data);\n      return specificProfile.img;\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const deleteProfile = async () => {\n    try {\n      await axios.delete(`http://localhost:8000/api/user/profile/${profile.id}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setProfiles(profiles.filter(dev => dev.id !== profile.id));\n      setProfile([]);\n      setEditedProfile({\n        id: \"\",\n        nickName: \"\",\n        caption: \"\"\n      });\n      setCover([]);\n      setCoverBack([]);\n      setAskList([]);\n      alert(\"プロフィールを削除しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const editProfile = async () => {\n    const editData = new FormData();\n    editedProfile.nickName && editData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && editData.append(\"caption\", editedProfile.caption);\n    cover.name && editData.append(\"img\", cover, cover.name);\n    coverBack.name && editData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.put(`http://localhost:8000/api/user/profile/${profile.id}/`, editData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setProfile(res.data);\n      alert(\"変更を保存しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const likePost = async postdata => {\n    const editData = new FormData();\n    editData.append(\"text\", postdata.text);\n    editData.append(\"reviewTo\", postdata.reviewTo);\n    editData.append(\"rating\", postdata.rating);\n    editData.append(\"reposting\", postdata.reposting);\n    postdata.repostingFrom && editData.append(\"repostingFrom\", postdata.repostingFrom);\n    postdata.repostingFromUser && editData.append(\"repostingFromUser\", postdata.repostingFromUser);\n    const concat = [...postdata.liked, profile.userProfile];\n    const set = new Set(concat);\n    const likes = [...set].map(Number);\n    const compareFunc = (a, b) => {\n      return a - b;\n    };\n    if (Array.isArray(likes)) {\n      likes.forEach((v, i) => {\n        editData.append(\"liked\", v);\n      });\n    } else {\n      editData.append(\"liked\", likes);\n    }\n    try {\n      const res = await axios.put(`http://localhost:8000/api/user/monopost/${postdata.id}/`, editData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getMonoPosts();\n      getMonoPosts();\n      getFollowingUserPosts();\n      getFollowingUserPosts();\n      getMonoPosts();\n      getMonoPosts();\n      getFollowingUserPosts();\n      getFollowingUserPosts();\n      getUserInterest();\n      getUserInterest();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const newRequestFriend = async askData => {\n    try {\n      const res = await axios.post(`http://localhost:8000/api/user/approval/`, askData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setAskListFull([...askListFull, res.data]);\n      getFollowingUserPosts();\n      getFriendRequest();\n      getFollowingUser();\n      getMutualFollowingUser();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const newUserIntPage = async interestData => {\n    const createData = new FormData();\n    try {\n      const resintpage = await axios.post(\"http://localhost:8000/api/user/userintpage/\", interestData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      resintpage.data[0] && setIntpage(respage.data.find(each => {\n        return each.id === Number(resintpage.data[0].intPageId);\n      }));\n      resintpage.data[0] && setPostsforintpage(respost.data.filter(each => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId);\n      }));\n      // const tmpIntpage = respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // })\n      resintpage.data[0] && setAffiliates(resaf.data[0]);\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const newUserIntPost = async interestData => {\n    try {\n      const resintpost = await axios.post(\"http://localhost:8000/api/user/userintpost/\", interestData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      resintpost.data[0] && setIntpost(respost.data.find(each => {\n        return each.id === Number(resintpost.data[0].intPostId);\n      }));\n      resintpost.data[0] && setCommentsforintpost(rescomment.data.filter(each => {\n        return each.post === Number(resintpost.data[0].intPostId);\n      }));\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const newUserIntUser = async interestData => {\n    try {\n      const resintuser = await axios.post(\"http://localhost:8000/api/user/userintuser/\", interestData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      resintuser.data[0] && setIntuser(resuser.data.find(each => {\n        return each.userProfile === Number(resintuser.data[0].intUserId);\n      }));\n      resintuser.data[0] && setPostsforintuser(respost.data.filter(each => {\n        return each.userPost === Number(resintuser.data[0].intUserId);\n      }));\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const newUserIntAttribute = async interestData => {\n    try {\n      const resintattribute = await axios.post(\"http://localhost:8000/api/user/userintattribute/\", interestData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      resintattribute.data[0] && setIntAttribute(resattribute.data.find(each => {\n        return each.id === Number(resintattribute.data[0].intAttributeId);\n      }));\n      resintattribute.data[0] && setPagesforintattribute(respage.data.filter(each => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId);\n      }));\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const followPage = async id => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/followingpage/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getFollowingPage();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const ownPage = async id => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/user/owningpage/\", createData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      getOwningPage();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  const changeApprovalRequest = async (uploadDataAsk, ask) => {\n    try {\n      const res = await axios.put(`http://localhost:8000/api/user/approval/${ask.id}/`, uploadDataAsk, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n      setAskList(askList.map(item => item.id === ask.id ? res.data : item));\n      const newDataAsk = new FormData();\n      newDataAsk.append(\"askTo\", ask.askFrom);\n      newDataAsk.append(\"approved\", true);\n      const newDataAskPut = new FormData();\n      newDataAskPut.append(\"askTo\", ask.askFrom);\n      newDataAskPut.append(\"askFrom\", ask.askTo);\n      newDataAskPut.append(\"approved\", true);\n      const resp = askListFull.filter(item => {\n        return item.askFrom === profile.userProfile && item.askTo === ask.askFrom;\n      });\n      !resp[0] ? await axios.post(`http://localhost:8000/api/user/approval/`, newDataAsk, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      }) : await axios.put(`http://localhost:8000/api/user/approval/${resp[0].id}/`, newDataAskPut, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`\n        }\n      });\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: {\n      askData,\n      setAskData,\n      profile,\n      profiles,\n      specificProfile,\n      setSpecificProfile,\n      cover,\n      setCover,\n      friendrequest,\n      setFriendRequest,\n      monopages,\n      setMonopages,\n      monoposts,\n      setMonoposts,\n      mymonoposts,\n      setMyMonoposts,\n      monocomments,\n      setMonocomments,\n      postimg,\n      setPostimg,\n      createdmonopost,\n      setCreatedMonopost,\n      coverBack,\n      setCoverBack,\n      monopageposts,\n      intpage,\n      setIntpage,\n      intpost,\n      setIntpost,\n      intuser,\n      setIntuser,\n      postsforintpage,\n      setPostsforintpage,\n      postsforintuser,\n      setPostsforintuser,\n      commentsforintpost,\n      setCommentsforintpost,\n      createMonoComment,\n      setCreatedcomment,\n      createdcomment,\n      intcomment,\n      setIntComment,\n      followPage,\n      affiliates,\n      isfollowingpage,\n      followeduser,\n      getFollowingUserPosts,\n      getFollowedUser,\n      setMonopageposts,\n      askList,\n      askListFull,\n      newRequestFriend,\n      createProfile,\n      editProfile,\n      deleteProfile,\n      changeApprovalRequest,\n      editedProfile,\n      setEditedProfile,\n      createMonoPost,\n      deleteMonopost,\n      getSpecificProfile,\n      newUserIntPage,\n      newUserIntPost,\n      newUserIntUser,\n      getUserInterest,\n      newUserIntAttribute,\n      getProfile,\n      getMonoComments,\n      getMonoPages,\n      getMonoPosts,\n      getFriendRequest,\n      followinguserpost,\n      followinguser,\n      mutualfollowinguser,\n      likePost,\n      createRepost,\n      followingpage,\n      owningpage,\n      pageattribute,\n      pagesforintattribute,\n      ownPage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1376,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiContextProvider, \"lRbPZgm3ioOBQ5GMCFyCtNcOUEA=\");\n_c = ApiContextProvider;\nexport default _c2 = withCookies(ApiContextProvider);\nvar _c, _c2;\n$RefreshReg$(_c, \"ApiContextProvider\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","createContext","useState","useEffect","withCookies","axios","jsxDEV","_jsxDEV","ApiContext","ApiContextProvider","props","_s","token","cookies","get","profile","setProfile","profiles","setProfiles","specificProfile","setSpecificProfile","editedProfile","setEditedProfile","id","nickName","caption","askList","setAskList","askData","setAskData","askListFull","setAskListFull","cover","setCover","coverBack","setCoverBack","monopages","setMonopages","monoposts","setMonoposts","mymonoposts","setMyMonoposts","monocomments","setMonocomments","pageattribute","setPageattribute","intpage","setIntpage","postsforintpage","setPostsforintpage","intpost","setIntpost","intuser","setIntuser","intcomment","setIntComment","intattribute","setIntAttribute","postsforintuser","setPostsforintuser","monopageposts","setMonopageposts","postimg","setPostimg","createdmonopost","setCreatedMonopost","text","rating","reviewTo","friendrequest","setFriendRequest","commentsforintpost","setCommentsforintpost","createdcomment","setCreatedcomment","post","followinguserpost","setFollowinguserpost","followinguser","setFollowinguser","followeduser","setFolloweduser","mutualfollowinguser","setMutualfollowinguser","followingpage","setFollowingpage","owningpage","setOwningpage","pagesforintattribute","setPagesforintattribute","affiliates","setAffiliates","isfollowingpage","setIsfollowingpage","isowningpage","setIsOwningpage","getMyProfile","resmy","headers","Authorization","res","data","filter","ask","userProfile","askTo","console","log","getFriendRequest","resreqall","requests","each","approved","requestsfromother","askFrom","getProfile","getMonoPages","getMonoPosts","getMonoComments","getAttribute","getFollowingUserPosts","respost","following","a","map","follow","b","concat","set","Set","includes","userPost","getFollowingUser","resprof","followinguserprof","prof","getFollowedUser","followedusers","followeduserprof","getMutualFollowingUser","getFollowingPage","respage","resfollow","followingpageid","pageId","followingpageinfo","page","getOwningPage","resown","owningpageid","own","owningpageinfo","getUserInterest","resintpage","resintpost","resintcomment","resintuser","resintattribute","resuser","rescomment","resattribute","resaf","find","Number","intPageId","intPostId","intCommentId","intUserId","intAttributeId","attribute","createProfile","createData","FormData","append","name","alert","createMonoPost","createRepost","targetpost","title","img","createMonoComment","deleteMonopost","deletepostid","delete","dev","getSpecificProfile","userid","deleteProfile","editProfile","editData","put","likePost","postdata","reposting","repostingFrom","repostingFromUser","liked","likes","compareFunc","Array","isArray","forEach","v","i","newRequestFriend","newUserIntPage","interestData","newUserIntPost","newUserIntUser","newUserIntAttribute","followPage","ownPage","changeApprovalRequest","uploadDataAsk","item","newDataAsk","newDataAskPut","resp","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/context/ApiContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nexport const ApiContext = createContext();\n\nconst ApiContextProvider = (props) => {\n  const token = props.cookies.get(\"current-token\");\n  const [profile, setProfile] = useState([]);\n  const [profiles, setProfiles] = useState([]);\n  const [specificProfile, setSpecificProfile] = useState([]);\n  const [editedProfile, setEditedProfile] = useState({ id: \"\", nickName: \"\" ,caption:\"\"});\n  const [askList, setAskList] = useState([]);\n  const [askData, setAskData] = useState([])\n  const [askListFull, setAskListFull] = useState([]);\n  const [cover, setCover] = useState([]);\n  const [coverBack, setCoverBack] = useState([]);\n  const [monopages, setMonopages] = useState([])\n  const [monoposts, setMonoposts] = useState([])\n  const [mymonoposts, setMyMonoposts] = useState([])\n  const [monocomments, setMonocomments] =useState([])\n  const [pageattribute, setPageattribute] =useState([])\n  const [intpage, setIntpage] = useState([])\n  const [postsforintpage, setPostsforintpage] = useState([])\n  const [intpost, setIntpost] = useState([])\n  const [intuser, setIntuser] = useState([])\n  const [intcomment, setIntComment] = useState([])\n  const [intattribute, setIntAttribute] = useState([])\n  const [postsforintuser, setPostsforintuser] = useState([])\n  const [monopageposts, setMonopageposts] = useState([])\n  const [postimg, setPostimg] = useState([])\n  const [createdmonopost, setCreatedMonopost] = useState({text:\"\", rating: \"\", reviewTo:\"\"})\n  const [friendrequest, setFriendRequest] =useState([])\n  const [commentsforintpost, setCommentsforintpost] =useState([])\n  const [createdcomment, setCreatedcomment] = useState({text:\"\", post:\"\"})\n  const [followinguserpost, setFollowinguserpost] = useState([])\n  const [followinguser, setFollowinguser] = useState([])\n  const [followeduser, setFolloweduser] = useState([])\n  const [mutualfollowinguser, setMutualfollowinguser] = useState([])\n  const [followingpage, setFollowingpage] = useState([])\n  const [owningpage, setOwningpage] = useState([])\n  const [pagesforintattribute, setPagesforintattribute] = useState([])\n  const [affiliates, setAffiliates] = useState([])\n  const [isfollowingpage, setIsfollowingpage] =useState([])\n  const [isowningpage, setIsOwningpage] =useState([])\n  \n\n  useEffect(() => {\n    const getMyProfile = async () => {\n      try {\n        const resmy = await axios.get(\n          \"http://localhost:8000/api/user/myprofile/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        const res = await axios.get(\n          \"http://localhost:8000/api/user/approval/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        resmy.data[0] && setProfile(resmy.data[0]);\n        resmy.data[0] &&\n          setEditedProfile({\n            id: resmy.data[0].id,\n            nickName: resmy.data[0].nickName,\n            caption: resmy.data[0].caption,\n          });\n        resmy.data[0] &&\n          setAskList(\n            res.data.filter((ask) => {\n              return resmy.data[0].userProfile === ask.askTo;\n            })\n          );\n        setAskListFull(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n\n\n    const getFriendRequest = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const requests = resreqall.data.filter((each) => {\n          return each.approved === false\n        })\n        const requestsfromother = requests.filter((each) => {\n          return each.askFrom !== profile.userProfile \n        })\n        setFriendRequest(requestsfromother)\n\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n\n\n\n    const getProfile = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        setProfiles(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    \n\n    const getMonoPages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        setMonopages(res.data)\n      } catch {\n        console.log(\"error\")\n      }\n    }\n    const getMonoPosts = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonoposts(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMonoComments = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonocomments(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getAttribute = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setPageattribute(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUserPosts = async () => {\n      try {\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const post =  respost.data.filter((post) => {\n          return (followinguser.includes(post.userPost))\n        })\n        post && setFollowinguserpost(post);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setFollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowedUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const concat = [...a]\n        const set = new Set(concat)\n        const followedusers = [...set]\n        const followeduserprof = resprof.data.filter((prof) => {\n          return (followedusers.includes(prof.userProfile))\n        })\n        followeduserprof && setFolloweduser(followeduserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMutualFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each.approved === true\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setMutualfollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n    const getFollowingPage = async () => {\n      try {\n        const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const followingpageid = resfollow.data.map((follow) => {\n          return follow.pageId\n        });\n        const followingpageinfo = respage.data.filter((page) => {\n          return (followingpageid.includes(page.id))\n        });\n        followingpageinfo && setFollowingpage(followingpageinfo);\n      } catch {\n        console.log(\"error\")\n      }\n    }\n\n    const getOwningPage = async () => {\n      try {\n        const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const owningpageid = resown.data.map((own) => {\n          return own.pageId\n        });\n        const owningpageinfo = respage.data.filter((page) => {\n          return (owningpageid.includes(page.id))\n        });\n        owningpageinfo && setOwningpage(owningpageinfo);\n      } catch {\n        console.log(\"error\")\n      }\n    }\n\n\n\n    const getUserInterest = async () => {\n      try {\n        const resintpage = await axios.get(\n          'http://localhost:8000/api/user/userintpage/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintpost = await axios.get(\n          'http://localhost:8000/api/user/userintpost/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintcomment = await axios.get(\n          'http://localhost:8000/api/user/userintcomment/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintuser = await axios.get(\n          'http://localhost:8000/api/user/userintuser/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        resintpage.data[0] &&\n        setIntpage(respage.data.find((each) => {\n          return each.id === Number(resintpage.data[0].intPageId)\n        }));\n        resintpost.data[0] &&\n        setIntpost(respost.data.find((each) => {\n          return each.id === Number(resintpost.data[0].intPostId)\n        }));\n        resintcomment.data[0] &&\n        setIntComment(rescomment.data.find((each) => {\n          return each.id === Number(resintcomment.data[0].intCommentId)\n        }));\n        resintuser.data[0] &&\n        setIntuser(resuser.data.find((each) => {\n          return each.userProfile === Number(resintuser.data[0].intUserId)\n        }));\n        resintattribute.data[0] &&\n        setIntAttribute(resattribute.data.find((each) => {\n          return each.id === Number(resintattribute.data[0].intAttributeId)\n        }));\n        resintpage.data[0] &&\n        setPostsforintpage(respost.data.filter((each) => {\n          return each.reviewTo === Number(resintpage.data[0].intPageId)\n        }));\n        resintuser.data[0] &&\n        setPostsforintuser(respost.data.filter((each) => {\n          return each.userPost === Number(resintuser.data[0].intUserId)\n        }));\n        resintpost.data[0] &&\n        setCommentsforintpost(rescomment.data.filter((each) => {\n          return each.post === Number(resintpost.data[0].intPostId)\n        }));\n        resintattribute.data[0] &&\n        setPagesforintattribute(respage.data.filter((each) => {\n          return each.attribute.includes(resintattribute.data[0].intAttributeId)\n        }));\n        resaf.data[0] &&\n        setAffiliates(resaf.data[0])\n        // const tmpIntpage =respage.data.find((each) => {\n        //   return each.id === Number(resintpage.data[0].intPageId)\n        // });\n        // tmpIntpage && \n        // setAffiliates(resaf.data.find((each) => {\n        //   return each.id === Number(tmpIntpage.affiliateId)\n        // }));\n        // tmpIntpage && \n        // setIsfollowingpage(respage.data.find((each) => {\n        //   return each.id === tmpIntpage.id\n        // }));\n        console.log(\"API実行\");\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n    getMyProfile();\n    getMonoComments();\n    getProfile();\n    getMonoPages();\n    getMonoPosts();\n    getUserInterest();\n    getUserInterest();\n    getUserInterest();\n    getFriendRequest();\n    getFollowingUserPosts();\n    getFollowingPage();\n    getOwningPage();\n    getAttribute();\n    getFollowingUser();\n    getMutualFollowingUser();\n    getFollowedUser();\n\n  }, [token, profile.id]);\n  \n\n  const getFollowingPage = async () => {\n    try {\n      const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const followingpageid = resfollow.data.map((follow) => {\n        return follow.pageId\n      });\n      const followingpageinfo = respage.data.filter((page) => {\n        return (followingpageid.includes(page.id))\n      });\n      followingpageinfo && setFollowingpage(followingpageinfo);\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const getOwningPage = async () => {\n    try {\n      const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const owningpageid = resown.data.map((own) => {\n        return own.pageId\n      });\n      const owningpageinfo = respage.data.filter((page) => {\n        return (owningpageid.includes(page.id))\n      });\n      owningpageinfo && setOwningpage(owningpageinfo);\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const getFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const followinguserprof = resprof.data.filter((prof) => {\n        return (followinguser.includes(prof.userProfile))\n      })\n      followinguserprof && setFollowinguser(followinguserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getFollowedUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const concat = [...a]\n      const set = new Set(concat)\n      const followedusers = [...set]\n      const followeduserprof = resprof.data.filter((prof) => {\n        return (followedusers.includes(prof.userProfile))\n      })\n      followeduserprof && setFollowinguser(followeduserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getMutualFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each.approved === true\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const followinguserprof = resprof.data.filter((prof) => {\n        return (followinguser.includes(prof.userProfile))\n      })\n      followinguserprof && setMutualfollowinguser(followinguserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getFriendRequest = async () => {\n    try {\n  \n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const requests = resreqall.data.filter((each) => {\n        return each.approved === false\n      })\n      requests.data && setFriendRequest(requests)\n      // requests.data && setFriendRequest(requests.filter((each) => {\n      //   return each.askTo === Number(resprof.data[0].userProfile)\n      // }))\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n\n\n\n\n  const getProfile = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      setProfiles(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  \n  \n\n  const getMonoPages = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      setMonopages(res.data)\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  const getMonoPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonoposts(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n  \n  const getFollowingUserPosts = async () => {\n    try {\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const post =  respost.data.filter((post) => {\n        return (followinguser.includes(post.userPost))\n      })\n      post && setFollowinguserpost(post)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getMonoComments = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonocomments(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getUserInterest = async () => {\n    try {\n      const resintpage = await axios.get(\n        'http://localhost:8000/api/user/userintpage/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintpost = await axios.get(\n        'http://localhost:8000/api/user/userintpost/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintcomment = await axios.get(\n        'http://localhost:8000/api/user/userintcomment/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintuser = await axios.get(\n        'http://localhost:8000/api/user/userintuser/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpage.data[0] &&\n      setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpost.data[0] &&\n      setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintcomment.data[0] &&\n      setIntComment(rescomment.data.find((each) => {\n        return each.id === Number(resintcomment.data[0].intCommentId)\n      }));\n      resintuser.data[0] &&\n      setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintpage.data[0] &&\n      setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }));\n      resintuser.data[0] &&\n      setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }));\n      resintpost.data[0] &&\n      setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      resaf.data[0] &&\n      setAffiliates(resaf.data[0])\n      // const tmpIntpage =respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // });\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const createProfile = async () => {\n    const createData = new FormData();\n    editedProfile.nickName && createData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && createData.append(\"caption\", editedProfile.caption);\n    cover.name && createData.append(\"img\", cover, cover.name);\n    coverBack.name && createData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/user/profile/\",\n        createData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n      setEditedProfile({ id: res.data.id, nickName: res.data.nickName, caption:res.data.caption });\n      alert(\"プロフィールを新規作成しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const createMonoPost = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdmonopost.text)\n    createData.append(\"rating\", createdmonopost.rating)\n    createData.append(\"reviewTo\", createdmonopost.reviewTo)\n    postimg.name && createData.append(\"img\", postimg, postimg.name);\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoPosts()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const createRepost = async (targetpost) => {\n    const createData = new FormData();\n    createData.append(\"title\", targetpost.title)\n    createData.append(\"text\", targetpost.text)\n    createData.append(\"rating\", targetpost.rating)\n    createData.append(\"reviewTo\", targetpost.reviewTo)\n    createData.append(\"reposting\", true)\n    createData.append(\"repostingFrom\", targetpost.id)\n    createData.append(\"repostingFromUser\", targetpost.userPost)\n    targetpost.img && createData.append(\"text\", targetpost.text+'  【画像付き】')\n    ;\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    );\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getUserInterest();\n    getUserInterest();\n    \n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n\n\n  const createMonoComment = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdcomment.text)\n    createData.append(\"post\", createdcomment.post)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monocomment/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoComments()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  \n\n  const deleteMonopost = async (deletepostid) => {\n    try {\n      await axios.delete (\n        `http://localhost:8000/api/user/monopost/${deletepostid}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      setMonoposts(monoposts.filter((dev) => dev.id !== deletepostid));\n      setMyMonoposts(mymonoposts.filter((dev) => dev.id !== deletepostid));\n      setPostimg([]);\n    } catch {\n      console.log(\"error\");\n    };\n  };\n\n  const getSpecificProfile = async (userid) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/user/profile/${userid}`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n    })\n    setSpecificProfile(res.data);\n    return specificProfile.img\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const deleteProfile = async () => {\n    try {\n      await axios.delete(\n        `http://localhost:8000/api/user/profile/${profile.id}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfiles(profiles.filter((dev) => dev.id !== profile.id));\n      setProfile([]);\n      setEditedProfile({ id: \"\", nickName: \"\", caption:\"\" });\n      setCover([]);\n      setCoverBack([]);\n      setAskList([]);\n      alert(\"プロフィールを削除しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const editProfile = async () => {\n    const editData = new FormData();\n    editedProfile.nickName && editData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && editData.append(\"caption\", editedProfile.caption);\n    cover.name && editData.append(\"img\", cover, cover.name);\n    coverBack.name && editData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.put(\n        `http://localhost:8000/api/user/profile/${profile.id}/`,\n        editData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n      alert(\"変更を保存しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const likePost =async (postdata) => {\n    const editData = new FormData();\n    editData.append(\"text\",postdata.text);\n    editData.append(\"reviewTo\",postdata.reviewTo);\n    editData.append(\"rating\",postdata.rating);\n    editData.append(\"reposting\",postdata.reposting);\n    postdata.repostingFrom && editData.append(\"repostingFrom\",postdata.repostingFrom);\n    postdata.repostingFromUser && editData.append(\"repostingFromUser\",postdata.repostingFromUser);\n    const concat = [...postdata.liked, profile.userProfile]\n    const set = new Set(concat)\n    const likes = [...set].map(Number);\n    const compareFunc = (a,b) => {\n      return a - b;\n    }\n    if (Array.isArray(likes)) {\n      likes.forEach((v, i) => {\n        editData.append(\"liked\" , v) \n      })\n    } else {\n      editData.append(\"liked\", likes)\n    }\n    \n    \n  try {\n    const res = await axios.put(\n      `http://localhost:8000/api/user/monopost/${postdata.id}/`,\n      editData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      } \n    )\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getUserInterest();\n    getUserInterest();\n  } catch {\n    console.log(\"error\")\n  }\n  }\n\n\n  const newRequestFriend = async (askData) => {\n    try {\n      const res = await axios.post(\n        `http://localhost:8000/api/user/approval/`,\n        askData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskListFull([...askListFull, res.data]);\n      getFollowingUserPosts();\n      getFriendRequest();\n      getFollowingUser();\n      getMutualFollowingUser();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n\n  \n  const newUserIntPage = async (interestData) => {\n    const createData = new FormData();\n    try {\n      const resintpage = await axios.post(\n        \"http://localhost:8000/api/user/userintpage/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n      resintpage.data[0] && setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpage.data[0] && setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }))\n      // const tmpIntpage = respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // })\n      resintpage.data[0] && setAffiliates(resaf.data[0])\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  const newUserIntPost = async (interestData) => {\n    try {\n      const resintpost = await axios.post(\n        \"http://localhost:8000/api/user/userintpost/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpost.data[0] && setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintpost.data[0] && setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  \n\n  const newUserIntUser = async (interestData) => {\n    try {\n      const resintuser = await axios.post(\n        \"http://localhost:8000/api/user/userintuser/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintuser.data[0] && setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintuser.data[0] && setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const newUserIntAttribute = async (interestData) => {\n    try {\n      const resintattribute = await axios.post(\n        \"http://localhost:8000/api/user/userintattribute/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const followPage = async (id) => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/followingpage/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getFollowingPage()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const ownPage = async (id) => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/owningpage/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getOwningPage()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const changeApprovalRequest = async (uploadDataAsk, ask) => {\n    try {\n      const res = await axios.put(\n        `http://localhost:8000/api/user/approval/${ask.id}/`,\n        uploadDataAsk,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskList(askList.map((item) => (item.id === ask.id ? res.data : item)));\n\n      const newDataAsk = new FormData();\n      newDataAsk.append(\"askTo\", ask.askFrom);\n      newDataAsk.append(\"approved\", true);\n\n      const newDataAskPut = new FormData();\n      newDataAskPut.append(\"askTo\", ask.askFrom);\n      newDataAskPut.append(\"askFrom\", ask.askTo);\n      newDataAskPut.append(\"approved\", true);\n\n      const resp = askListFull.filter((item) => {\n        return item.askFrom === profile.userProfile && item.askTo === ask.askFrom;\n      });\n\n      !resp[0]\n        ? await axios.post(\n            `http://localhost:8000/api/user/approval/`,\n            newDataAsk,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          )\n        : await axios.put(\n            `http://localhost:8000/api/user/approval/${resp[0].id}/`,\n            newDataAskPut,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          );\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  return (\n    <ApiContext.Provider\n      value={{\n        askData,\n        setAskData,\n        profile,\n        profiles,\n        specificProfile,\n        setSpecificProfile,\n        cover,\n        setCover,\n        friendrequest,\n        setFriendRequest,\n        monopages,\n        setMonopages,\n        monoposts,\n        setMonoposts,\n        mymonoposts,\n        setMyMonoposts,\n        monocomments,\n        setMonocomments,\n        postimg,\n        setPostimg,\n        createdmonopost,\n        setCreatedMonopost,\n        coverBack,\n        setCoverBack,\n        monopageposts,\n        intpage,\n        setIntpage,\n        intpost,\n        setIntpost,\n        intuser,\n        setIntuser,\n        postsforintpage,\n        setPostsforintpage,\n        postsforintuser,\n        setPostsforintuser,\n        commentsforintpost,\n        setCommentsforintpost,\n        createMonoComment,\n        setCreatedcomment,\n        createdcomment,\n        intcomment,\n        setIntComment,\n        followPage,\n        affiliates,\n        isfollowingpage,\n        followeduser,\n        getFollowingUserPosts,\n        getFollowedUser,\n        setMonopageposts,\n        askList,\n        askListFull,\n        newRequestFriend,\n        createProfile,\n        editProfile,\n        deleteProfile,\n        changeApprovalRequest,\n        editedProfile,\n        setEditedProfile,\n        createMonoPost,\n        deleteMonopost,\n        getSpecificProfile,\n        newUserIntPage,\n        newUserIntPost,\n        newUserIntUser,\n        getUserInterest,\n        newUserIntAttribute,\n        getProfile,\n        getMonoComments,\n        getMonoPages,\n        getMonoPosts,\n        getFriendRequest,\n        followinguserpost,\n        followinguser,\n        mutualfollowinguser,\n        likePost,\n        createRepost,\n        followingpage,\n        owningpage,\n        pageattribute,\n        pagesforintattribute,\n        ownPage,\n      }}\n    >\n      {props.children}\n    </ApiContext.Provider>\n  );\n};\n\nexport default withCookies(ApiContextProvider);"],"mappings":"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"},"metadata":{},"sourceType":"module"}