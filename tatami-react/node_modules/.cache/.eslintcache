[{"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/index.jsx":"1","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/context/ApiContext.js":"2","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Home.jsx":"3","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Recommenduser.jsx":"4","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Recommend.jsx":"5","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Request.jsx":"6","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Mono.jsx":"7","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Users.jsx":"8","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Login.jsx":"9","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Settings.jsx":"10","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Following.jsx":"11","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Analytics.jsx":"12","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/ReccomendPosts.jsx":"13","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Account.jsx":"14","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/SpecificUserpage.jsx":"15","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Userpage.jsx":"16","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/MutualFollowing.jsx":"17","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Postview.jsx":"18","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/FriendRecommendslider.jsx":"19","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/FollowingPage.jsx":"20","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/HomeReccomendPage.jsx":"21","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/RecommendEach.jsx":"22","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Header.jsx":"23","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Leftnav.jsx":"24","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Appfooter.jsx":"25","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Popupchat.jsx":"26","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/AttributeEach.jsx":"27","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RecommenduserEach.jsx":"28","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/UsersEach.jsx":"29","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Requestleft.jsx":"30","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Pagetitle.jsx":"31","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/HomePicture.jsx":"32","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Createpost.jsx":"33","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/actionTypes.jsx":"34","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/MonoPicture.jsx":"35","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/UserpagePicture.jsx":"36","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Profiledetail.jsx":"37","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RequestEach.jsx":"38","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/FollowEach.jsx":"39","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserpageEach.jsx":"40","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserProfileDetail.jsx":"41","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserpagePicture.jsx":"42","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/AccountEach.jsx":"43","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Commentview.jsx":"44","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Createcomment.jsx":"45","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/getCroppedImg.jsx":"46","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RequestleftEach.jsx":"47","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Darkbutton.jsx":"48","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModal.jsx":"49","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModalforprof.jsx":"50","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/ProfBack.jsx":"51","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModalforback.jsx":"52","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/App.jsx":"53","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/index.jsx":"54","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/App.jsx":"55","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/context/ApiContext.js":"56","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Home.jsx":"57","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Request.jsx":"58","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Userpage.jsx":"59","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Following.jsx":"60","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/SpecificUserpage.jsx":"61","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Recommend.jsx":"62","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/ReccomendPosts.jsx":"63","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Mono.jsx":"64","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Users.jsx":"65","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Login.jsx":"66","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/MutualFollowing.jsx":"67","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Recommenduser.jsx":"68","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Analytics.jsx":"69","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Account.jsx":"70","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Settings.jsx":"71","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FriendRecommendslider.jsx":"72","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/RecommendEach.jsx":"73","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Postview.jsx":"74","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/HomeReccomendPage.jsx":"75","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FollowingPage.jsx":"76","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Leftnav.jsx":"77","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Header.jsx":"78","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RequestEach.jsx":"79","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Popupchat.jsx":"80","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Profiledetail.jsx":"81","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/FollowEach.jsx":"82","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/UserpagePicture.jsx":"83","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserpagePicture.jsx":"84","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/AttributeEach.jsx":"85","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/MonoPicture.jsx":"86","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Createpost.jsx":"87","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/HomePicture.jsx":"88","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserProfileDetail.jsx":"89","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserpageEach.jsx":"90","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/AccountEach.jsx":"91","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Appfooter.jsx":"92","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Requestleft.jsx":"93","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Pagetitle.jsx":"94","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/actionTypes.jsx":"95","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RecommenduserEach.jsx":"96","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/UsersEach.jsx":"97","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Createcomment.jsx":"98","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Commentview.jsx":"99","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/getCroppedImg.jsx":"100","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModal.jsx":"101","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Darkbutton.jsx":"102","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/ProfBack.jsx":"103","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModalforprof.jsx":"104","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RequestleftEach.jsx":"105","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModalforback.jsx":"106","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Logout.jsx":"107","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/LoginComponent.jsx":"108","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Followed.jsx":"109","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FollowingPageList.jsx":"110","/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/ProfileRecommender.jsx":"111","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/index.jsx":"112","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/App.jsx":"113","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/context/ApiContext.js":"114","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Home.jsx":"115","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Userpage.jsx":"116","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Recommenduser.jsx":"117","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FollowingPageList.jsx":"118","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Users.jsx":"119","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Recommend.jsx":"120","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Followed.jsx":"121","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Following.jsx":"122","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/MutualFollowing.jsx":"123","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/ReccomendPosts.jsx":"124","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Request.jsx":"125","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Mono.jsx":"126","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Login.jsx":"127","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Logout.jsx":"128","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Account.jsx":"129","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/SpecificUserpage.jsx":"130","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Settings.jsx":"131","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Analytics.jsx":"132","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Postview.jsx":"133","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FriendRecommendslider.jsx":"134","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/HomeReccomendPage.jsx":"135","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FollowingPage.jsx":"136","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/RecommendEach.jsx":"137","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Appfooter.jsx":"138","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Header.jsx":"139","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Leftnav.jsx":"140","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/LoginComponent.jsx":"141","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/HomePicture.jsx":"142","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Requestleft.jsx":"143","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Profiledetail.jsx":"144","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserProfileDetail.jsx":"145","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Popupchat.jsx":"146","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/AttributeEach.jsx":"147","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Pagetitle.jsx":"148","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/UsersEach.jsx":"149","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/UserpagePicture.jsx":"150","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserpageEach.jsx":"151","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserpagePicture.jsx":"152","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RecommenduserEach.jsx":"153","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/FollowEach.jsx":"154","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/ProfileRecommender.jsx":"155","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/MonoPicture.jsx":"156","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/AccountEach.jsx":"157","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Createpost.jsx":"158","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/actionTypes.jsx":"159","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RequestEach.jsx":"160","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Createcomment.jsx":"161","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Commentview.jsx":"162","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RequestleftEach.jsx":"163","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Darkbutton.jsx":"164","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/getCroppedImg.jsx":"165","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModalforprof.jsx":"166","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/ProfBack.jsx":"167","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModal.jsx":"168","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModalforback.jsx":"169","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/api/checkout_sessions.js":"170","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/GetPage.jsx":"171","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningPage.jsx":"172","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/GotPage.jsx":"173","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningPages.jsx":"174","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningEach.jsx":"175"},{"size":145,"mtime":1686116665829,"results":"176","hashOfConfig":"177"},{"size":34358,"mtime":1686280586734,"results":"178","hashOfConfig":"177"},{"size":4688,"mtime":1685446109086,"results":"179","hashOfConfig":"177"},{"size":3777,"mtime":1684928909628,"results":"180","hashOfConfig":"177"},{"size":5159,"mtime":1685357109370,"results":"181","hashOfConfig":"177"},{"size":1615,"mtime":1684928888687,"results":"182","hashOfConfig":"177"},{"size":9667,"mtime":1685009622614,"results":"183","hashOfConfig":"177"},{"size":1805,"mtime":1684928841531,"results":"184","hashOfConfig":"177"},{"size":11327,"mtime":1686280610071,"results":"185","hashOfConfig":"177"},{"size":4205,"mtime":1684928877772,"results":"186","hashOfConfig":"177"},{"size":4580,"mtime":1685075206345,"results":"187","hashOfConfig":"177"},{"size":7221,"mtime":1684929794113,"results":"188","hashOfConfig":"177"},{"size":1717,"mtime":1684929045747,"results":"189","hashOfConfig":"177"},{"size":460,"mtime":1684929821866,"results":"190","hashOfConfig":"177"},{"size":2112,"mtime":1685072807207,"results":"191","hashOfConfig":"177"},{"size":4488,"mtime":1685355948068,"results":"192","hashOfConfig":"177"},{"size":4508,"mtime":1685075224650,"results":"193","hashOfConfig":"177"},{"size":12473,"mtime":1685008468113,"results":"194","hashOfConfig":"177"},{"size":2138,"mtime":1684929626468,"results":"195","hashOfConfig":"177"},{"size":1306,"mtime":1684929847736,"results":"196","hashOfConfig":"177"},{"size":2416,"mtime":1684929501588,"results":"197","hashOfConfig":"177"},{"size":2736,"mtime":1685370226552,"results":"198","hashOfConfig":"177"},{"size":8026,"mtime":1685077905934,"results":"199","hashOfConfig":"177"},{"size":2583,"mtime":1684930480102,"results":"200","hashOfConfig":"177"},{"size":1065,"mtime":1685077830173,"results":"201","hashOfConfig":"177"},{"size":182,"mtime":1684930420415,"results":"202","hashOfConfig":"177"},{"size":1089,"mtime":1685355655345,"results":"203","hashOfConfig":"177"},{"size":2521,"mtime":1685370167572,"results":"204","hashOfConfig":"177"},{"size":2094,"mtime":1684930312982,"results":"205","hashOfConfig":"177"},{"size":995,"mtime":1684377673564,"results":"206","hashOfConfig":"177"},{"size":977,"mtime":1684930428394,"results":"207","hashOfConfig":"177"},{"size":3299,"mtime":1685371536958,"results":"208","hashOfConfig":"177"},{"size":9057,"mtime":1684925754832,"results":"209","hashOfConfig":"177"},{"size":311,"mtime":1683542660470,"results":"210","hashOfConfig":"177"},{"size":3311,"mtime":1684930436183,"results":"211","hashOfConfig":"177"},{"size":3402,"mtime":1685068154378,"results":"212","hashOfConfig":"177"},{"size":1166,"mtime":1685368733471,"results":"213","hashOfConfig":"177"},{"size":2742,"mtime":1684930338030,"results":"214","hashOfConfig":"177"},{"size":2003,"mtime":1685071846166,"results":"215","hashOfConfig":"177"},{"size":3191,"mtime":1685075237984,"results":"216","hashOfConfig":"177"},{"size":605,"mtime":1685072781729,"results":"217","hashOfConfig":"177"},{"size":3358,"mtime":1684930278966,"results":"218","hashOfConfig":"177"},{"size":11385,"mtime":1685067446478,"results":"219","hashOfConfig":"177"},{"size":2008,"mtime":1684929780972,"results":"220","hashOfConfig":"177"},{"size":1952,"mtime":1684930621664,"results":"221","hashOfConfig":"177"},{"size":1564,"mtime":1684930572281,"results":"222","hashOfConfig":"177"},{"size":2014,"mtime":1684930329365,"results":"223","hashOfConfig":"177"},{"size":1146,"mtime":1684930598909,"results":"224","hashOfConfig":"177"},{"size":3724,"mtime":1684205541435,"results":"225","hashOfConfig":"177"},{"size":3742,"mtime":1685066732402,"results":"226","hashOfConfig":"177"},{"size":5819,"mtime":1685069216170,"results":"227","hashOfConfig":"177"},{"size":3736,"mtime":1685074949727,"results":"228","hashOfConfig":"177"},{"size":2578,"mtime":1686304718820,"results":"229","hashOfConfig":"177"},{"size":145,"mtime":1686116665829,"results":"230","hashOfConfig":"231"},{"size":2954,"mtime":1687842031222,"results":"232","hashOfConfig":"231"},{"size":41739,"mtime":1687865167385,"results":"233","hashOfConfig":"231"},{"size":7010,"mtime":1687763740755,"results":"234","hashOfConfig":"231"},{"size":2545,"mtime":1687762643241,"results":"235","hashOfConfig":"231"},{"size":8698,"mtime":1687864713173,"results":"236","hashOfConfig":"231"},{"size":6513,"mtime":1687864682983,"results":"237","hashOfConfig":"231"},{"size":3786,"mtime":1687762777904,"results":"238","hashOfConfig":"231"},{"size":7099,"mtime":1687762622002,"results":"239","hashOfConfig":"231"},{"size":2678,"mtime":1687762613557,"results":"240","hashOfConfig":"231"},{"size":11572,"mtime":1687763078917,"results":"241","hashOfConfig":"231"},{"size":3315,"mtime":1687762765908,"results":"242","hashOfConfig":"231"},{"size":11266,"mtime":1687837866904,"results":"243","hashOfConfig":"231"},{"size":6436,"mtime":1687864700741,"results":"244","hashOfConfig":"231"},{"size":5345,"mtime":1687762593556,"results":"245","hashOfConfig":"231"},{"size":7221,"mtime":1684929794113,"results":"246","hashOfConfig":"231"},{"size":460,"mtime":1684929821866,"results":"247","hashOfConfig":"231"},{"size":5116,"mtime":1687771056771,"results":"248","hashOfConfig":"231"},{"size":2534,"mtime":1687762439154,"results":"249","hashOfConfig":"231"},{"size":2875,"mtime":1687863802231,"results":"250","hashOfConfig":"231"},{"size":13934,"mtime":1687864702660,"results":"251","hashOfConfig":"231"},{"size":2416,"mtime":1684929501588,"results":"252","hashOfConfig":"231"},{"size":1322,"mtime":1687763909873,"results":"253","hashOfConfig":"231"},{"size":2583,"mtime":1684930480102,"results":"254","hashOfConfig":"231"},{"size":8041,"mtime":1687864758913,"results":"255","hashOfConfig":"231"},{"size":2749,"mtime":1687864764208,"results":"256","hashOfConfig":"231"},{"size":182,"mtime":1684930420415,"results":"257","hashOfConfig":"231"},{"size":1553,"mtime":1686903914681,"results":"258","hashOfConfig":"231"},{"size":2010,"mtime":1687864758076,"results":"259","hashOfConfig":"231"},{"size":3296,"mtime":1687077629264,"results":"260","hashOfConfig":"231"},{"size":3202,"mtime":1687271304555,"results":"261","hashOfConfig":"231"},{"size":1098,"mtime":1687761099937,"results":"262","hashOfConfig":"231"},{"size":3203,"mtime":1687231119950,"results":"263","hashOfConfig":"231"},{"size":10662,"mtime":1687748576492,"results":"264","hashOfConfig":"231"},{"size":3302,"mtime":1687764014458,"results":"265","hashOfConfig":"231"},{"size":605,"mtime":1685072781729,"results":"266","hashOfConfig":"231"},{"size":4577,"mtime":1687864659398,"results":"267","hashOfConfig":"231"},{"size":12610,"mtime":1687864486470,"results":"268","hashOfConfig":"231"},{"size":1289,"mtime":1687864752881,"results":"269","hashOfConfig":"231"},{"size":961,"mtime":1687763770681,"results":"270","hashOfConfig":"231"},{"size":961,"mtime":1687257883383,"results":"271","hashOfConfig":"231"},{"size":311,"mtime":1683542660470,"results":"272","hashOfConfig":"231"},{"size":2890,"mtime":1687864763241,"results":"273","hashOfConfig":"231"},{"size":2101,"mtime":1687864667491,"results":"274","hashOfConfig":"231"},{"size":1914,"mtime":1687685233145,"results":"275","hashOfConfig":"231"},{"size":1998,"mtime":1687864675857,"results":"276","hashOfConfig":"231"},{"size":1564,"mtime":1684930572281,"results":"277","hashOfConfig":"231"},{"size":3724,"mtime":1684205541435,"results":"278","hashOfConfig":"231"},{"size":1146,"mtime":1684930598909,"results":"279","hashOfConfig":"231"},{"size":6092,"mtime":1687088776522,"results":"280","hashOfConfig":"231"},{"size":3742,"mtime":1685066732402,"results":"281","hashOfConfig":"231"},{"size":2890,"mtime":1687763858272,"results":"282","hashOfConfig":"231"},{"size":3736,"mtime":1685074949727,"results":"283","hashOfConfig":"231"},{"size":4193,"mtime":1687864695878,"results":"284","hashOfConfig":"231"},{"size":8814,"mtime":1687864950479,"results":"285","hashOfConfig":"231"},{"size":6473,"mtime":1687864679291,"results":"286","hashOfConfig":"231"},{"size":6503,"mtime":1687864687764,"results":"287","hashOfConfig":"231"},{"size":1155,"mtime":1687762204466,"results":"288","hashOfConfig":"231"},{"size":145,"mtime":1686116665829,"results":"289","hashOfConfig":"290"},{"size":3984,"mtime":1688122335386,"results":"291","hashOfConfig":"290"},{"size":43520,"mtime":1689307016405,"results":"292","hashOfConfig":"290"},{"size":7010,"mtime":1687763740755,"results":"293","hashOfConfig":"290"},{"size":8698,"mtime":1687864713173,"results":"294","hashOfConfig":"290"},{"size":5345,"mtime":1687762593556,"results":"295","hashOfConfig":"290"},{"size":6503,"mtime":1687864687764,"results":"296","hashOfConfig":"290"},{"size":3315,"mtime":1687762765908,"results":"297","hashOfConfig":"290"},{"size":7099,"mtime":1687762622002,"results":"298","hashOfConfig":"290"},{"size":6473,"mtime":1687864679291,"results":"299","hashOfConfig":"290"},{"size":6513,"mtime":1687864682983,"results":"300","hashOfConfig":"290"},{"size":6436,"mtime":1687864700741,"results":"301","hashOfConfig":"290"},{"size":2678,"mtime":1687762613557,"results":"302","hashOfConfig":"290"},{"size":2545,"mtime":1687762643241,"results":"303","hashOfConfig":"290"},{"size":13556,"mtime":1688117025060,"results":"304","hashOfConfig":"290"},{"size":11266,"mtime":1688122304838,"results":"305","hashOfConfig":"290"},{"size":4193,"mtime":1687864695878,"results":"306","hashOfConfig":"290"},{"size":460,"mtime":1684929821866,"results":"307","hashOfConfig":"290"},{"size":3786,"mtime":1687762777904,"results":"308","hashOfConfig":"290"},{"size":5116,"mtime":1687771056771,"results":"309","hashOfConfig":"290"},{"size":7221,"mtime":1684929794113,"results":"310","hashOfConfig":"290"},{"size":13958,"mtime":1688310277909,"results":"311","hashOfConfig":"290"},{"size":2534,"mtime":1687762439154,"results":"312","hashOfConfig":"290"},{"size":2416,"mtime":1684929501588,"results":"313","hashOfConfig":"290"},{"size":1322,"mtime":1687763909873,"results":"314","hashOfConfig":"290"},{"size":3317,"mtime":1688187546854,"results":"315","hashOfConfig":"290"},{"size":1292,"mtime":1687961166582,"results":"316","hashOfConfig":"290"},{"size":8129,"mtime":1687958250739,"results":"317","hashOfConfig":"290"},{"size":2583,"mtime":1684930480102,"results":"318","hashOfConfig":"290"},{"size":8814,"mtime":1688187560891,"results":"319","hashOfConfig":"290"},{"size":3302,"mtime":1687764014458,"results":"320","hashOfConfig":"290"},{"size":961,"mtime":1687763770681,"results":"321","hashOfConfig":"290"},{"size":1553,"mtime":1686903914681,"results":"322","hashOfConfig":"290"},{"size":605,"mtime":1685072781729,"results":"323","hashOfConfig":"290"},{"size":182,"mtime":1684930420415,"results":"324","hashOfConfig":"290"},{"size":1098,"mtime":1687761099937,"results":"325","hashOfConfig":"290"},{"size":961,"mtime":1687257883383,"results":"326","hashOfConfig":"290"},{"size":2101,"mtime":1687864667491,"results":"327","hashOfConfig":"290"},{"size":3296,"mtime":1687077629264,"results":"328","hashOfConfig":"290"},{"size":4577,"mtime":1687864659398,"results":"329","hashOfConfig":"290"},{"size":3202,"mtime":1687271304555,"results":"330","hashOfConfig":"290"},{"size":2890,"mtime":1687864763241,"results":"331","hashOfConfig":"290"},{"size":2010,"mtime":1687864758076,"results":"332","hashOfConfig":"290"},{"size":1155,"mtime":1687762204466,"results":"333","hashOfConfig":"290"},{"size":3203,"mtime":1687231119950,"results":"334","hashOfConfig":"290"},{"size":12610,"mtime":1687864486470,"results":"335","hashOfConfig":"290"},{"size":10662,"mtime":1687748576492,"results":"336","hashOfConfig":"290"},{"size":311,"mtime":1683542660470,"results":"337","hashOfConfig":"290"},{"size":2749,"mtime":1687864764208,"results":"338","hashOfConfig":"290"},{"size":1914,"mtime":1687685233145,"results":"339","hashOfConfig":"290"},{"size":1998,"mtime":1687864675857,"results":"340","hashOfConfig":"290"},{"size":2890,"mtime":1687763858272,"results":"341","hashOfConfig":"290"},{"size":1146,"mtime":1684930598909,"results":"342","hashOfConfig":"290"},{"size":1564,"mtime":1684930572281,"results":"343","hashOfConfig":"290"},{"size":3742,"mtime":1685066732402,"results":"344","hashOfConfig":"290"},{"size":6092,"mtime":1687088776522,"results":"345","hashOfConfig":"290"},{"size":3724,"mtime":1684205541435,"results":"346","hashOfConfig":"290"},{"size":3736,"mtime":1685074949727,"results":"347","hashOfConfig":"290"},{"size":921,"mtime":1687930080844,"results":"348","hashOfConfig":"349"},{"size":3605,"mtime":1687950579212,"results":"350","hashOfConfig":"290"},{"size":9262,"mtime":1687960959243,"results":"351","hashOfConfig":"290"},{"size":3103,"mtime":1687957639856,"results":"352","hashOfConfig":"290"},{"size":5718,"mtime":1687959152565,"results":"353","hashOfConfig":"290"},{"size":2881,"mtime":1687959235733,"results":"354","hashOfConfig":"290"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16w8m0q",{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w8m0yz",{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},"14co3yc",{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"601"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"601"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"601"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"601"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"601"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"601"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"601"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"601"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"601"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"601"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"601"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"601"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"601"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"601"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"601"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"601"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"601"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"601"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"601"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"601"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"601"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"601"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"601"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"601"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"601"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"601"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"601"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"601"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"601"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"601"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"601"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"601"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"601"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"601"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"601"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s9cmh3",{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"601"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"601"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"601"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"601"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"601"},"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/index.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/context/ApiContext.js",["769","770","771","772","773","774","775"],"import React, { createContext, useState, useEffect } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nexport const ApiContext = createContext();\n\nconst ApiContextProvider = (props) => {\n  const token = props.cookies.get(\"current-token\");\n  const [profile, setProfile] = useState([]);\n  const [profiles, setProfiles] = useState([]);\n  const [specificProfile, setSpecificProfile] = useState([]);\n  const [editedProfile, setEditedProfile] = useState({ id: \"\", nickName: \"\" ,caption:\"\"});\n  const [askList, setAskList] = useState([]);\n  const [askData, setAskData] = useState([])\n  const [askListFull, setAskListFull] = useState([]);\n  const [cover, setCover] = useState([]);\n  const [coverBack, setCoverBack] = useState([]);\n  const [monopages, setMonopages] = useState([])\n  const [monoposts, setMonoposts] = useState([])\n  const [mymonoposts, setMyMonoposts] = useState([])\n  const [monocomments, setMonocomments] =useState([])\n  const [pageattribute, setPageattribute] =useState([])\n  const [intpage, setIntpage] = useState([])\n  const [postsforintpage, setPostsforintpage] = useState([])\n  const [intpost, setIntpost] = useState([])\n  const [intuser, setIntuser] = useState([])\n  const [intcomment, setIntComment] = useState([])\n  const [intattribute, setIntAttribute] = useState([])\n  const [postsforintuser, setPostsforintuser] = useState([])\n  const [monopageposts, setMonopageposts] = useState([])\n  const [postimg, setPostimg] = useState([])\n  const [createdmonopost, setCreatedMonopost] = useState({text:\"\", rating: \"\", reviewTo:\"\"})\n  const [friendrequest, setFriendRequest] =useState([])\n  const [commentsforintpost, setCommentsforintpost] =useState([])\n  const [createdcomment, setCreatedcomment] = useState({text:\"\", post:\"\"})\n  const [followinguserpost, setFollowinguserpost] = useState([])\n  const [followinguser, setFollowinguser] = useState([])\n  const [mutualfollowinguser, setMutualfollowinguser] = useState([])\n  const [followingpage, setFollowingpage] = useState([])\n  const [pagesforintattribute, setPagesforintattribute] = useState([])\n  const [affiliates, setAffiliates] = useState([])\n\n  useEffect(() => {\n    const getMyProfile = async () => {\n      try {\n        const resmy = await axios.get(\n          \"https://tatami-server.com/api/user/myprofile/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        const res = await axios.get(\n          \"https://tatami-server.com/api/user/approval/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        resmy.data[0] && setProfile(resmy.data[0]);\n        resmy.data[0] &&\n          setEditedProfile({\n            id: resmy.data[0].id,\n            nickName: resmy.data[0].nickName,\n            caption: resmy.data[0].caption,\n          });\n        resmy.data[0] &&\n          setAskList(\n            res.data.filter((ask) => {\n              return resmy.data[0].userProfile === ask.askTo;\n            })\n          );\n        setAskListFull(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n\n\n    const getFriendRequest = async () => {\n      try {\n        const resreqall = await axios.get(\"https://tatami-server.com/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const requests = resreqall.data.filter((each) => {\n          return each.approved === false\n        })\n        setFriendRequest(requests)\n\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n\n\n\n    const getProfile = async () => {\n      try {\n        const res = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        setProfiles(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    \n\n    const getMonoPages = async () => {\n      try {\n        const res = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        setMonopages(res.data)\n      } catch {\n        console.log(\"error\")\n      }\n    }\n    const getMonoPosts = async () => {\n      try {\n        const res = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonoposts(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMonoComments = async () => {\n      try {\n        const res = await axios.get(\"https://tatami-server.com/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonocomments(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getAttribute = async () => {\n      try {\n        const res = await axios.get(\"https://tatami-server.com/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setPageattribute(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUserPosts = async () => {\n      try {\n        const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resreqall = await axios.get(\"https://tatami-server.com/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const post =  respost.data.filter((post) => {\n          return (followinguser.includes(post.userPost))\n        })\n        post && setFollowinguserpost(post)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"https://tatami-server.com/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setFollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMutualFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"https://tatami-server.com/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each.approved === true\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setMutualfollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n    const getFollowingPage = async () => {\n      try {\n        const respage = await axios.get (\"https://tatami-server.com/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resfollow = await axios.get(\"https://tatami-server.com/api/user/followingpage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const followingpageid = resfollow.data.map((follow) => {\n          return follow.pageId\n        });\n        const followingpageinfo = respage.data.filter((page) => {\n          return (followingpageid.includes(page.id))\n        });\n        followingpageinfo && setFollowingpage(followingpageinfo);\n      } catch {\n        console.log(\"error\")\n      }\n    }\n\n\n\n    const getUserInterest = async () => {\n      try {\n        const resintpage = await axios.get(\n          'https://tatami-server.com/api/user/userintpage/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintpost = await axios.get(\n          'https://tatami-server.com/api/user/userintpost/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintcomment = await axios.get(\n          'https://tatami-server.com/api/user/userintcomment/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintuser = await axios.get(\n          'https://tatami-server.com/api/user/userintuser/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintattribute = await axios.get(\"https://tatami-server.com/api/user/userintattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const respage = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resuser = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const rescomment = await axios.get(\"https://tatami-server.com/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resattribute = await axios.get(\"https://tatami-server.com/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resaf = await axios.get(\"https://tatami-server.com/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        resintpage.data[0] &&\n        setIntpage(respage.data.find((each) => {\n          return each.id === Number(resintpage.data[0].intPageId)\n        }));\n        resintpost.data[0] &&\n        setIntpost(respost.data.find((each) => {\n          return each.id === Number(resintpost.data[0].intPostId)\n        }));\n        resintcomment.data[0] &&\n        setIntComment(rescomment.data.find((each) => {\n          return each.id === Number(resintcomment.data[0].intCommentId)\n        }));\n        resintuser.data[0] &&\n        setIntuser(resuser.data.find((each) => {\n          return each.userProfile === Number(resintuser.data[0].intUserId)\n        }));\n        resintattribute.data[0] &&\n        setIntAttribute(resattribute.data.find((each) => {\n          return each.id === Number(resintattribute.data[0].intAttributeId)\n        }));\n        resintpage.data[0] &&\n        setPostsforintpage(respost.data.filter((each) => {\n          return each.reviewTo === Number(resintpage.data[0].intPageId)\n        }));\n        resintuser.data[0] &&\n        setPostsforintuser(respost.data.filter((each) => {\n          return each.userPost === Number(resintuser.data[0].intUserId)\n        }));\n        resintpost.data[0] &&\n        setCommentsforintpost(rescomment.data.filter((each) => {\n          return each.post === Number(resintpost.data[0].intPostId)\n        }));\n        resintattribute.data[0] &&\n        setPagesforintattribute(respage.data.filter((each) => {\n          return each.attribute.includes(resintattribute.data[0].intAttributeId)\n        }));\n        const tmpIntpage =respage.data.find((each) => {\n          return each.id === Number(resintpage.data[0].intPageId)\n        });\n        tmpIntpage && \n        setAffiliates(resaf.data.find((each) => {\n          return each.id === Number(tmpIntpage.affiliateId)\n        }));\n        console.log(\"API実行\");\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    \n        \n\n\n    getMyProfile();\n    getMonoComments()\n    getProfile();\n    getMonoPages();\n    getMonoPosts();\n    getUserInterest();\n    getFriendRequest();\n    getFollowingUserPosts();\n    getFollowingPage();\n    getAttribute();\n    getFollowingUser();\n    getMutualFollowingUser();\n\n  }, [token, profile.id]);\n  \n\n  const getFriendRequest = async () => {\n    try {\n  \n      const resreqall = await axios.get(\"https://tatami-server.com/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const requests = resreqall.data.filter((each) => {\n        return each.approved === false\n      })\n      requests.data && setFriendRequest(requests)\n      // requests.data && setFriendRequest(requests.filter((each) => {\n      //   return each.askTo === Number(resprof.data[0].userProfile)\n      // }))\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n\n\n\n\n  const getProfile = async () => {\n    try {\n      const res = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      setProfiles(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  \n\n  const getMonoPages = async () => {\n    try {\n      const res = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      setMonopages(res.data)\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  const getMonoPosts = async () => {\n    try {\n      const res = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonoposts(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getMonoComments = async () => {\n    try {\n      const res = await axios.get(\"https://tatami-server.com/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonocomments(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getUserInterest = async () => {\n    try {\n      const resintpage = await axios.get(\n        'https://tatami-server.com/api/user/userintpage/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintpost = await axios.get(\n        'https://tatami-server.com/api/user/userintpost/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintcomment = await axios.get(\n        'https://tatami-server.com/api/user/userintcomment/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintuser = await axios.get(\n        'https://tatami-server.com/api/user/userintuser/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintattribute = await axios.get(\"https://tatami-server.com/api/user/userintattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const rescomment = await axios.get(\"https://tatami-server.com/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resattribute = await axios.get(\"https://tatami-server.com/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"https://tatami-server.com/api/user/affiliatelinks/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpage.data[0] &&\n      setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpost.data[0] &&\n      setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintcomment.data[0] &&\n      setIntComment(rescomment.data.find((each) => {\n        return each.id === Number(resintcomment.data[0].intCommentId)\n      }));\n      resintuser.data[0] &&\n      setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintpage.data[0] &&\n      setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }));\n      resintuser.data[0] &&\n      setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }));\n      resintpost.data[0] &&\n      setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      const tmpIntpage =respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      });\n      tmpIntpage && \n      setAffiliates(resaf.data.find((each) => {\n        return each.id === Number(tmpIntpage.affiliateId)\n      }));\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const createProfile = async () => {\n    const createData = new FormData();\n    editedProfile.nickName && createData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && createData.append(\"caption\", editedProfile.caption);\n    cover.name && createData.append(\"img\", cover, cover.name);\n    coverBack.name && createData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.post(\n        \"https://tatami-server.com/api/user/profile/\",\n        createData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n      setEditedProfile({ id: res.data.id, nickName: res.data.nickName, caption:res.data.caption });\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const createMonoPost = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdmonopost.text)\n    createData.append(\"rating\", createdmonopost.rating)\n    createData.append(\"reviewTo\", createdmonopost.reviewTo)\n    postimg.name && createData.append(\"img\", postimg, postimg.name);\n    try {\n      const res = await axios.post(\n      \"https://tatami-server.com/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoPosts()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const createRepost = async (targetpost) => {\n    const createData = new FormData();\n    createData.append(\"title\", targetpost.title)\n    createData.append(\"text\", targetpost.text)\n    createData.append(\"rating\", targetpost.rating)\n    createData.append(\"reviewTo\", targetpost.reviewTo)\n    createData.append(\"reposting\", true)\n    createData.append(\"repostingFrom\", targetpost.id)\n    createData.append(\"repostingFromUser\", targetpost.userPost)\n    targetpost.img && createData.append(\"img\", targetpost.img)\n    ;\n    try {\n      const res = await axios.post(\n      \"https://tatami-server.com/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoPosts()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n\n\n  const createMonoComment = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdcomment.text)\n    createData.append(\"post\", createdcomment.post)\n    try {\n      const res = await axios.post(\n      \"https://tatami-server.com/api/user/monocomment/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoComments()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  \n\n  const deleteMonopost = async (deletepostid) => {\n    try {\n      await axios.delete (\n        `https://tatami-server.com/api/user/monopost/${deletepostid}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      setMonoposts(monoposts.filter((dev) => dev.id !== deletepostid));\n      setMyMonoposts(mymonoposts.filter((dev) => dev.id !== deletepostid));\n      setPostimg([]);\n    } catch {\n      console.log(\"error\");\n    };\n  };\n\n  const getSpecificProfile = async (userid) => {\n    try {\n      const res = await axios.get(`https://tatami-server.com/api/user/profile/${userid}`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n    })\n    setSpecificProfile(res.data);\n    return specificProfile.img\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const deleteProfile = async () => {\n    try {\n      await axios.delete(\n        `https://tatami-server.com/api/user/profile/${profile.id}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfiles(profiles.filter((dev) => dev.id !== profile.id));\n      setProfile([]);\n      setEditedProfile({ id: \"\", nickName: \"\", caption:\"\" });\n      setCover([]);\n      setCoverBack([]);\n      setAskList([]);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const editProfile = async () => {\n    const editData = new FormData();\n    editedProfile.nickName && editData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && editData.append(\"caption\", editedProfile.caption);\n    cover.name && editData.append(\"img\", cover, cover.name);\n    coverBack.name && editData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.put(\n        `https://tatami-server.com/api/user/profile/${profile.id}/`,\n        editData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const likePost =async (postdata) => {\n    const editData = new FormData();\n    editData.append(\"text\",postdata.text);\n    editData.append(\"reviewTo\",postdata.reviewTo);\n    editData.append(\"rating\",postdata.rating);\n    editData.append(\"reposting\",postdata.reposting);\n    editData.append(\"repostingFrom\",postdata.repostingFrom);\n    editData.append(\"repostingFromUser\",postdata.repostingFromUser);\n    editData.append(\"liked\",profile.userProfile);\n    \n    \n  try {\n    const res = await axios.put(\n      `https://tatami-server.com/api/user/monopost/${postdata.id}/`,\n      editData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      } \n    )\n    getUserInterest()\n  } catch {\n    console.log(\"error\")\n  }\n  }\n\n\n  const newRequestFriend = async (askData) => {\n    try {\n      const res = await axios.post(\n        `https://tatami-server.com/api/user/approval/`,\n        askData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskListFull([...askListFull, res.data]);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n\n  \n  const newUserIntPage = async (interestData) => {\n    const createData = new FormData();\n    try {\n      const resintpage = await axios.post(\n        \"https://tatami-server.com/api/user/userintpage/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"https://tatami-server.com/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n      resintpage.data[0] && setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpage.data[0] && setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }))\n      const tmpIntpage = respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      })\n      tmpIntpage && \n      setAffiliates(resaf.data.find((each) => {\n        return each.id === Number(tmpIntpage.affiliateId)\n      }));\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  const newUserIntPost = async (interestData) => {\n    try {\n      const resintpost = await axios.post(\n        \"https://tatami-server.com/api/user/userintpost/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const rescomment = await axios.get(\"https://tatami-server.com/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpost.data[0] && setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintpost.data[0] && setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  \n\n  const newUserIntUser = async (interestData) => {\n    try {\n      const resintuser = await axios.post(\n        \"https://tatami-server.com/api/user/userintuser/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"https://tatami-server.com/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"https://tatami-server.com/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintuser.data[0] && setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintuser.data[0] && setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const newUserIntAttribute = async (interestData) => {\n    try {\n      const resintattribute = await axios.post(\n        \"https://tatami-server.com/api/user/userintattribute/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respage = await axios.get(\"https://tatami-server.com/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resattribute = await axios.get(\"https://tatami-server.com/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const followPage = async (id) => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id)\n    try {\n      const res = await axios.post(\n      \"https://tatami-server.com/api/user/followingpage/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const changeApprovalRequest = async (uploadDataAsk, ask) => {\n    try {\n      const res = await axios.put(\n        `https://tatami-server.com/api/user/approval/${ask.id}/`,\n        uploadDataAsk,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskList(askList.map((item) => (item.id === ask.id ? res.data : item)));\n\n      const newDataAsk = new FormData();\n      newDataAsk.append(\"askTo\", ask.askFrom);\n      newDataAsk.append(\"approved\", true);\n\n      const newDataAskPut = new FormData();\n      newDataAskPut.append(\"askTo\", ask.askFrom);\n      newDataAskPut.append(\"askFrom\", ask.askTo);\n      newDataAskPut.append(\"approved\", true);\n\n      const resp = askListFull.filter((item) => {\n        return item.askFrom === profile.userProfile && item.askTo === ask.askFrom;\n      });\n\n      !resp[0]\n        ? await axios.post(\n            `https://tatami-server.com/api/user/approval/`,\n            newDataAsk,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          )\n        : await axios.put(\n            `https://tatami-server.com/api/user/approval/${resp[0].id}/`,\n            newDataAskPut,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          );\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  return (\n    <ApiContext.Provider\n      value={{\n        askData,\n        setAskData,\n        profile,\n        profiles,\n        specificProfile,\n        setSpecificProfile,\n        cover,\n        setCover,\n        friendrequest,\n        setFriendRequest,\n        monopages,\n        setMonopages,\n        monoposts,\n        setMonoposts,\n        mymonoposts,\n        setMyMonoposts,\n        monocomments,\n        setMonocomments,\n        postimg,\n        setPostimg,\n        createdmonopost,\n        setCreatedMonopost,\n        coverBack,\n        setCoverBack,\n        monopageposts,\n        intpage,\n        setIntpage,\n        intpost,\n        setIntpost,\n        intuser,\n        setIntuser,\n        postsforintpage,\n        setPostsforintpage,\n        postsforintuser,\n        setPostsforintuser,\n        commentsforintpost,\n        setCommentsforintpost,\n        createMonoComment,\n        setCreatedcomment,\n        createdcomment,\n        intcomment,\n        setIntComment,\n        followPage,\n        affiliates,\n\n        \n        setMonopageposts,\n        askList,\n        askListFull,\n        newRequestFriend,\n        createProfile,\n        editProfile,\n        deleteProfile,\n        changeApprovalRequest,\n        editedProfile,\n        setEditedProfile,\n        createMonoPost,\n        deleteMonopost,\n        getSpecificProfile,\n        newUserIntPage,\n        newUserIntPost,\n        newUserIntUser,\n        getUserInterest,\n        newUserIntAttribute,\n        getProfile,\n        getMonoComments,\n        getMonoPages,\n        getMonoPosts,\n        getFriendRequest,\n        followinguserpost,\n        followinguser,\n        mutualfollowinguser,\n        likePost,\n        createRepost,\n        followingpage,\n        pageattribute,\n        pagesforintattribute,\n      }}\n    >\n      {props.children}\n    </ApiContext.Provider>\n  );\n};\n\nexport default withCookies(ApiContextProvider);","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Home.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Recommenduser.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Recommend.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Request.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Mono.jsx",["776"],"import React, {useState, Fragment, useContext} from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport Slider from \"react-slick\";\nimport 'react-image-lightbox/style.css';\nimport LinearProgress from '@mui/joy/LinearProgress'\nimport MonoPicture from \"../components/MonoPicture\";\nimport Createpost from '../components/Createpost';\nimport Postview from './Postview';\nimport { ApiContext } from '../context/ApiContext'\nimport Button from '@mui/joy/Button';\n\n\nconst Mono = () => {\n\n\n    const hotelsettings = {\n        arrows: false,\n        dots: false,\n        infinite: true,\n        speed: 300,\n        slidesToShow: 1,\n        centerMode: false,\n        variableWidth: false,\n        responsive: [{\n            breakpoint: 800,\n            settings: {\n                slidesToShow: 2,\n            }\n        },\n        {\n            breakpoint: 420,\n            settings: {\n                slidesToShow: 1,\n            }\n        }]\n    };\n\n    const { profile, profiles, intpage, postsforintpage, followPage, affiliates} =  useContext(\n        ApiContext\n    );\n\n    const listMonoPosts = \n    profiles && \n        postsforintpage.map( post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find((item) =>{return item.userProfile === Number(post.userPost)})}\n                />)\n\n    const [num, setNum] =useState(1)\n    const [display, setDisplay] = useState(null)\n    \n    const slice = (arr, size) => arr.flatMap((_, i, a) => i % size ? [] : [a.slice(i, i + size)]);\n\n    const slicedpostlist=slice(listMonoPosts, 5)\n    console.log(affiliates)\n\n\n    const getMorePosts = () => {\n        const next = num +1\n        setNum(next)\n        const slicedpostlistdisplay = slicedpostlist.slice(0, num)\n        const display = slicedpostlistdisplay.map((posts) =>\n        <>\n        {posts}\n        </>\n        )\n        setDisplay(display)\n    }\n\n    const rates = postsforintpage.map((post) => {\n        return post.rating\n    })\n    let sum = 0\n    for (let i = 0; i<rates.length; i++){\n        sum += rates[i]\n    }\n    const rate = Math.round(sum/rates.length)\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                                <Slider {...hotelsettings}>\n                                    <div className=\"pe-2\">\n                                        <img src={intpage.img} alt=\"avater\" className=\"rounded-3 img-fluid\" />\n                                    </div>\n                                </Slider>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n\n                                <div className=\"card d-block mt-3 border-0 shadow-xss bg-white p-lg-5 pt-4\">\n                                    <span className=\"font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-primary-gradiant d-inline-block text-white \">Featured</span>\n                                    <h2 className=\"fw-700 font-lg mt-3 mb-2\">{intpage.title}</h2>\n                                    <p className=\"font-xsss fw-500 text-grey-500 lh-30 pe-5 mt-3 me-5\">{intpage.summary}</p>\n                                    <div>\n\n                                    <a href=\"/defaulthoteldetails\" className=\"btn-round-lg ms-2 d-inline-block rounded-3 bg-greylight\"><i className=\"feather-share-2 font-sm text-grey-700\"></i></a>\n                                    <a href=\"/defaulthoteldetails\" className=\"btn-round-lg ms-2 d-inline-block rounded-3 bg-danger\"><i className=\"feather-bookmark font-sm text-white\"></i> </a>\n                                    <a className=\"bg-primary-gradiant border-0 text-white fw-600 text-uppercase font-xssss float-left rounded-3 d-inline-block mt-0 p-2 lh-34 text-center pointer ls-3 w200\" onClick={() => followPage(intpage.id)}>この話題をフォロー</a>\n                                    </div>\n\n                                    <div className=\"card-body p-0 mt-4 d-flex\">\n                                        <div className=\"card-body p-0 mb-1 d-flex\">\n                   \n                                            <div className=\"ms-auto pointer\">\n                                                \n                                            <div className=\"card shadow-xss rounded-xxl border-0 p-3 mb-0\">\n                                                \n                                                <div className=\"card-body  d-flex pointer\">\n                                                    <figure className=\"avatar me-3\"><img src={affiliates.img} alt=\"avater\" className=\"shadow-sm rounded-3 w-auto\" /></figure>\n                                                    <h4 className=\"fw-500 text-grey-500 font-xssss\"> {affiliates.title}\n                                                    </h4>\n                                                    \n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <Createpost \n                                postTo = {intpage.id}\n                                profileData = {profile}/>\n\n                                {num === 1 ?\n                                    slicedpostlist[0]\n                                    :\n                                    display\n                                }\n                                <div className=\"card-body p-0\">\n                                    <div className=\"text-center\" >\n                                        <Button\n                                        className=\"text-white text-center bg-current \"\n                                        onClick={() => getMorePosts()}\n                                        size=\"sm\"\n                                        variant=\"solid\"\n                                        >さらに読み込み\n                                        </Button>\n                                    </div>\n                                </div>          \n\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 ps-0\">\n\n                                <div className=\"card w-100 border-0 mt-3 mb-4 p-lg-4 p-3 shadow-xss position-relative rounded-3 bg-white\">\n                                    <div className=\"section full mb-4 p-4 bg-light theme-dark-bg theme-light-bg rounded-3\">\n                                    \n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className=\"font-xss text-grey-600 fw-600 mt-2\">総シンパシー</h4>\n                                            </div>\n                                            <div className=\"col-12 text-center\">\n                                                <h2 className=\"display2-size lh-1 m-0 text-grey-900 fw-700\">{rate}%</h2>\n                                            </div>\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className=\"font-xssss text-grey-600 fw-600 mt-2\">{postsforintpage.length}件のPost</h4>\n                                            </div>\n                                        </div>\n                                        <LinearProgress\n                                                color=\"primary\"\n                                                determinate\n                                                size=\"lg\"\n                                                value={rate}\n                                                variant=\"soft\"\n                                                />\n                                        \n                                    </div>\n                                    \n                                </div>\n\n\n                                <div className=\"card d-block border-0 rounded-3 overflow-hidden p-4 shadow-xss mt-4 alert-success mb-4\">\n                                    <h2 className=\"fw-700 font-sm mb-3 mt-1 ps-1 text-success mb-4\">概要</h2>\n                                    <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\" ti-check font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.goodpoint}</h4>\n                                    <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"ti-close   font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.badpoint}</h4>\n\n\n                                </div>\n                                <MonoPicture />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n    \n}\n\nexport default Mono;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Users.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Login.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Settings.jsx",["777"],"import React, {  Fragment } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\n\n\nconst Settings = (props) => {\n    const Logout = () => event => {\n        props.cookies.remove('current-token')\n        window.location.href = \"/\";\n    }\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content bg-lightblue theme-dark-bg right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left\">\n                        <div className=\"middle-wrap\">\n                            <div className=\"card w-100 border-0 bg-white shadow-xs p-0 mb-4\">\n                                \n                                <div className=\"card-body p-lg-5 p-4 w-100 border-0\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-12\">\n                                            <h4 className=\"mb-4 font-xxl fw-700 mont-font mb-lg-5 mb-4 font-md-xs\">設定</h4>\n                                            <div className=\"nav-caption fw-600 font-xssss text-grey-500 mb-2\">一般</div>\n                                            <ul className=\"list-inline mb-4\">\n                                                <li className=\"list-inline-item d-block border-bottom me-0\"><Link to=\"/account\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-primary-gradiant text-white feather-home font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">アカウント情報</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link></li>\n                                            </ul>\n\n                                            <div className=\"nav-caption fw-600 font-xsss text-grey-500 mb-2\">アカウント</div>\n                                            <ul className=\"list-inline mb-4\">\n                                                <li className=\"list-inline-item d-block border-bottom me-0\"><Link to=\"/payment\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-mini-gradiant text-white feather-credit-card font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">登録カード</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link>\n                                                </li>\n                                                <li className=\"list-inline-item d-block  me-0\"><Link to=\"/password\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-blue-gradiant text-white feather-inbox font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">パスワード</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link></li>\n                                                \n                                            </ul>\n\n                                            <div className=\"nav-caption fw-600 font-xsss text-grey-500 mb-2\">その他</div>\n                                            <ul className=\"list-inline\">\n                                                <li className=\"list-inline-item d-block me-0\"><a onClick={Logout()} className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-red-gradiant text-white feather-lock font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">ログアウト</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></a></li>\n                                                \n                                            </ul>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter />\n            \n        </Fragment>\n    );\n    \n}\n\nexport default Settings;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Following.jsx",["778","779","780"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\n\nconst Following = () => {\n    const { profile, monoposts, profiles, followinguser, mutualfollowinguser } =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n\n    const listProfiles =\n        profile.id &&\n        followinguser.map(prof =>\n          <FollowEach\n            key={prof.id}\n            prof = {prof}\n          />\n        );\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-0\">\n     \n                                <Profiledetail />\n                                <UserpagePicture />\n                            </div>\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                                <div className=\"row ps-2 pe-2\">\n                                    {listProfiles}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default Following;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Analytics.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/ReccomendPosts.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Account.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/SpecificUserpage.jsx",["781"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport SpecificUserpagePicture from \"../components/SpecificUserpagePicture\";\nimport SpecificUserpageEach from '../components/SpecificUserpageEach';\nimport Postview from './Postview';\nimport SpecificUserProfiledetail from \"../components/SpecificUserProfileDetail\";\n\nconst SpecificUserpage = () => {\n    const {  postsforintuser,profiles } =  useContext(\n        ApiContext\n    );\n    const posts = postsforintuser\n\n\n    const listMonoPosts = \n        posts.map(post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find(item =>{return item.userProfile === post.userPost})}\n            />\n        )\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n                            <SpecificUserpageEach />\n\n\n\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-0\">\n     \n                                <SpecificUserProfiledetail/>\n                                <SpecificUserpagePicture />\n                            </div>\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n\n                                {listMonoPosts}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default SpecificUserpage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Userpage.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/MutualFollowing.jsx",["782","783","784"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\n\nconst MutualFollowing = () => {\n    const { profile, monoposts, profiles, followinguser, mutualfollowinguser } =  useContext(\n        ApiContext\n    );\n\n    const listProfiles =\n        profile.id &&\n        mutualfollowinguser.map(prof =>\n          <FollowEach\n            key={prof.id}\n            prof = {prof}\n          />\n        );\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-0\">\n     \n                                <Profiledetail />\n                                <UserpagePicture />\n                            </div>\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                                <div className=\"row ps-2 pe-2\">\n                                    {listProfiles}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default MutualFollowing;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Postview.jsx",["785","786","787"],"import React,{useState, useContext} from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport Commentview from './Commentview';\nimport Createcomment from '../components/Createcomment';\nimport LinearProgress from '@mui/joy/LinearProgress'\n\nconst Postview = ({postData, profileData,reposting, repostingProfileData}) =>  {\n    const history = useHistory()\n    const { profile,monocomments,  commentsforintpost,  monopages, profiles, newUserIntPage,likePost,newUserIntUser , getUserInterest,newUserIntPost, createRepost} =  useContext(\n        ApiContext, \n    );\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toSpecificUserPage = () => {\n        if (profile.userProfile === profileData.userProfile) {\n            console.log(\"本人\")\n            history.push(\"/userpage\")\n        \n        } else {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intUserId\", profileData.userProfile)\n        newUserIntUser(createdIntData)\n        console.log(\"ちがう\")\n        getUserInterest()\n        history.push(\"/specificuserpage\")\n            \n        }\n\n    }\n\n    const showcomment = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPostId\", postData.id)\n        newUserIntPost(createdIntData)\n        getUserInterest()\n        setIsOpen(!isOpen)\n    }\n\n    \n\n\n    const listMonoComment =\n    commentsforintpost &&\n    commentsforintpost.map(comment =>\n        <Commentview\n        key={comment.id}\n        commentData={comment}\n        profileData= {profiles.find((item) => {return item.userProfile === Number(comment.userComment)})}\n        />)\n    \n    const comments = monocomments.filter((item) => {return item.post === Number(postData.id)})\n\n    const monopage = monopages.find((item) => {return item.id === Number(postData.reviewTo)})\n\n\n    const toMonopage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",postData.reviewTo)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/mono\")\n    }\n\n    \n\n\n\n    return (\n        \n\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n           \n            {!reposting ?<>\n\n            <div className=\"card-body p-0 d-flex\">\n                <div>\n                    <div className=\"card-body p-0 d-flex\"> \n                    { profileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPage()} ><img src={profileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w45\"  /></figure>:\n                    <figure className=\"avatar me-3\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                    {profileData ? <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> {profileData.nickName} <span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>:\n                    <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> Nick Name<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>}\n                    </div>\n\n                    <div className=\"card-body p-0 me-lg-5\" >\n                        <p className=\"fw-500 text-grey-500 lh-26 font-xssss w-100 mb-2\">{postData.text}</p>\n                    </div>\n                </div>\n\n                \n                <div className=\"ms-auto pointer\">\n                <div className=\"card w-30 shadow-xss rounded-xxl border-0 p-3 mb-2\">\n                    <div className=\"card-body p-0 d-flex pointer\" onClick={() => toMonopage()}>\n                        <figure className=\"avatar me-3\"><img src={monopage.img} alt=\"avater\" className=\"shadow-sm rounded-3 w45\" /></figure>\n                        <h4 className=\"fw-700 text-grey-900 font-xssss\"> {monopage.title}<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {monopage.created_on}</span>\n                        </h4>\n                        \n                    </div>\n\n                    <div className=\"card-body p-0 mb-2\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h2 className=\"font-xsssss  lh-1 mt-2 text-grey-600 fw-500\">話題へのシンパシー：{postData.rating}%</h2>\n                            </div>\n                        </div>\n                        <LinearProgress\n                            color=\"info\"\n                            determinate\n                            size=\"sm\"\n                            value= {postData.rating}\n                            variant=\"soft\"\n\n                            />\n                    </div>\n\n                </div>\n\n\n            </div>\n                \n            </div>\n\n             \n            \n            \n            <div className=\"card-body d-block p-0\">\n            {postData.img ?\n                <div className=\"row ps-2 pe-2\">\n                    <div className=\"col-sm-12 p-1\"><img src={postData.img} className=\"rounded-3 w-100\" alt=\"post\" /></div>                                        \n                </div>\n                : <></>}\n            </div>\n\n            <div className=\"card-body d-flex p-0 mt-2\">\n                <div className=\"emoji-bttn pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xssss me-2\" onClick={() => likePost(postData)} ><i className=\"feather-thumbs-up text-white bg-primary-gradiant me-1 btn-round-xs font-xss\"></i> {\n                postData.liked.length} Liked</div>\n\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xssss\" onClick={() => createRepost(postData)}><i className=\"feather-repeat text-dark text-grey-600 btn-round-sm font-lg\"></i><span className=\"d-none-xss\">Reposted</span></a>\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xssss\" onClick={() => showcomment()}><i className=\"feather-message-circle text-dark text-grey-600 btn-round-sm font-lg\"></i><span className=\"d-none-xss\">{comments.length} Comments</span></a>\n                \n            </div> \n\n            <div className=\"card-body d-block p-0\">\n                \n                {isOpen ?\n                <>\n                {listMonoComment}\n                <Createcomment\n                commentTo = {postData.id}\n                profileData= {profile}\n                />\n                </>\n                : \n                <></>\n                }\n            </div></>\n\n\n            :<>\n            <div className=\"card-body p-0 d-flex\">\n                    { profileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPage()} ><img src={profileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w45\"  /></figure>:\n                    <figure className=\"avatar me-3\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                    {profileData ? <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> {profileData.nickName} <span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>:\n                    <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> Nick Name<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>}\n\n                    \n\n                </div>\n\n            <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                <div className=\"card-body p-0 d-flex\">\n                    <div>\n                        <div className=\"card-body p-0 d-flex\">\n                        { repostingProfileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPage()} ><img src={repostingProfileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w30\"  /></figure>:\n                        <figure className=\"avatar me-3\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                        {repostingProfileData ? <h4 className=\"fw-700 text-grey-900 font-xsssss mt-1\"> {repostingProfileData.nickName} <span className=\"d-block font-xsssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                        </h4>:\n                        <h4 className=\"fw-700 text-grey-900 font-xsssss mt-1\"> Nick Name<span className=\"d-block font-xsssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                        </h4>}\n                        </div>\n\n                        <div className=\"card-body p-0 me-lg-5\" >\n                            <p className=\"fw-500 text-grey-500 lh-26 font-xssss w-100 mb-2\">{postData.text}</p>\n                        </div>\n                        \n                    </div>\n\n                   \n                    \n                    <div className=\"card-body p-0 mb-1 d-flex\">\n                   \n                        <div className=\"ms-auto pointer\">\n                            \n                        <div className=\"card w-30 shadow-xss rounded-xxl border-0 p-3 mb-0\">\n                            \n                            <div className=\"card-body p-0 d-flex pointer\" onClick={() => toMonopage()}>\n                                <figure className=\"avatar me-3\"><img src={monopage.img} alt=\"avater\" className=\"shadow-sm rounded-3 w45\" /></figure>\n                                <h4 className=\"fw-700 text-grey-900 font-xssss\"> {monopage.title}<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {monopage.created_on}</span>\n                                </h4>\n                                \n                            </div>\n                            <div className=\"card-body p-0 mb-2\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h2 className=\"font-xsssss  lh-1 mt-2 text-grey-600 fw-500\">話題へのシンパシー：{postData.rating}%</h2>\n                                </div>\n                            </div>\n                            <LinearProgress\n                                color=\"info\"\n                                determinate\n                                size=\"sm\"\n                                value= {postData.rating}\n                                variant=\"soft\"\n\n                                />\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n \n                    \n                    \n                </div>\n\n                <div className=\"card-body d-block p-0\">\n                {postData.img ?\n                    <div className=\"row ps-2 pe-2\">\n                        <div className=\"col-sm-12 p-1\"><img src={postData.img} className=\"rounded-3 w-100\" alt=\"post\" /></div>                                        \n                    </div>\n                    : <></>}\n                </div>\n                </div>\n\n\n            <div className=\"card-body d-flex  p-0\">\n                <div className=\"emoji-bttn pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xssss me-2\" onClick={() => likePost(postData)} ><i className=\"feather-thumbs-up text-white bg-primary-gradiant me-1 btn-round-xs font-xss\"></i> {\n                postData.liked.length} Liked</div>\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xssss\" onClick={() => showcomment()}><i className=\"feather-message-circle text-dark text-grey-600 btn-round-sm font-lg\"></i><span className=\"d-none-xss\">{comments.length} Comments</span></a>\n                \n            </div> \n\n            <div className=\"card-body d-block p-0\">\n                \n                {isOpen ?\n                <>\n                {listMonoComment}\n                <Createcomment\n                commentTo = {postData.id}\n                profileData= {profile}\n                />\n                </>\n                : \n                <></>\n                }\n            </div>\n            \n            \n            </>}\n        </div>\n\n\n    );\n    \n}\n\nexport default Postview;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/FriendRecommendslider.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/FollowingPage.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/HomeReccomendPage.jsx",["788"],"import React,{ useContext,} from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport LinearProgress from '@mui/joy/LinearProgress'\n\n\nconst HomeReccomendPage = (pageData) => {\n    const history = useHistory()\n    const page = pageData\n    const { newUserIntPage,getUserInterest } =  useContext(\n        ApiContext\n    );\n\n    const toMonopage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",page.pageData.id)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        history.push(\"/mono\")\n    }\n\n    return (\n\n        <div className=\"card w-100 p-0 hover-card shadow-xss border-0 rounded-3 overflow-hidden me-1 mb-3\" onClick={toMonopage}>\n            <div className=\"card-image w-100 mb-3\">\n                <a className=\"position-relative d-block\"><img src={page.pageData.img} alt=\"hotel\" className=\"w-100\" /></a>\n            </div>\n            <div className=\"card-body pt-0\">\n                <i className=\"feather-bookmark font-md text-grey-500 position-absolute right-0 me-3\"></i>\n                <h4 className=\"fw-700 font-xss mt-0 lh-28 mb-0\"><a href=\"/mono\" className=\"text-dark text-grey-900\">{page.pageData.title}</a></h4>\n                <h6 className=\"font-xsssss text-grey-500 fw-600 mt-0 mb-2\"> {page.pageData.created_on}</h6>\n\n                <div className=\"card-body p-2\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"font-xss  lh-1 mt-2 text-grey-900 fw-300\">{pageData.pageData.rating}</h2>\n                    </div>\n                </div>\n                <LinearProgress\n                    color=\"info\"\n                    determinate\n                    size=\"sm\"\n                    value= {pageData.pageData.rating}\n                    variant=\"plain\"\n                    />\n                </div>\n                <div className=\"clearfix\"></div>\n                <span className=\"font-xsss fw-700 mt-0 pe-3 ls-2 lh-32 d-inline-block text-success float-left\"><span className=\"font-xsssss\">#</span> {page.pageData.summary} </span>\n                <a href=\"/mono\" className=\"position-absolute bottom-15 mb-2 right-15\"><i className=\"btn-round-sm bg-primary-gradiant text-white font-sm feather-chevron-right\"></i></a>\n            </div>\n        </div>\n\n    )\n} \n\nexport default HomeReccomendPage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/RecommendEach.jsx",["789"],"import React,{useContext} from 'react';\n\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport LinearProgress from '@mui/joy/LinearProgress'\n\nconst RecommendEach = (pageData) => {\n    const history = useHistory()\n    const page = pageData\n    const { newUserIntPage,getUserInterest } =  useContext(\n        ApiContext\n    );\n\n    const toMonopage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",page.pageData.id)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/mono\")\n    }\n\n    return (\n        <div className=\"col-md-5 col-sm-6 pe-2 ps-2\">\n        <div className=\"card w-100 p-0 hover-card shadow-xss border-0 rounded-3 overflow-hidden me-2 ms-2 mb-3\" onClick={toMonopage}>\n            {/* {value.feature ? <span className=\"font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-primary-gradiant d-inline-block text-white position-absolute mt-3 ms-3 z-index-1\">Featured</span> : ''} */}\n            <div className=\"card-image w-100 mb-3\">\n                <a className=\"position-relative d-block\"><img src={page.pageData.img} alt=\"hotel\" className=\"w-100\" /></a>\n            </div>\n            <div className=\"card-body pt-0\">\n                <i className=\"feather-bookmark font-md text-grey-500 position-absolute right-0 me-3\"></i>\n                <h4 className=\"fw-700 font-xss mt-0 lh-28 mb-0 pe-3\"><a href=\"/mono\" className=\"text-dark text-grey-900\">{page.pageData.title}</a></h4>\n                <h6 className=\"font-xsssss text-grey-500 fw-600 mt-0 mb-2\"> {page.pageData.created_on}</h6>\n\n                <div className=\"card-body p-2\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"font-xss  lh-1 mt-2 text-grey-900 fw-300\">{pageData.pageData.rating}</h2>\n                    </div>\n                </div>\n                <LinearProgress\n                    color=\"info\"\n                    determinate\n                    size=\"sm\"\n                    value= {pageData.pageData.rating}\n                    variant=\"plain\"\n                    />\n                </div>\n                <div className=\"clearfix\"></div>\n                <span className=\"font-xsss fw-700 mt-0 pe-3 ls-2 lh-32 d-inline-block text-success float-left\"><span className=\"font-xsssss\">#</span> {page.pageData.summary} </span>\n                <a href=\"/mono\" className=\"position-absolute bottom-15 mb-2 right-15\"><i className=\"btn-round-sm bg-primary-gradiant text-white font-sm feather-chevron-right\"></i></a>\n            </div>\n        </div>\n        </div>\n\n    )\n} \n\nexport default RecommendEach;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Header.jsx",["790","791"],"import React from 'react';\nimport { Link , NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\nimport Darkbutton from './Darkbutton';\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [isNoti, setIsNoti] = useState(false)\n    const toggleisNoti = () => setIsNoti( !isNoti);\n\n    const { profile} = useContext(\n        ApiContext\n      );\n\n\n\n    return (\n        <div className=\"nav-header bg-white shadow-xs border-0\">\n            <div className=\"nav-top\">\n                <Link to=\"/home\"><i className=\"feather-zap text-success display2-size me-3 ms-0\"></i><span className=\"d-inline-block fredoka-font ls-3 fw-600 text-current font-xxl logo-text mb-0\">Tatami </span> </Link>\n                {/* <Link to=\"/videos\" className=\"mob-menu me-2\"><i className=\"feather-video text-grey-900 font-sm btn-round-md bg-greylight\"></i></Link>\n                <span  className=\"me-2 menu-search-icon mob-menu\"><i className=\"feather-search text-grey-900 font-sm btn-round-md bg-greylight\"></i></span> */}\n                {/* <button onClick={this.toggleOpen} className={`nav-menu me-0 ms-2 ${buttonClass}`}></button> */}\n            </div>\n            \n\n            \n\n\n                \n            <span className={`p-2 pointer text-center ms-auto menu-icon`} id=\"dropdownMenu3\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => toggleisNoti()}></span>\n\n            { isOpen ?\n            <div className={`dropdown-menu p-4 right-0 rounded-xxl border-0 shadow-lg show`} aria-labelledby=\"dropdownMenu3\">\n                <h4 className=\"fw-700 font-xss mb-4\">通知</h4>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 3分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 2分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 1 分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 30秒前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n            </div>: <></>\n            }\n            {/* <NavLink activeClassName=\"active\" to=\"/home\" className=\"p-2 text-center ms-3 menu-icon center-menu-icon\"><i className=\"feather-home font-lg bg-greylight btn-round-lg theme-dark-bg text-grey-500 \"></i></NavLink>\n            <NavLink activeClassName=\"active\" to=\"/request\" className=\"p-2 text-center ms-0 menu-icon center-menu-icon\"><i className=\"feather-bell font-lg bg-greylight btn-round-lg theme-dark-bg text-grey-500 \"></i></NavLink> */}\n            <Darkbutton />\n            {profile.img ? \n            <Link to=\"/userpage\" className=\"p-0 ms-3 menu-icon\"><img src={profile.img} alt=\"user\" className=\"w40 mt--1 rounded-circle\" /></Link>:\n            <Link to=\"/userpage\" className=\"p-0 ms-3 menu-icon\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.jpeg\" alt=\"user\" className=\"w40 mt--1 rounded-circle\" /></Link>\n\n            }\n\n            <nav className=\"navigation scroll-bar\">\n                <div className=\"container ps-0 pe-0\">\n                    <div className=\"nav-content\">\n                        <div className=\"nav-wrap bg-white bg-transparent-card rounded-xxl shadow-xss pt-3 pb-1 mb-2 mt-2\">\n                            <div className=\"nav-caption fw-600 font-xssss text-grey-500\"><span></span>見つけよう</div>\n                            <ul className=\"mb-1 top-content\">\n                                <li className=\"logo d-none d-xl-block d-lg-block\"></li>\n                                <li><Link to=\"/recommend\" className=\"nav-content-bttn open-font\"><i className=\"feather-zap btn-round-md bg-gold-gradiant me-3\"></i><span>Topics</span></Link></li>\n                                <li><Link to=\"/recommenduser\" className=\"nav-content-bttn open-font\"><i className=\"feather-user btn-round-md bg-success me-3\"></i><span>Users</span></Link></li> \n                                <li><Link to=\"/request\" className=\"nav-content-bttn open-font\"><i className=\"feather-bell btn-round-md bg-warning me-3\"></i><span>Requests</span></Link></li>      \n                                <li><Link to=\"/home\" className=\"nav-content-bttn open-font\"><i className=\"feather-home btn-round-md bg-orange me-3\"></i><span>Home</span></Link></li>      \n\n                            </ul>\n                        </div>\n\n                    \n                        <div className=\"nav-wrap bg-white bg-transparent-card rounded-xxl shadow-xss pt-3 pb-1\">\n                            <div className=\"nav-caption fw-600 font-xssss text-grey-500\"><span></span> 拡張機能</div>\n                            <ul className=\"mb-1\">\n                                <li className=\"logo d-none d-xl-block d-lg-block\"></li>\n                                <li><Link to=\"/analytics\" className=\"nav-content-bttn open-font h-auto pt-2 pb-2\"><i className=\"font-sm feather-pie-chart me-3 text-grey-500\"></i><span>Analytics</span><span className=\"circle-count bg-warning mt-0\">企業限定</span></Link></li>\n                                <li><Link to=\"/settings\" className=\"nav-content-bttn open-font h-auto pt-2 pb-2\"><i className=\"font-sm feather-settings me-3 text-grey-500\"></i><span>設定</span></Link></li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n            \n            <div className=\"app-header-search\">\n                <form className=\"search-form\">\n                    <div className=\"form-group searchbox mb-0 border-0 p-1\">\n                        <input type=\"text\" className=\"form-control border-0\" placeholder=\"Search...\" />\n                        <i className=\"input-icon\">\n                            <ion-icon name=\"search-outline\" role=\"img\" className=\"md hydrated\" aria-label=\"search outline\"></ion-icon>\n                        </i>\n                        <span className=\"ms-1 mt-1 d-inline-block close searchbox-close\">\n                            <i className=\"ti-close font-xs\" ></i>\n                        </span>\n                    </div>\n                </form>\n            </div>\n            \n        </div>\n    );\n    \n}\n\nexport default Header;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Leftnav.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Appfooter.jsx",["792"],"import React  from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\nconst Appfooter = () => {\n    const { profile} = useContext(\n        ApiContext\n      );\n\n        return (\n            <div className=\"app-footer border-0 shadow-lg bg-primary-gradiant\">\n                <Link to=\"/home\" className=\"nav-content-bttn nav-center\"><i className=\"feather-home\"></i></Link>\n                <Link to=\"/recommend\" className=\"nav-content-bttn\"><i className=\"feather-zap\"></i></Link>\n                <Link to=\"/recommenduser\" className=\"nav-content-bttn\" data-tab=\"chats\"><i className=\"feather-user\"></i></Link>           \n                <Link to=\"/request\" className=\"nav-content-bttn\"><i className=\"feather-bell\"></i></Link>\n                <Link to=\"/userpage\" className=\"nav-content-bttn\"><img src={profile.img} alt=\"user\" className=\"w40 shadow-xss rounded-circle\" /></Link>\n            </div>        \n        );\n    \n}\n\nexport default Appfooter;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Popupchat.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/AttributeEach.jsx",["793"],"import React,{ useContext} from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AttributeEach = (attributeData) =>  {\n    const {  getUserInterest, newUserIntAttribute} =  useContext(\n        ApiContext, \n    );\n    const history = useHistory()\n\n\n\n\n    const toAttribute = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intAttributeId\",attributeData.attributeData.id)\n        newUserIntAttribute(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n    }\n\n\n\n\n\n\n    return (\n        \n        <div className=\" ps-2 pe-2 d-flex\">\n        <div className=\" pointercard shadow-xss rounded-xxl border-0 text-center p-2 mb-2\">\n            <div className=\"card-body p-0 pointer\" onClick={() => toAttribute()}>\n                <h4 className=\"fw-700 text-grey-700 font-xssss\"> {attributeData.attributeData.attributeName}\n                </h4>\n                \n            </div>\n        </div>\n        </div>\n\n    );\n    \n}\n\nexport default AttributeEach;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RecommenduserEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/UsersEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Requestleft.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Pagetitle.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/HomePicture.jsx",["794"],"\nimport React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\n\n\nconst HomePicture = () => {\n    const { followinguserpost } =  useContext(\n        ApiContext\n    );\n    const [tab1, setTab1] = useState(0)\n    const [isOpen, setIsOpen] =useState(false)\n    const listpostimg = followinguserpost.map(post =>\n        post.img &&\n         post.img)\n    const listimg=listpostimg.filter(v=>v)\n\n\n\n    const TabOne = [\n        {\n            image: '01',\n            bigImage: listimg[0],\n        },\n        {\n            image: '02',\n            bigImage: listimg[1],\n        },\n        {\n            image: '03',\n            bigImage: listimg[2],\n        },\n        {\n            image: '04',\n            bigImage: listimg[3],\n        },\n        {\n            image: '05',\n            bigImage: listimg[4],\n        },\n        {\n            image: '06',\n            bigImage: listimg[5],\n        },]\n\n    const toggle = () => {\n        setIsOpen(!isOpen)\n        setTab1( (tab1 + TabOne.length - 1) % TabOne.length)\n    }\n    const closeRequest= () => {\n        const a = (tab1 + TabOne.length - 1) % TabOne.length\n        setTab1(a)\n    }\n    const moveNextRequest=()=>{\n        const b = (tab1 + 1) % TabOne.length\n        setTab1(b)\n    }\n    return (\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 mb-3\">\n            <div className=\"card-body d-flex align-items-center  p-4\">\n                <h4 className=\"fw-700 mb-0 font-xssss text-grey-900\">画像</h4>\n                <a href=\"/home\" className=\"fw-600 ms-auto font-xssss text-primary\">全て見る</a>\n            </div>\n            <div className=\"card-body d-block pt-0 pb-2\">\n                <div className=\"row ps-3 pe-3\">\n                    {TabOne.map((value , index) => (\n                        <div className=\"col-6 mb-1 p-1\" key={index}>\n                            {isOpen && (\n                                <Lightbox\n                                    mainSrc={TabOne[tab1].bigImage}\n                                    onCloseRequest={setIsOpen(false)}\n                                    onMovePrevRequest={() => closeRequest()\n                                    }\n                                    onMoveNextRequest={() => moveNextRequest()\n                                    }\n                                />\n                            )}\n                            \n                            <div onClick={() => toggle()}>\n                                <a href=\"#portfolio-details\">\n                                    <img src={`${value.bigImage}`}  className=\"img-fluid rounded-3 w-100\"/>\n                                </a>\n                    \n                            </div>\n                        \n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"card-body d-block w-100 pt-0\">\n                <a href=\"/home\" className=\"p-2 lh-28 w-100 d-block bg-grey text-grey-800 text-center font-xssss fw-700 rounded-xl\"><i className=\"feather-external-link font-xss me-2\"></i> More</a>\n            </div>\n        </div>\n    );\n    \n}\n\nexport default HomePicture;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Createpost.jsx",["795","796","797","798","799","800","801","802"],"import React,{useCallback, useState} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport getCroppedImg from './getCroppedImg';\nimport { Link } from \"react-router-dom\";\nimport { profile } from 'console';\nimport { post } from 'jquery';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModal from \"./CropperModal\";\nimport LinearProgress from '@mui/joy/LinearProgress'\nimport { Button, makeStyles } from \"@material-ui/core\";\nexport const ASPECT_RATIO = 2 / 1;\nexport const CROP_WIDTH = 400;\n\n\nconst Createpost: React.FC = (postTo, profileData) => {\n    const {createMonoPost, profile, postimg, setPostimg, createdmonopost, setCreatedMonopost} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 3,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n    const classes = useStyles();\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n    /** 切り取ったあとの画像URL */\n    const [croppedImgSrc, setCroppedImgSrc] = useState(\"\");\n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        setCroppedImgSrc(croppedImage);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setPostimg(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n      \n    const handleInputChange = () => event => {\n        const value = event.target.value \n        const name = event.target.name \n        setCreatedMonopost({...createdmonopost, [name]:value, reviewTo: postTo.postTo})\n    }\n\n\n    return (\n        <form action=\"#\">\n        <div className='card w-100 shadow-xss rounded-xxl border-0 ps-4 pt-2 pe-4 pb-3 mt-3 mb-3'>\n            <div className='d-flex'>\n                <div>\n                    <div className='card-body  mt-0 w-100'>\n                        <input type=\"range\" step=\"1\" min=\"1\" max=\"100\"className=\" form-control rounded-xxl\" name='rating' onChange={handleInputChange()}/>\n                    </div>\n                </div>\n                <div className=\"ms-auto\">\n                    <div className=\"card w-30 shadow-xss rounded-xxl border-0 mt-2 p-3 mb-0\">\n                        <div className=\"card-body p-0 d-flex pointer\" >\n                            <label className=\"display2-size lh-1 m-0 text-grey-900 fw-700\"> { createdmonopost.rating ?\n                            createdmonopost.rating:\n                            0}%\n                            </label>\n                            \n                        </div>\n                        <div className=\"card-body p-0 mt-2\">\n                            <LinearProgress\n                                color=\"info\"\n                                determinate\n                                size=\"sm\"\n                                value= {createdmonopost.rating}\n                                variant=\"plain\"\n                                />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            \n\n\n            <div className='card-body  position-relative'>\n                <figure className='avatar position-absolute ms-2 mt-4 top-5'><img src={profile.img} alt=\"icon\" className='shadow-sm rounded-circle w30'/>\n                </figure>\n                <textarea onChange={handleInputChange()} name='text' className='h100 bor-0 w-100 rounded-xxl p-2 ps-5 font-xssss text-grey-500 fw-500 border-light-md theme-dark-bg' cols=\"30\" rows=\"10\" placeholder='意見をポスト...'></textarea>\n            </div>\n            <div className=\"card-body d-block p-0\">\n            {croppedImgSrc ?\n                <div className='card-body  position-relative'>\n                <label className=\"mont-font fw-600 font-xssss mb-2\">Image has uploaded!\n                </label>\n                </div>\n                : <></>}\n            </div>\n\n            \n            {/* ここからトリミング */}\n                    <div className=\"file-upload-container\">\n                        <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 ms-3 w175 rounded-3\" variant=\"contained\" component=\"label\" >\n                        Upload\n                        <input type=\"file\" hidden onChange={onFileChange} />\n                        </Button>\n                    </div>\n                    <CropperModal\n                        crop={crop}\n                        setCrop={setCrop}\n                        zoom={zoom}\n                        setZoom={setZoom}\n                        onCropComplete={onCropComplete}\n                        open={isOpen}\n                        onClose={() => setIsOpen(false)}\n                        imgSrc={imgSrc}\n                        showCroppedImage={showCroppedImage}\n                        onMediaLoaded={onMediaLoaded}\n                        minZoom={minZoom}\n                    />\n                    <div className='card-body p-0'>\n                        {createdmonopost.text ? (\n                        \n                        <a className=\"pointer bg-current text-center text-white font-xsss fw-600 ms-3 p-3 mt-3 w175 rounded-3 d-inline-block\" onClick={() => createMonoPost()}>Post!</a>)\n                        :   (\n                        <a className=\"bg-dark text-center text-white ms-3 mt-3 font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" disabled>Post</a>)}\n                    </div>\n                \n                \n                \n\n            </div>\n            \n        </form>\n    )\n}\n\n\nexport default Createpost","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/actionTypes.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/MonoPicture.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/UserpagePicture.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Profiledetail.jsx",["803"],"import React,{Component} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\nconst Profiledetail = () => {\n    const {profile, followinguser, mutualfollowinguser } = useContext(ApiContext)\n\n    return (\n        <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3'>\n            <div className='card-body d-block p-4'>\n                <h4 className='fw-700 mb-3 font-xsss text-grey-900'>About</h4>\n                <p className='fw-500 text-grey-500 lh-24 font-xssss mb-0'>{profile.caption}</p>\n            </div>\n            <div className=\"card-body d-flex pt-0\">\n                <i className=\"feather-user text-grey-500 me-3 font-lg\"></i>\n                <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\">{followinguser.length}人のフォロー</h4>\n            </div>\n            <div className=\"card-body d-flex pt-0\">\n                <i className=\"feather-users text-grey-500 me-3 font-lg\"></i>\n                <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\">{mutualfollowinguser.length}人の相互フォロー</h4>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profiledetail;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RequestEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/FollowEach.jsx",["804","805"],"import React, {useContext} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst FollowEach = ({ prof}) => {\n    const { profile, newUserIntUser, getUserInterest, changeApprovalRequest,getFriendRequest } = useContext(ApiContext);\n    const history = useHistory()\n\n\n    const toSpecificUserPage = () => {\n    if (profile.userProfile === prof.userProfile) {\n        console.log(\"本人\")\n        history.push(\"/userpage\")\n    \n    } else {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intUserId\", prof.userProfile)\n        newUserIntUser(createdIntData)\n        console.log(\"ちがう\")\n        getUserInterest()\n        history.push(\"/specificuserpage\")}\n    }\n            \n\n    \n    \n    return (\n            <div className=\"col-md-3 col-sm-4 pe-2 ps-2\">\n                <div className=\"card d-block border-0 shadow-xss rounded-3 overflow-hidden mb-3\">\n                    <div className=\"card-body d-block w-100 ps-3 pe-3 pb-4 text-center\">\n                        {prof.img ? (\n                        <figure className=\"overflow-hidden avatar ms-auto me-auto mb-0 position-relative w65 z-index-1 pointer\" onClick={() => toSpecificUserPage()}><img src={prof.img} alt=\"avater\" className=\"float-right p-0 bg-white rounded-circle w-100 shadow-xss\" /></figure>): (\n                        <figure className=\"overflow-hidden avatar ms-auto me-auto mb-0 position-relative w65 z-index-1\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className=\"float-right p-0 bg-white rounded-circle w-100 shadow-xss\" /></figure>)}\n                        <div className=\"clearfix w-100\"></div>\n                        <h4 className=\"fw-700 font-xsss mt-3 mb-0\">{prof.nickName} </h4>\n                        <p className=\"fw-500 font-xssss text-grey-500 mt-0 mb-3\">{prof.created_on}</p>\n                    </div>\n                </div>\n            </div> \n    )\n}\n\nexport default FollowEach","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserpageEach.jsx",["806"],"import React from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\nconst SpecificUserpageEach = () => {\n    const {profile,  newRequestFriend, intuser } = useContext(ApiContext)\n\n\n    \n    const createNewRequest = () => {\n        const uploadDataAsk = new FormData();\n        uploadDataAsk.append(\"askTo\",profile.userProfile)\n        uploadDataAsk.append(\"approved\", false);\n        newRequestFriend(uploadDataAsk);\n      };\n\n    return (\n        <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n            <div className=\"card-body d-block  p-3\">\n                {intuser.imgBackground ?\n                    <div className=\"row ps-2 pe-2\">\n                        <div className=\"col-sm-12 p-1\"><img src={intuser.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                    </div>\n                    : <></>}\n            </div>\n            <div className='card-body p-0 position-relative'>\n                { intuser.id ?\n                <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={intuser.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{intuser.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{intuser.created_on}</span></h4>\n                <div className='d-flex align-items-center justify-content-center position-absolute-md right-15 top-0 me-2'>\n                    <a className='d-none d-lg-block bg-primary-gradiant me-2 p-3 z-index-1 rounded-3 text-white font-xsssss text-uppercase fw-700 ls-3'onClick={() => createNewRequest()}>フォロー</a>\n                </div>\n\n            </div>\n\n            <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                    <li className='active list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block active' href=\"#navtabs1\" data-toggle=\"tab\">投稿</a></li>\n                    {/* <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"#navtabs2\" data-toggle=\"tab\">モノ</a></li>\n                    <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"#navtabs3\" data-toggle=\"tab\">コト</a></li>\n                    <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"#navtabs4\" data-toggle=\"tab\">メディア</a></li> */}\n\n                </ul>\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default SpecificUserpageEach;","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserProfileDetail.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/SpecificUserpagePicture.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/AccountEach.jsx",["807","808","809","810","811"],"import React, {useContext, useCallback, useState} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { Link } from \"react-router-dom\";\nimport getCroppedImg from './getCroppedImg';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModalforprof from \"./CropperModalforprof\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport ProfBack from './ProfBack';\nexport const ASPECT_RATIO = 1 / 1;\nexport const CROP_WIDTH = 400;\n\nconst AccountEach = () => {\n    const {profile, editedProfile, setEditedProfile, deleteProfile, setCover, coverBack, createProfile, editProfile} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 30,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n\n     \n    const classes = useStyles();\n\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n\n\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n\n\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setCover(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n\n    const handleInputChange = () => event => {\n        const value = event.target.value\n        const name = event.target.name\n        setEditedProfile({...editedProfile, [name]:value})\n    }\n    console.log(editedProfile)\n\n    \n    return (\n        <div className=\"main-content bg-lightblue theme-dark-bg right-chat-active\">\n\n            <div className=\"middle-sidebar-bottom\">\n                <div className=\"middle-sidebar-left\">\n                    <div className=\"middle-wrap\">\n                        <div className=\"card w-100 border-0 bg-white shadow-xs p-0 mb-4\">\n                            <div className=\"card-body p-4 w-100 bg-current border-0 d-flex rounded-3\">\n                                <Link to=\"/settings\" className=\"d-inline-block mt-2\"><i className=\"ti-arrow-left font-sm text-white\"></i></Link>\n                                <h4 className=\"font-xs text-white fw-600 ms-4 mb-0 mt-2\">アカウント情報</h4>\n                            </div>\n                            <div className=\"card-body p-lg-5 p-4 w-100 border-0\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-lg-4 text-center\">\n                                    {profile.id ? (\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src={profile.img} alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>):(\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src=\"http://127.0.0.1:8000/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>)}\n                                    <h2 className=\"fw-700 font-sm text-grey-900 mt-3\">{profile.nickName}</h2>\n                                    <h4 className=\"text-grey-500 fw-500 mb-3 font-xsss mb-4\">{profile.created_on}</h4>\n                                </div>\n                            </div>\n\n                            <form action=\"#\">\n                                <div className=\"row\">\n                                <div className=\"col-lg-12 \">\n                                        <div className={classes.root}>\n                                        <div className=\"file-upload-container\">\n                                            <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" variant=\"contained\" component=\"label\" >\n                                            トップ画像を追加\n                                            <input type=\"file\" hidden onChange={onFileChange} />\n                                            </Button>\n                                        </div>\n                                        <CropperModalforprof\n                                            crop={crop}\n                                            setCrop={setCrop}\n                                            zoom={zoom}\n                                            setZoom={setZoom}\n                                            onCropComplete={onCropComplete}\n                                            open={isOpen}\n                                            onClose={() => setIsOpen(false)}\n                                            imgSrc={imgSrc}\n                                            showCroppedImage={showCroppedImage}\n                                            onMediaLoaded={onMediaLoaded}\n                                            minZoom={minZoom}\n                                        />\n                                        </div>\n                                        \n                                    \n                                        \n                                    \n                                    \n                                        \n                                    </div>\n                                    <div className=\"col-lg-12 mb-3\">\n                                        <ProfBack/>\n                                        \n                                    </div>\n                              \n                                    \n                                    <div className=\"col-lg-12 mb-3\">\n                                        <div className=\"form-group\">\n                                            <label className=\"mont-font fw-600 font-xsss mb-2\">アカウント名</label>\n                                            {profile ? (\n                                                <input type=\"text\" className=\"form-control\" value={editedProfile.nickName} name='nickName' onChange={handleInputChange()}/>) : (\n                                                <input type=\"text\" className=\"form-control\"  disabled/>\n                                                )}\n                                        </div>        \n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n                                   \n\n                                 \n\n                                    <div className=\"col-lg-12 mb-3\">\n                                        <label className=\"mont-font fw-600 font-xsss mb-2 text-dark\">キャプション</label>\n                                            <textarea className=\"form-control mb-0 p-3 h100 bg-greylight lh-16\" name = 'caption'rows=\"5\" placeholder={profile.caption} onChange={handleInputChange()} ></textarea>\n                                        \n                                        \n                                    </div>\n\n                                    <div className=\"col-lg-12\">\n                                        {editedProfile.id ? (\n                                            <a className=\"pointer bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => editProfile()}>編集結果を保存</a>)\n                                        :   (\n                                            <a href='' className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => createProfile()}>編集結果を保存</a>)\n                                        }\n                                        <a href='' onClick={() => deleteProfile()} className='bg-grey text-center text-black ms-2 font-xsss fw-600 p-3 w175 rounded-3 d-inline-block'>アカウントを削除</a>\n                                    </div>\n                                </div>\n                            </form>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n            \n            </div>\n\n        </div>\n    )   \n}\n\nexport default AccountEach","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/pages/Commentview.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Createcomment.jsx",["812","813","814","815"],"import React,{useCallback, useState} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport \"./styles.css\";\nexport const ASPECT_RATIO = 2 / 1;\nexport const CROP_WIDTH = 400;\n\nconst Createcomment = (commentTo, profileData) => {\n    const { profile, createdcomment,setCreatedcomment,getUserInterest, createMonoComment} = useContext(ApiContext)\n      \n    const handleInputChange = () => event => {\n        const value = event.target.value \n        const name = event.target.name \n        setCreatedcomment({...createdcomment, [name]:value, post: commentTo.commentTo})\n        getUserInterest()\n        console.log(createdcomment)\n    }\n\n    return (\n        <form action=\"#\">\n        <div className='card w-100 shadow-xss rounded-xxl border-0 ps-4 pt-4 pe-4 pb-3 mt-3 mb-3'>\n            <div className='card-body p-0 mt-3 position-relative'>\n                <figure className='avatar position-absolute ms-2 mt-1 top-5'><img src={profile.img} alt=\"icon\" className='shadow-sm rounded-circle w30'/>\n                </figure>\n                <textarea onChange={handleInputChange()} name='text' className='h100 bor-0 w-100 rounded-xxl p-2 ps-5 font-xssss text-grey-500 fw-500 border-light-md theme-dark-bg' cols=\"30\" rows=\"10\" placeholder='レビューを入力...'></textarea>\n            </div>\n            \n            <div className='card-body p-0 mt-0 position-relative'>\n                <div className='card-body p-0'>\n                {createdcomment ? (\n                <a className=\"pointer bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => createMonoComment()}>投稿</a>)\n                :   (\n                <a className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" disabled>投稿</a>)}\n                </div>\n            </div>\n\n        </div>\n        </form>\n    )\n}\n\n\nexport default Createcomment","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/getCroppedImg.jsx",["816"],"import area from \"react-easy-crop\";\n\n/**\n * urlをもとにimage要素を作成\n */\nexport const createImage = (url: string): Promise<HTMLImageElement> =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    // CodeSandboxでCORSエラーを回避するために必要\n    image.setAttribute(\"crossOrigin\", \"anonymous\");\n    image.src = url;\n  });\n\n/**\n * 画像トリミングを行い新たな画像urlを作成\n */\nexport default async function getCroppedImg(\n  imageSrc: string,\n  pixelCrop: Area\n): Promise<string> {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return \"\";\n  }\n\n  // canvasサイズを設定\n  canvas.width = image.width;\n  canvas.height = image.height;\n\n  // canvas上に画像を描画\n  ctx.drawImage(image, 0, 0);\n\n  // トリミング後の画像を抽出\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  );\n\n  // canvasのサイズ指定(切り取り後の画像サイズに更新)\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // 抽出した画像データをcanvasの左隅に貼り付け\n  ctx.putImageData(data, 0, 0);\n\n  // canvasを画像に変換\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      if (file !== null) resolve(file);\n    }, \"image/jpeg\");\n  });\n}\n","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/RequestleftEach.jsx",["817","818"],"import React, {useContext} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nexport const RequestleftEach = ({ ask, prof}) => {\n    const { profile, newUserIntUser, getUserInterest,changeApprovalRequest,getFriendRequest } = useContext(ApiContext);\n    const history = useHistory()\n\n    const changeApproval = () => {\n        const uploadDataAsk = new FormData();\n        uploadDataAsk.append(\"askTo\", ask.askTo);\n        uploadDataAsk.append(\"approved\", true);\n        changeApprovalRequest(uploadDataAsk, ask);\n        getFriendRequest()\n      };\n    \n    const toSpecificUserPage = () => {\n    if (profile.userProfile === prof.userProfile) {\n        console.log(\"本人\")\n        history.push(\"/userpage\")\n    \n    } else {\n    const createdIntData = new FormData()\n    createdIntData.append(\"intUserId\", prof.userProfile)\n    newUserIntUser(createdIntData)\n    console.log(\"ちがう\")\n    getUserInterest()\n    history.push(\"/specificuserpage\")}\n    }\n        \n\n    \n    \n    return (\n        <div className='wrap'>\n            <div className='card-body d-flex pt-0 ps-4 pe-4 pb-0 bor-0'>\n                <figure className='avatar me-3 pointer'onClick={() => toSpecificUserPage()}><img src ={prof.img} alt=\"avator\" className='shadow-sm rounded-circle w45'/></figure>\n                <h4 className='fw-700 text-grey-900 font-xssss mt-1'>{prof.nickName}<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\">{prof.created_on}にTatamiに参加</span></h4>\n                \n            </div>\n            <div className='card-body d-flex align-items-center pt-0 ps-4 pe-4 pb-4'>\n                <a href='' onClick={() => changeApproval()} className='p-2 lh-20 w100 bg-primary-gradiant me-2 text-white text-center font-xssss fw-600 ls-1 rounded-xl'>承認</a>\n                <a className='p-2 lh-20 w100 bg-grey text-grey-800 text-center font-xssss fw-600 ls-1 rounded-xl'>削除</a>\n\n            </div>\n        </div>\n        \n    )\n}\n\n","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/Darkbutton.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModal.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModalforprof.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/ProfBack.jsx",["819","820","821"],"import React, {useContext, useCallback, useState} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport getCroppedImg from './getCroppedImg';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModalforback from \"./CropperModalforback\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nexport const ASPECT_RATIO = 4 / 1;\nexport const CROP_WIDTH =400;\n\nconst ProfBack = () => {\n    const {profile, coverBack, setCoverBack} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 30,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n\n     \n    const classes = useStyles();\n\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n    /** 切り取ったあとの画像URL */\n    const [croppedImgSrc, setCroppedImgSrc] = useState(\"\");\n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n\n\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        setCroppedImgSrc(croppedImage);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setCoverBack(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n\n\n    \n    return (\n        <div className=\"col-lg-12 mb-3\">\n                <div className={classes.root}>\n                <div className=\"file-upload-container\">\n                    <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" variant=\"contained\" component=\"label\" >\n                    背景画像を追加\n                    <input type=\"file\" hidden onChange={onFileChange} />\n                    </Button>\n                </div>\n                <CropperModalforback\n                    crop={crop}\n                    setCrop={setCrop}\n                    zoom={zoom}\n                    setZoom={setZoom}\n                    onCropComplete={onCropComplete}\n                    open={isOpen}\n                    onClose={() => setIsOpen(false)}\n                    imgSrc={imgSrc}\n                    showCroppedImage={showCroppedImage}\n                    onMediaLoaded={onMediaLoaded}\n                    minZoom={minZoom}\n                />\n                </div>\n                \n            \n                \n            \n            \n                \n            </div>\n                              \n    )   \n}\n\nexport default ProfBack","/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModalforback.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/App.jsx",["822"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/index.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/App.jsx",["823"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/context/ApiContext.js",["824","825","826","827","828","829","830","831","832"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Home.jsx",["833","834","835","836"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Request.jsx",["837","838"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Userpage.jsx",["839","840"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Following.jsx",["841","842","843","844","845","846","847","848"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/SpecificUserpage.jsx",["849","850","851"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Recommend.jsx",["852","853"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/ReccomendPosts.jsx",["854","855"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Mono.jsx",["856","857","858","859","860"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Users.jsx",["861","862"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Login.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/MutualFollowing.jsx",["863","864","865","866","867","868","869","870"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Recommenduser.jsx",["871","872"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Analytics.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Account.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Settings.jsx",["873","874","875","876","877"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FriendRecommendslider.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/RecommendEach.jsx",["878"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Postview.jsx",["879","880","881","882","883","884","885"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/HomeReccomendPage.jsx",["886"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FollowingPage.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Leftnav.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Header.jsx",["887","888"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RequestEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Popupchat.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Profiledetail.jsx",["889"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/FollowEach.jsx",["890","891"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/UserpagePicture.jsx",["892"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserpagePicture.jsx",["893","894"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/AttributeEach.jsx",["895"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/MonoPicture.jsx",["896"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Createpost.jsx",["897","898","899","900","901","902","903","904","905","906","907"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/HomePicture.jsx",["908"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserProfileDetail.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/SpecificUserpageEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/AccountEach.jsx",["909","910"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Appfooter.jsx",["911"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Requestleft.jsx",["912","913"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Pagetitle.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/actionTypes.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RecommenduserEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/UsersEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Createcomment.jsx",["914","915","916","917"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Commentview.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/getCroppedImg.jsx",["918"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModal.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/Darkbutton.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/ProfBack.jsx",["919","920","921"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModalforprof.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/RequestleftEach.jsx",["922","923","924","925"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/CropperModalforback.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Logout.jsx",["926","927","928","929","930","931","932","933","934","935","936","937"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/LoginComponent.jsx",["938","939"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/Followed.jsx",["940","941","942","943","944","945"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/pages/FollowingPageList.jsx",["946","947","948","949","950","951","952","953"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.7_local/tatami-react/src/components/ProfileRecommender.jsx",["954","955","956","957","958","959","960"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/index.jsx",[],["961","962"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/App.jsx",["963"],"import React, {  StrictMode } from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport ApiContextProvider from \"./context/ApiContext\";\n\n\n\nimport \"./main.scss\"\n\n// ユーザー毎の機能\nimport Home from \"./pages/Home\"\nimport RecommendPosts from \"./pages/ReccomendPosts\";\nimport Recommend from \"./pages/Recommend\";\nimport Userpage from \"./pages/Userpage\";\nimport Recommenduser from \"./pages/Recommenduser\";\nimport Request from \"./pages/Request\";\nimport Users from \"./pages/Users\";\nimport Following from './pages/Following';\nimport MutualFollowing from './pages/MutualFollowing';\nimport Followed from './pages/Followed';\nimport FollowingPageList from './pages/FollowingPageList';\nimport GetPage from './pages/GetPage';\nimport GotPage from './pages/GotPage';\nimport OwningPage from './pages/OwningPage';\nimport OwningPages from './pages/OwningPages';\n\n// 内容\nimport Mono from \"./pages/Mono\";\nimport SpecificUserpage from \"./pages/SpecificUserpage\";\n\n// 初期設定\nimport Login from \"./pages/Login\";\nimport Logout from './pages/Logout';\n\n// 設定\nimport Settings from \"./pages/Settings\";\nimport Account from \"./pages/Account\";\n\n// アナリティクス\nimport Analytics from \"./pages/Analytics\";\n\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom';\n\nimport { CartProvider } from 'use-shopping-cart'\n\nconst App = () => {\n    console.log(process.env.PUBLIC_URL)\n\n        return(\n            <ApiContextProvider>\n            <StrictMode>\n            <BrowserRouter basename=\"/\">\n                <CookiesProvider>\n                <CartProvider\n                    mode=\"payment\"\n                    cartMode=\"client-only\"\n                    stripe='pk_test_51NNq26BweimbndG7ZTF4PRIb3YuirtsHFCP0UqtJiHhnnJojYzAPU87AwNeiqmrtginNR33DRJwGIbk0Ffs8fwdJ00Zv3ekPaK'\n                    currency=\"JPY\"\n                    successUrl=\"https://tatami.site/gotpage\"\n                    cancelUrl=\"https://tatami.site/mono\"\n                    billingAddressCollection={true}\n                    >\n                    <Route exact path = \"/login\" component={Login}/>\n                    <Route exact path = \"/home\" component={Home}/>\n                    <Route exact path = \"/reccomendposts\" component={RecommendPosts}/>\n                    <Route exact path = \"/recommend\" component={Recommend}/>\n                    <Route exact path = \"/userpage\" component={Userpage}/>\n                    <Route exact path = \"/recommenduser\" component={Recommenduser}/>\n                    <Route exact path = \"/users\" component={Users}/>\n                    <Route exact path = \"/mono\" component={Mono}/>\n                    <Route exact path = \"/request\" component={Request}/>\n                    <Route exact path = \"/login\" component={Login}/>\n                    <Route exact path = \"/logout\" component={Logout}/>\n                    <Route exact path = \"/settings\" component={Settings}/>\n                    <Route exact path = \"/account\" component={Account}/>\n                    <Route exact path = \"/analytics\" component={Analytics}/>\n                    <Route exact path = \"/specificuserpage\" component={SpecificUserpage}/>\n                    <Route exact path = \"/following\" component={Following}/>\n                    <Route exact path = \"/mutualfollowing\" component={MutualFollowing}/>\n                    <Route exact path = \"/followed\" component={Followed}/>\n                    <Route exact path = \"/followingpagelist\" component={FollowingPageList}/>\n                    <Route exact path = \"/getpage\" component={GetPage}/>\n                    <Route exact path = \"/gotpage\" component={GotPage}/>\n                    <Route exact path = \"/owningpage\" component={OwningPage}/>\n                    <Route exact path = \"/owningpages\" component={OwningPages}/>\n                </CartProvider>\n                </CookiesProvider>\n            </BrowserRouter>\n            </StrictMode>\n            </ApiContextProvider>\n            \n        )\n    \n}\n\n\nexport default App;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/context/ApiContext.js",["964","965","966","967","968","969","970","971","972","973","974","975","976"],"import React, { createContext, useState, useEffect } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nexport const ApiContext = createContext();\n\nconst ApiContextProvider = (props) => {\n  const token = props.cookies.get(\"current-token\");\n  const [profile, setProfile] = useState([]);\n  const [profiles, setProfiles] = useState([]);\n  const [specificProfile, setSpecificProfile] = useState([]);\n  const [editedProfile, setEditedProfile] = useState({ id: \"\", nickName: \"\" ,caption:\"\"});\n  const [askList, setAskList] = useState([]);\n  const [askData, setAskData] = useState([])\n  const [askListFull, setAskListFull] = useState([]);\n  const [cover, setCover] = useState([]);\n  const [coverBack, setCoverBack] = useState([]);\n  const [monopages, setMonopages] = useState([])\n  const [monoposts, setMonoposts] = useState([])\n  const [mymonoposts, setMyMonoposts] = useState([])\n  const [monocomments, setMonocomments] =useState([])\n  const [pageattribute, setPageattribute] =useState([])\n  const [intpage, setIntpage] = useState([])\n  const [postsforintpage, setPostsforintpage] = useState([])\n  const [intpost, setIntpost] = useState([])\n  const [intuser, setIntuser] = useState([])\n  const [intcomment, setIntComment] = useState([])\n  const [intattribute, setIntAttribute] = useState([])\n  const [postsforintuser, setPostsforintuser] = useState([])\n  const [monopageposts, setMonopageposts] = useState([])\n  const [postimg, setPostimg] = useState([])\n  const [createdmonopost, setCreatedMonopost] = useState({text:\"\", rating: \"\", reviewTo:\"\"})\n  const [friendrequest, setFriendRequest] =useState([])\n  const [commentsforintpost, setCommentsforintpost] =useState([])\n  const [createdcomment, setCreatedcomment] = useState({text:\"\", post:\"\"})\n  const [followinguserpost, setFollowinguserpost] = useState([])\n  const [followinguser, setFollowinguser] = useState([])\n  const [followeduser, setFolloweduser] = useState([])\n  const [mutualfollowinguser, setMutualfollowinguser] = useState([])\n  const [followingpage, setFollowingpage] = useState([])\n  const [owningpage, setOwningpage] = useState([])\n  const [pagesforintattribute, setPagesforintattribute] = useState([])\n  const [affiliates, setAffiliates] = useState([])\n  const [isfollowingpage, setIsfollowingpage] =useState([])\n  const [isowningpage, setIsOwningpage] =useState([])\n  \n\n  useEffect(() => {\n    const getMyProfile = async () => {\n      try {\n        const resmy = await axios.get(\n          \"http://localhost:8000/api/user/myprofile/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        const res = await axios.get(\n          \"http://localhost:8000/api/user/approval/\",\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n        resmy.data[0] && setProfile(resmy.data[0]);\n        resmy.data[0] &&\n          setEditedProfile({\n            id: resmy.data[0].id,\n            nickName: resmy.data[0].nickName,\n            caption: resmy.data[0].caption,\n          });\n        resmy.data[0] &&\n          setAskList(\n            res.data.filter((ask) => {\n              return resmy.data[0].userProfile === ask.askTo;\n            })\n          );\n        setAskListFull(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n\n\n    const getFriendRequest = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const requests = resreqall.data.filter((each) => {\n          return each.approved === false\n        })\n        const requestsfromother = requests.filter((each) => {\n          return each.askFrom !== profile.userProfile \n        })\n        setFriendRequest(requestsfromother)\n\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n\n\n\n    const getProfile = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        setProfiles(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    \n\n    const getMonoPages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        setMonopages(res.data)\n      } catch {\n        console.log(\"error\")\n      }\n    }\n    const getMonoPosts = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonoposts(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMonoComments = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setMonocomments(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getAttribute = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        setPageattribute(res.data);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUserPosts = async () => {\n      try {\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const post =  respost.data.filter((post) => {\n          return (followinguser.includes(post.userPost))\n        })\n        post && setFollowinguserpost(post);\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setFollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getFollowedUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const concat = [...a]\n        const set = new Set(concat)\n        const followedusers = [...set]\n        const followeduserprof = resprof.data.filter((prof) => {\n          return (followedusers.includes(prof.userProfile))\n        })\n        followeduserprof && setFolloweduser(followeduserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n    const getMutualFollowingUser = async () => {\n      try {\n        const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const following = resreqall.data.filter((each) => {\n          return each.approved === true\n        });\n        const a = following.map((follow) =>{\n          return follow.askTo\n        })\n        const b = following.map((follow) =>{\n          return follow.askFrom\n        })\n        const concat = [...a, ...b]\n        const set = new Set(concat)\n        const followinguser = [...set]\n        const followinguserprof = resprof.data.filter((prof) => {\n          return (followinguser.includes(prof.userProfile))\n        })\n        followinguserprof && setMutualfollowinguser(followinguserprof)\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n    const getFollowingPage = async () => {\n      try {\n        const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const followingpageid = resfollow.data.map((follow) => {\n          return follow.pageId\n        });\n        const followingpageinfo = respage.data.filter((page) => {\n          return (followingpageid.includes(page.id))\n        });\n        followingpageinfo && setFollowingpage(followingpageinfo);\n      } catch {\n        console.log(\"error\")\n      }\n    }\n\n    const getOwningPage = async () => {\n      try {\n        const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        });\n        const owningpageid = resown.data.map((own) => {\n          return own.pageId\n        });\n        const owningpageinfo = respage.data.filter((page) => {\n          return (owningpageid.includes(page.id))\n        });\n        owningpageinfo && setOwningpage(owningpageinfo);\n      } catch {\n        console.log(\"error\")\n      }\n    }\n\n\n\n    const getUserInterest = async () => {\n      try {\n        const resintpage = await axios.get(\n          'http://localhost:8000/api/user/userintpage/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintpost = await axios.get(\n          'http://localhost:8000/api/user/userintpost/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintcomment = await axios.get(\n          'http://localhost:8000/api/user/userintcomment/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintuser = await axios.get(\n          'http://localhost:8000/api/user/userintuser/',\n            {\n            headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n          headers :{\n            Authorization: `Token ${token}`,\n          },\n        });\n        const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        resintpage.data[0] &&\n        setIntpage(respage.data.find((each) => {\n          return each.id === Number(resintpage.data[0].intPageId)\n        }));\n        resintpost.data[0] &&\n        setIntpost(respost.data.find((each) => {\n          return each.id === Number(resintpost.data[0].intPostId)\n        }));\n        resintcomment.data[0] &&\n        setIntComment(rescomment.data.find((each) => {\n          return each.id === Number(resintcomment.data[0].intCommentId)\n        }));\n        resintuser.data[0] &&\n        setIntuser(resuser.data.find((each) => {\n          return each.userProfile === Number(resintuser.data[0].intUserId)\n        }));\n        resintattribute.data[0] &&\n        setIntAttribute(resattribute.data.find((each) => {\n          return each.id === Number(resintattribute.data[0].intAttributeId)\n        }));\n        resintpage.data[0] &&\n        setPostsforintpage(respost.data.filter((each) => {\n          return each.reviewTo === Number(resintpage.data[0].intPageId)\n        }));\n        resintuser.data[0] &&\n        setPostsforintuser(respost.data.filter((each) => {\n          return each.userPost === Number(resintuser.data[0].intUserId)\n        }));\n        resintpost.data[0] &&\n        setCommentsforintpost(rescomment.data.filter((each) => {\n          return each.post === Number(resintpost.data[0].intPostId)\n        }));\n        resintattribute.data[0] &&\n        setPagesforintattribute(respage.data.filter((each) => {\n          return each.attribute.includes(resintattribute.data[0].intAttributeId)\n        }));\n        resaf.data[0] &&\n        setAffiliates(resaf.data[0])\n        // const tmpIntpage =respage.data.find((each) => {\n        //   return each.id === Number(resintpage.data[0].intPageId)\n        // });\n        // tmpIntpage && \n        // setAffiliates(resaf.data.find((each) => {\n        //   return each.id === Number(tmpIntpage.affiliateId)\n        // }));\n        // tmpIntpage && \n        // setIsfollowingpage(respage.data.find((each) => {\n        //   return each.id === tmpIntpage.id\n        // }));\n        console.log(\"API実行\");\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n\n    getMyProfile();\n    getMonoComments();\n    getProfile();\n    getMonoPages();\n    getMonoPosts();\n    getUserInterest();\n    getUserInterest();\n    getUserInterest();\n    getFriendRequest();\n    getFollowingUserPosts();\n    getFollowingPage();\n    getOwningPage();\n    getAttribute();\n    getFollowingUser();\n    getMutualFollowingUser();\n    getFollowedUser();\n\n  }, [token, profile.id]);\n  \n\n  const getFollowingPage = async () => {\n    try {\n      const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resfollow = await axios.get(\"http://localhost:8000/api/user/followingpage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const followingpageid = resfollow.data.map((follow) => {\n        return follow.pageId\n      });\n      const followingpageinfo = respage.data.filter((page) => {\n        return (followingpageid.includes(page.id))\n      });\n      followingpageinfo && setFollowingpage(followingpageinfo);\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const getOwningPage = async () => {\n    try {\n      const respage = await axios.get (\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resown = await axios.get(\"http://localhost:8000/api/user/owningpage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const owningpageid = resown.data.map((own) => {\n        return own.pageId\n      });\n      const owningpageinfo = respage.data.filter((page) => {\n        return (owningpageid.includes(page.id))\n      });\n      owningpageinfo && setOwningpage(owningpageinfo);\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const getFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const followinguserprof = resprof.data.filter((prof) => {\n        return (followinguser.includes(prof.userProfile))\n      })\n      followinguserprof && setFollowinguser(followinguserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getFollowedUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const concat = [...a]\n      const set = new Set(concat)\n      const followedusers = [...set]\n      const followeduserprof = resprof.data.filter((prof) => {\n        return (followedusers.includes(prof.userProfile))\n      })\n      followeduserprof && setFollowinguser(followeduserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getMutualFollowingUser = async () => {\n    try {\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resprof = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each.approved === true\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const followinguserprof = resprof.data.filter((prof) => {\n        return (followinguser.includes(prof.userProfile))\n      })\n      followinguserprof && setMutualfollowinguser(followinguserprof)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getFriendRequest = async () => {\n    try {\n  \n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const requests = resreqall.data.filter((each) => {\n        return each.approved === false\n      })\n      requests.data && setFriendRequest(requests)\n      // requests.data && setFriendRequest(requests.filter((each) => {\n      //   return each.askTo === Number(resprof.data[0].userProfile)\n      // }))\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n\n\n\n\n  const getProfile = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n      setProfiles(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  \n  \n\n  const getMonoPages = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      setMonopages(res.data)\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  const getMonoPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonoposts(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n  \n  const getFollowingUserPosts = async () => {\n    try {\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resreqall = await axios.get(\"http://localhost:8000/api/user/approval/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const following = resreqall.data.filter((each) => {\n        return each\n      });\n      const a = following.map((follow) =>{\n        return follow.askTo\n      })\n      const b = following.map((follow) =>{\n        return follow.askFrom\n      })\n      const concat = [...a, ...b]\n      const set = new Set(concat)\n      const followinguser = [...set]\n      const post =  respost.data.filter((post) => {\n        return (followinguser.includes(post.userPost))\n      })\n      post && setFollowinguserpost(post)\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getMonoComments = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      setMonocomments(res.data);\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const getUserInterest = async () => {\n    try {\n      const resintpage = await axios.get(\n        'http://localhost:8000/api/user/userintpage/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintpost = await axios.get(\n        'http://localhost:8000/api/user/userintpost/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintcomment = await axios.get(\n        'http://localhost:8000/api/user/userintcomment/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintuser = await axios.get(\n        'http://localhost:8000/api/user/userintuser/',\n          {\n          headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resintattribute = await axios.get(\"http://localhost:8000/api/user/userintattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpage.data[0] &&\n      setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpost.data[0] &&\n      setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintcomment.data[0] &&\n      setIntComment(rescomment.data.find((each) => {\n        return each.id === Number(resintcomment.data[0].intCommentId)\n      }));\n      resintuser.data[0] &&\n      setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintpage.data[0] &&\n      setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }));\n      resintuser.data[0] &&\n      setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }));\n      resintpost.data[0] &&\n      setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      resaf.data[0] &&\n      setAffiliates(resaf.data[0])\n      // const tmpIntpage =respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // });\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n\n    } catch {\n      console.log(\"error\");\n    }\n  }\n\n  const createProfile = async () => {\n    const createData = new FormData();\n    editedProfile.nickName && createData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && createData.append(\"caption\", editedProfile.caption);\n    cover.name && createData.append(\"img\", cover, cover.name);\n    coverBack.name && createData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/user/profile/\",\n        createData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n      setEditedProfile({ id: res.data.id, nickName: res.data.nickName, caption:res.data.caption });\n      alert(\"プロフィールを新規作成しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const createMonoPost = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdmonopost.text)\n    createData.append(\"rating\", createdmonopost.rating)\n    createData.append(\"reviewTo\", createdmonopost.reviewTo)\n    postimg.name && createData.append(\"img\", postimg, postimg.name);\n    console.log(createData)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoPosts()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const createRepost = async (targetpost) => {\n    const createData = new FormData();\n    createData.append(\"title\", targetpost.title)\n    createData.append(\"text\", targetpost.text)\n    createData.append(\"rating\", targetpost.rating)\n    createData.append(\"reviewTo\", targetpost.reviewTo)\n    createData.append(\"reposting\", true)\n    createData.append(\"repostingFrom\", targetpost.id)\n    createData.append(\"repostingFromUser\", targetpost.userPost)\n    targetpost.img && createData.append(\"text\", targetpost.text+'  【画像付き】')\n    ;\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monopost/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    );\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getUserInterest();\n    getUserInterest();\n    \n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n\n\n  const createMonoComment = async () => {\n    const createData = new FormData();\n    createData.append(\"text\", createdcomment.text)\n    createData.append(\"post\", createdcomment.post)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/monocomment/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getMonoComments()\n    getUserInterest()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n  \n\n  const deleteMonopost = async (deletepostid) => {\n    try {\n      await axios.delete (\n        `http://localhost:8000/api/user/monopost/${deletepostid}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      setMonoposts(monoposts.filter((dev) => dev.id !== deletepostid));\n      setMyMonoposts(mymonoposts.filter((dev) => dev.id !== deletepostid));\n      setPostimg([]);\n    } catch {\n      console.log(\"error\");\n    };\n  };\n\n  const getSpecificProfile = async (userid) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/user/profile/${userid}`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n    })\n    setSpecificProfile(res.data);\n    return specificProfile.img\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const deleteProfile = async () => {\n    try {\n      await axios.delete(\n        `http://localhost:8000/api/user/profile/${profile.id}/`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfiles(profiles.filter((dev) => dev.id !== profile.id));\n      setProfile([]);\n      setEditedProfile({ id: \"\", nickName: \"\", caption:\"\" });\n      setCover([]);\n      setCoverBack([]);\n      setAskList([]);\n      alert(\"プロフィールを削除しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const editProfile = async () => {\n    const editData = new FormData();\n    editedProfile.nickName && editData.append(\"nickName\", editedProfile.nickName);\n    editedProfile.caption && editData.append(\"caption\", editedProfile.caption);\n    cover.name && editData.append(\"img\", cover, cover.name);\n    coverBack.name && editData.append(\"imgBackground\", coverBack, coverBack.name);\n    try {\n      const res = await axios.put(\n        `http://localhost:8000/api/user/profile/${profile.id}/`,\n        editData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setProfile(res.data);\n      alert(\"変更を保存しました\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  const likePost =async (postdata) => {\n    const editData = new FormData();\n    editData.append(\"text\",postdata.text);\n    editData.append(\"reviewTo\",postdata.reviewTo);\n    editData.append(\"rating\",postdata.rating);\n    editData.append(\"reposting\",postdata.reposting);\n    postdata.repostingFrom && editData.append(\"repostingFrom\",postdata.repostingFrom);\n    postdata.repostingFromUser && editData.append(\"repostingFromUser\",postdata.repostingFromUser);\n    const concat = [...postdata.liked, profile.userProfile]\n    const set = new Set(concat)\n    const likes = [...set].map(Number);\n    const compareFunc = (a,b) => {\n      return a - b;\n    }\n    if (Array.isArray(likes)) {\n      likes.forEach((v, i) => {\n        editData.append(\"liked\" , v) \n      })\n    } else {\n      editData.append(\"liked\", likes)\n    }\n    \n    \n  try {\n    const res = await axios.put(\n      `http://localhost:8000/api/user/monopost/${postdata.id}/`,\n      editData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      } \n    )\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getMonoPosts();\n    getMonoPosts();\n    getFollowingUserPosts();\n    getFollowingUserPosts();\n    getUserInterest();\n    getUserInterest();\n  } catch {\n    console.log(\"error\")\n  }\n  }\n\n\n  const newRequestFriend = async (askData) => {\n    try {\n      const res = await axios.post(\n        `http://localhost:8000/api/user/approval/`,\n        askData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskListFull([...askListFull, res.data]);\n      getFollowingUserPosts();\n      getFriendRequest();\n      getFollowingUser();\n      getMutualFollowingUser();\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n\n  \n  const newUserIntPage = async (interestData) => {\n    const createData = new FormData();\n    try {\n      const resintpage = await axios.post(\n        \"http://localhost:8000/api/user/userintpage/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resaf = await axios.get(\"http://localhost:8000/api/user/affiliatelinks/\", {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n      resintpage.data[0] && setIntpage(respage.data.find((each) => {\n        return each.id === Number(resintpage.data[0].intPageId)\n      }));\n      resintpage.data[0] && setPostsforintpage(respost.data.filter((each) => {\n        return each.reviewTo === Number(resintpage.data[0].intPageId)\n      }))\n      // const tmpIntpage = respage.data.find((each) => {\n      //   return each.id === Number(resintpage.data[0].intPageId)\n      // })\n      resintpage.data[0] && setAffiliates(resaf.data[0])\n      // tmpIntpage && \n      // setAffiliates(resaf.data.find((each) => {\n      //   return each.id === Number(tmpIntpage.affiliateId)\n      // }));\n\n\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  const newUserIntPost = async (interestData) => {\n    try {\n      const resintpost = await axios.post(\n        \"http://localhost:8000/api/user/userintpost/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const rescomment = await axios.get(\"http://localhost:8000/api/user/monocomment/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintpost.data[0] && setIntpost(respost.data.find((each) => {\n        return each.id === Number(resintpost.data[0].intPostId)\n      }));\n      resintpost.data[0] && setCommentsforintpost(rescomment.data.filter((each) => {\n        return each.post === Number(resintpost.data[0].intPostId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n\n  \n\n  const newUserIntUser = async (interestData) => {\n    try {\n      const resintuser = await axios.post(\n        \"http://localhost:8000/api/user/userintuser/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respost = await axios.get(\"http://localhost:8000/api/user/monopost/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      const resuser = await axios.get(\"http://localhost:8000/api/user/profile/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintuser.data[0] && setIntuser(resuser.data.find((each) => {\n        return each.userProfile === Number(resintuser.data[0].intUserId)\n      }));\n      resintuser.data[0] && setPostsforintuser(respost.data.filter((each) => {\n        return each.userPost === Number(resintuser.data[0].intUserId)\n      }))\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const newUserIntAttribute = async (interestData) => {\n    try {\n      const resintattribute = await axios.post(\n        \"http://localhost:8000/api/user/userintattribute/\",\n        interestData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n        },\n      }\n      )\n      const respage = await axios.get(\"http://localhost:8000/api/user/monopage/\", {\n        headers :{\n          Authorization: `Token ${token}`,\n        },\n      });\n      const resattribute = await axios.get(\"http://localhost:8000/api/user/pageattribute/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      resintattribute.data[0] &&\n      setIntAttribute(resattribute.data.find((each) => {\n        return each.id === Number(resintattribute.data[0].intAttributeId)\n      }));\n      resintattribute.data[0] &&\n      setPagesforintattribute(respage.data.filter((each) => {\n        return each.attribute.includes(resintattribute.data[0].intAttributeId)\n      }));\n      } catch {\n        console.log(\"error\");\n      }\n    }\n  \n  const followPage = async (id) => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/followingpage/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getFollowingPage()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const ownPage = async (id) => {\n    const createData = new FormData();\n    createData.append(\"pageId\", id)\n    try {\n      const res = await axios.post(\n      \"http://localhost:8000/api/user/owningpage/\",\n      createData, \n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${token}`,\n        },\n      }\n    )\n    getOwningPage()\n    } catch {\n      console.log(\"error\")\n    }\n  }\n\n  const changeApprovalRequest = async (uploadDataAsk, ask) => {\n    try {\n      const res = await axios.put(\n        `http://localhost:8000/api/user/approval/${ask.id}/`,\n        uploadDataAsk,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`,\n          },\n        }\n      );\n      setAskList(askList.map((item) => (item.id === ask.id ? res.data : item)));\n\n      const newDataAsk = new FormData();\n      newDataAsk.append(\"askTo\", ask.askFrom);\n      newDataAsk.append(\"approved\", true);\n\n      const newDataAskPut = new FormData();\n      newDataAskPut.append(\"askTo\", ask.askFrom);\n      newDataAskPut.append(\"askFrom\", ask.askTo);\n      newDataAskPut.append(\"approved\", true);\n\n      const resp = askListFull.filter((item) => {\n        return item.askFrom === profile.userProfile && item.askTo === ask.askFrom;\n      });\n\n      !resp[0]\n        ? await axios.post(\n            `http://localhost:8000/api/user/approval/`,\n            newDataAsk,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          )\n        : await axios.put(\n            `http://localhost:8000/api/user/approval/${resp[0].id}/`,\n            newDataAskPut,\n            {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${token}`,\n              },\n            }\n          );\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  return (\n    <ApiContext.Provider\n      value={{\n        askData,\n        setAskData,\n        profile,\n        profiles,\n        specificProfile,\n        setSpecificProfile,\n        cover,\n        setCover,\n        friendrequest,\n        setFriendRequest,\n        monopages,\n        setMonopages,\n        monoposts,\n        setMonoposts,\n        mymonoposts,\n        setMyMonoposts,\n        monocomments,\n        setMonocomments,\n        postimg,\n        setPostimg,\n        createdmonopost,\n        setCreatedMonopost,\n        coverBack,\n        setCoverBack,\n        monopageposts,\n        intpage,\n        setIntpage,\n        intpost,\n        setIntpost,\n        intuser,\n        setIntuser,\n        postsforintpage,\n        setPostsforintpage,\n        postsforintuser,\n        setPostsforintuser,\n        commentsforintpost,\n        setCommentsforintpost,\n        createMonoComment,\n        setCreatedcomment,\n        createdcomment,\n        intcomment,\n        setIntComment,\n        followPage,\n        affiliates,\n        isfollowingpage,\n        followeduser,\n        getFollowingUserPosts,\n        getFollowedUser,\n        setMonopageposts,\n        askList,\n        askListFull,\n        newRequestFriend,\n        createProfile,\n        editProfile,\n        deleteProfile,\n        changeApprovalRequest,\n        editedProfile,\n        setEditedProfile,\n        createMonoPost,\n        deleteMonopost,\n        getSpecificProfile,\n        newUserIntPage,\n        newUserIntPost,\n        newUserIntUser,\n        getUserInterest,\n        newUserIntAttribute,\n        getProfile,\n        getMonoComments,\n        getMonoPages,\n        getMonoPosts,\n        getFriendRequest,\n        followinguserpost,\n        followinguser,\n        mutualfollowinguser,\n        likePost,\n        createRepost,\n        followingpage,\n        owningpage,\n        pageattribute,\n        pagesforintattribute,\n        ownPage,\n      }}\n    >\n      {props.children}\n    </ApiContext.Provider>\n  );\n};\n\nexport default withCookies(ApiContextProvider);","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Home.jsx",["977","978","979","980"],"import React, {Fragment, useState} from \"react\";\nimport Slider from \"react-slick\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport FriendRecommendslider from './FriendRecommendslider';\nimport Postview from './Postview';\nimport HomePicture from '../components/HomePicture';\nimport Requestleft from \"../components/Requestleft\";\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport HomeReccomendPage from \"./HomeReccomendPage\";\nimport FollowingPage from \"./FollowingPage\";\nimport Button from '@mui/joy/Button';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst Home = (props) => {\n    const { profiles, profile,followinguserpost, monopages, followingpage, followinguser } =  useContext(\n        ApiContext\n    );\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n\n    const friendsettings = {\n        arrows: false,\n        dots: false,\n        infinite: true,\n        speed: 300,\n        slidesToShow: 1,\n        centerMode: false,\n        variableWidth: true,\n    };\n\n\n    const listFriendRecommendSliderLists =\n    profile.id &&\n    profiles.map(user =>\n        <FriendRecommendslider \n            key={user.id}\n            profileeach = {user}\n        />)\n    \n    \n\n    const listMonoPosts = \n        followinguserpost.map(post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find(item =>{return item.userProfile === post.userPost})}\n            reposting = {post.reposting}\n            repostingProfileData = {profiles.find((item) => {return item.userProfile === post.repostingFromUser})}\n            \n            />\n        )\n    \n    const listMonoPages =\n        monopages.map(page =>\n            <HomeReccomendPage\n            key = {page.id}\n            pageData= {page}/>\n        )\n\n    const listFollowingPages =\n        followingpage.map(page =>\n            <FollowingPage\n            key = {page.id}\n            monopage = {page}/>\n        ).slice(0,2)\n\n    \n    const [num, setNum] =useState(1)\n    const [display, setDisplay] = useState(null)\n    \n    const slice = (arr, size) => arr.flatMap((_, i, a) => i % size ? [] : [a.slice(i, i + size)]);\n\n    const slicedpostlist=slice(listMonoPosts, 5)\n    \n\n\n\n    const getMorePosts = () => {\n        const next = num +1\n        setNum(next)\n        const slicedpostlistdisplay = slicedpostlist.slice(0, num)\n        const display = slicedpostlistdisplay.map((posts) =>\n        <>\n        {posts}\n        </>\n        )\n        setDisplay(display)\n    }\n\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left\">\n                        <div className=\"row feed-body\">\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                            {!cookies[\"current-token\"] ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <LoginComponent />\n                            </div>:\n                            <></>\n                            }\n                            {!profile.id ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <ProfileRecommender />\n                            </div>:\n                            <></>\n                            }\n                            <Slider {...friendsettings}>\n                                {listFriendRecommendSliderLists}\n                            </Slider>\n\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 p-0'>\n                                    <div className='ard-body d-flex align-items-center ps-4 pe-4 pt-3 pb-3'>\n                                        <h4 className='fw-700 mb-0 font-xssss text-grey-900'>最近フォローした話題</h4>\n                                        <a href='/followingpagelist' className='fw-600 ms-auto font-xssss text-primary'>全て表示</a>\n                                    </div>\n                                    {listFollowingPages}\n                            </div>\n                            \n                            <Requestleft />\n                            \n                            <HomePicture />\n                            {/* {listMonoPages[num]} */}\n                            {num === 1 ?\n                                slicedpostlist[0]\n                                :\n                                display\n                            }\n                            <div className=\"card-body p-0 mb-3\">\n                                <div className=\"text-center\" >\n                                    <Button\n                                    className=\" fw-700 text-white font-xssss text-center bg-current \"\n                                    onClick={() => getMorePosts()}\n                                    size=\"sm\"\n                                    variant=\"solid\"\n                                    >さらに読み込み\n                                    </Button>\n                                </div>\n                            </div> \n                            <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>    \n\n\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 ps-lg-0\">\n                                {/* <Requestleft />\n                                <HomePicture />\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3'>\n                                    <div className='ard-body d-flex align-items-center p-4'>\n                                        <h4 className='fw-700 mb-0 font-xssss text-grey-900'>フォロー中のページ</h4>\n                                    </div>\n                                    {listFollowingPages}\n\n\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Appfooter />\n        </Fragment>\n    );\n}\n\n\nexport default Home;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Userpage.jsx",["981","982"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext, useState } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport Postview from './Postview';\nimport Lightbox from 'react-image-lightbox';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst Userpage = () => {\n    const { profile, monoposts, profiles } =  useContext(\n        ApiContext\n    );\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n\n    const listMonoPosts = \n        posts.map(post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find(item =>{return item.userProfile === post.userPost})}\n            reposting = {post.reposting}\n            repostingProfileData = {profiles.find((item) => {return item.userProfile === post.repostingFromUser})}\n            />\n        )\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left ps-2 pe-2\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n\n                            <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  pt-1 pb-0 ps-2 pe-2\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : \n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src=\"https://ow6r85j5w096clt.site/media/image/default_background.jpg\" className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    // <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}>\n                                    // <img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/>\n                                    // </figure>\n                                    <div>\n                                    {isOpenModal && (\n                                        <Lightbox\n                                            mainSrc={profile.img}\n                                            onCloseRequest={() => setIsOpenModal(false)}\n                                        />\n                                    )}\n                                     <div onClick={() => setIsOpenModal(true)}>\n                                        <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}>\n                                        <img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/>\n                                        </figure>\n                                    </div>\n                                    </div>\n                            \n                                    \n                                    :\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n\n                                    <div className='position-absolute bottom-15 mb-2 right-15'>\n                                    <a href=\"/settings\">\n                                    <button  className=\"pointer mt-0 btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 d-inline-block rounded-xl bg-success font-xsssss fw-700 ls-lg text-white d-flex\"><i className=\"feather-settings text-white mt-0  font-lg\"></i>\n                                    </button>\n                                    </a>\n                                </div>\n                                    \n\n\n\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='active list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block active' href=\"#navtabs1\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followed\" data-toggle=\"tab\">フォロワー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                            </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n     \n                                <Profiledetail />\n                                <UserpagePicture />\n                            </div>\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                            {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                            {!profile.id ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <ProfileRecommender />\n                                    </div>:\n                                    <></>\n                                    }\n\n                                {listMonoPosts}\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default Userpage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Recommenduser.jsx",["983","984"],"import React, { Fragment, useState } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport RecommenduserEach from '../components/RecommenduserEach'\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst Recommenduser = () => {\n    const { profiles, profile} = useContext(\n        ApiContext\n      );\n\n    const [inputValue, setInputValue] = useState()\n    const [showprofiles, setShowprofiles] = useState()\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n        search(e.target.value)\n      }\n      const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const search = (value) => {\n        // 検索欄への入力が空の場合は早期return\n        if (value === \"\") {\n          setShowprofiles(profiles);\n          return;\n        }\n    \n        const serchedprofiles = profiles.filter(\n          (user) =>\n\n            Object.values(user.nickName).filter(\n                (item) =>\n                    item !== undefined &&\n                    item !== null &&\n                    item.toUpperCase().indexOf(value.toUpperCase()) !== -1\n            ).length > 0\n        );\n    \n        setShowprofiles(serchedprofiles);\n      }\n\n    const defaultProfiles =\n    profile.id &&\n    profiles &&\n    profiles.map(profile =>\n        <RecommenduserEach\n        key={profile.nickName}\n        profileeach = {profile}\n        />\n        )\n\n    const listProfiles =\n    profile.id &&\n    showprofiles &&\n    showprofiles.map(profile =>\n        <RecommenduserEach\n        key={profile.nickName}\n        profileeach = {profile}\n        />\n        )\n\n\n    \n        return (\n            <Fragment>\n    \n                <Header />\n                <Leftnav />\n    \n                <div className=\"main-content right-chat-active\">\n                    <div className=\"middle-sidebar-bottom\">\n                        <div className=\"middle-sidebar-left pe-0\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-12\">\n                                    \n\n                                <div className='card shadow-xss w-100 d-block d-flex border-0 p-4 mb-3'>\n                                    <h2 className='fw-700 mb-0 mt-0 font-md text-grey-900 d-flex align-items-center'>ユーザー\n                                    <form  className='pt-0 pb-0 ms-auto'>\n                                        <div className='search-form-2 ms-1'>\n                                            <i className='ti-search font-xss'></i>\n                                            <input type='text' value={inputValue} onChange={handleInputChange} className='form-control text-grey-500 mb-0 bg-greylight theme-dark-bg border-0' placeholder=''/>\n                                        </div>\n                                    </form>\n                                    {/* <a href='/' className='btn-round-md ms-2 bg-greylight theme-dark-bg rounded-3'><i className='feather-filter font-xss text-grey-500'></i></a> */}\n\n                                    </h2>\n\n                                </div>\n                                    <div className=\"row ps-3 pe-3\">\n                                        {!cookies[\"current-token\"] ?\n                                        <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                        <LoginComponent />\n                                        </div>:\n                                        <></>\n                                        }\n                                        {!profile.id ?\n                                        <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                        <ProfileRecommender />\n                                        </div>:\n                                        <></>\n                                        }\n                                        {inputValue ?\n                                        listProfiles:\n                                        defaultProfiles}\n                                    </div>\n\n                                    <div className=\"card-body p-0 mb-3\">\n                                        <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                        <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                            <div className=\"stage\">\n                                            <div className=\"dot-typing\"></div>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>  \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <Appfooter /> \n     \n            </Fragment>\n        );\n    \n}\n\nexport default Recommenduser;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FollowingPageList.jsx",["985","986","987","988","989","990","991","992"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport RecommendEach from \"./RecommendEach\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst FollowingPageList = () => {\n    const { profile, monoposts, profiles, followingpage} =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const pages =\n        followingpage.map(page =>\n            <RecommendEach\n            key={page.id}\n            pageData ={page}/>)\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n                                \n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followed\" data-toggle=\"tab\">フォロワー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n     \n                                {/* <Profiledetail />\n                                <UserpagePicture /> */}\n                            </div>\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                            {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                            {/* {!profile.id ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <ProfileRecommender />\n                            </div>:\n                            <></>\n                            } */}\n                                <div className=\"row ps-2 pe-2\">\n                                    {pages}\n                                </div>\n\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default FollowingPageList;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Users.jsx",["993","994"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Pagetitle from '../components/Pagetitle';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport UsersEach from '../components/UsersEach'\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\n\nconst Users = () => {\n\n  const { profiles, profile,  askListFull} = useContext(\n    ApiContext\n  );\n  const filterProfiles = profiles.filter((prof) => {\n    return prof.id !== profile.id;\n  });\n  const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n  const listProfiles =\n    filterProfiles &&\n    filterProfiles.map((filprof) => (\n      <UsersEach\n        key={filprof.id}\n        profileData={filprof}\n        askData={askListFull.filter((ask) => {\n          return (\n            (filprof.userProfile === ask.askFrom) | (filprof.userProfile === ask.askTo)\n          );\n        })}\n      />\n    ));\n    return (\n        <Fragment>\n\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12\">\n                                <Pagetitle title=\"フレンド検索\"/>\n                                <div className=\"row ps-2 pe-2\">\n                                {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                                {!profile.id ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <ProfileRecommender />\n                                    </div>:\n                                    <></>\n                                    }\n                                    {listProfiles}\n                                </div>\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <Popupchat />\n            <Appfooter /> \n \n        </Fragment>\n    );\n\n}\n\n\nexport default Users;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Recommend.jsx",["995","996"],"import React, { Fragment,  useContext } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport RecommendEach from \"./RecommendEach\";\nimport { ApiContext } from '../context/ApiContext'\nimport AttributeEach from \"../components/AttributeEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\n\n\nconst Recommend = () => {\n    const { monopages,  pageattribute, pagesforintattribute, profile } =  useContext(\n        ApiContext\n    );\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n\n\n    const defaultshowpages =\n        monopages.map (page =>\n            <RecommendEach\n            key={page.id}\n            pageData = {page}\n            />)\n\n    const listshowpages =\n    pagesforintattribute &&\n    pagesforintattribute.map( page =>\n        <RecommendEach\n        key={page.id}\n        pageData = {page}\n        />)\n    \n    const listattributes=\n        pageattribute.map( attribute =>\n            <AttributeEach\n            attributeData={attribute} \n            />).slice(0,5)\n\n\n    \n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n            <div className=\"main-content right-chat-active\">\n                    <div className=\"middle-sidebar-bottom\">\n                        <div className=\"middle-sidebar-left pe-0\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-12 \">\n                                <div className='card shadow-xss w-100 d-block d-flex border-0 p-4 mb-3'>\n                                    <h2 className='fw-700 mb-0 mt-0 font-md text-grey-900 d-flex align-items-center'>ホットな話題\n                                    {/* <form action=\"#\" className='pt-0 pb-0 ms-auto'>\n                                        <div className='search-form-2 ms-2'>\n                                            <i className='ti-search font-xss'></i>\n                                            <input type='text' value={inputValue} onChange={handleInputChange} className='form-control text-grey-500 mb-0 bg-greylight theme-dark-bg border-0' placeholder='ユーザーを探す'/>\n                                        </div>\n                                    </form> */}\n                                    {/* <a href='/' className='btn-round-md ms-2 bg-greylight theme-dark-bg rounded-3'><i className='feather-filter font-xss text-grey-500'></i></a> */}\n\n                                    </h2>\n                                    \n\n                                </div>\n                                {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 ms-2 mb-3 me-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                                \n                                {!profile.id ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <ProfileRecommender />\n                                </div>:\n                                <></>\n                                }\n                                \n                                \n                                <div className='d-flex'>\n                                    \n                                <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 p-3'>\n                                        {listattributes}\n\n\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                                    <div className=\"row mb-3 pe-3 ps-2 d-flex\">\n                                    \n                            \n                                    {pagesforintattribute ?\n                                        listshowpages:\n                                        defaultshowpages}\n                                    </div>  \n\n                                    <div className=\"card-body p-0 mb-3\">\n                                        <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                        <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                            <div className=\"stage\">\n                                            <div className=\"dot-typing\"></div>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>  \n                                </div>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            {/* <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\" style={{maxWidth: \"100%\"}}>\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 scroll-bar\">\n                                <div className='card shadow-xss w-100 d-block d-flex border-0 p-4 mb-3'>\n                                    <h2 className='fw-700 mb-0 mt-0 font-md text-grey-900 d-flex align-items-center'>ホットな話題\n                                   \n\n                                    </h2>\n\n                                </div>\n                                <div className=\"ps-2 pe-2 d-flex\">\n                                    <div className=\"col-lg-3 me-3 col-md-3 col-sm-3 d-flex\">\n                                    <div className='card p-3 shadow-xss rounded-xxl border-0 mb-3 '>\n                                        {listattributes}\n\n\n                                    </div>\n                                    </div>\n                                    \n                                    <div className=\"col-lg-9 me-3 col-md-9 col-sm-9 mb-3 pe-2 ps-2 d-flex\">\n                                    \n                                        {pagesforintattribute ?\n                                            listshowpages:\n                                            defaultshowpages}\n                                    </div>  \n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> */}\n\n            <Popupchat />\n            <Appfooter />\n        </Fragment>\n    );\n    \n}\n\nexport default Recommend;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Followed.jsx",["997","998","999","1000","1001","1002"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst Followed = () => {\n    const { profile, monoposts,followeduser} =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const listProfiles =\n        profile.id &&\n        followeduser.map(prof =>\n          <FollowEach\n            key={prof.id}\n            prof = {prof}\n          />\n        );\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n                                \n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロワー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n     \n                                {/* <Profiledetail />\n                                <UserpagePicture /> */}\n                            </div>\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                            {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                            {/* {!profile.id ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <ProfileRecommender />\n                            </div>:\n                            <></>\n                            } */}\n                                <div className=\"row ps-2 pe-2\">\n                                    {listProfiles}\n                                </div>\n\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default Followed;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Following.jsx",["1003","1004","1005","1006","1007","1008","1009","1010"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst Following = () => {\n    const { profile, monoposts, profiles, followinguser, mutualfollowinguser } =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const listProfiles =\n        profile.id &&\n        followinguser.map(prof =>\n          <FollowEach\n            key={prof.id}\n            prof = {prof}\n          />\n        );\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n                                \n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followed\" data-toggle=\"tab\">フォロワー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n     \n                                {/* <Profiledetail />\n                                <UserpagePicture /> */}\n                            </div>\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                            {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                            {/* {!profile.id ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <ProfileRecommender />\n                            </div>:\n                            <></>\n                            } */}\n                                <div className=\"row ps-2 pe-2\">\n                                    {listProfiles}\n                                </div>\n\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default Following;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/MutualFollowing.jsx",["1011","1012","1013","1014","1015","1016","1017","1018"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst MutualFollowing = () => {\n    const { profile, monoposts, profiles, followinguser, mutualfollowinguser } =  useContext(\n        ApiContext\n    );\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const listProfiles =\n        profile.id &&\n        mutualfollowinguser.map(prof =>\n          <FollowEach\n            key={prof.id}\n            prof = {prof}\n          />\n        );\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>}\n                                </div>\n                                <div className='card-body p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15'>{profile.nickName}<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className='list-inline-item me-5'><a className='fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block' href=\"/userpage\" data-toggle=\"tab\">投稿</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/following\" data-toggle=\"tab\">フォロー</a></li>\n                                        <li className=\"list-inline-item me-5\"><a className=\"fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followed\" data-toggle=\"tab\">フォロワー</a></li>\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/mutualfollowing\" data-toggle=\"tab\">相互フォロー</a></li>\n\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n{/*      \n                                <Profiledetail />\n                                <UserpagePicture /> */}\n                            </div>\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                                {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                                {/* {!profile.id ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <ProfileRecommender />\n                                </div>:\n                                <></>\n                                } */}\n                                <div className=\"row ps-2 pe-2\">\n                                    {listProfiles}\n                                </div>\n\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default MutualFollowing;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/ReccomendPosts.jsx",["1019","1020"],"import React, { Fragment,useContext } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Pagetitle from '../components/Pagetitle';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport RecommendEach from \"./RecommendEach\";\nimport { ApiContext } from '../context/ApiContext';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\n\n\n\n\nconst RecommendPosts = () => {\n\n    const { monopages, profile } =  useContext(\n        ApiContext\n    );\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n\n    const listMonoPages =\n        monopages.map (page =>\n            <RecommendEach\n            key={page.id}\n            pageData = {page}\n            />)\n    \n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\" style={{maxWidth: \"100%\"}}>\n                        <div className=\"row\">\n                            <div className=\"col-xl-10 col-xxl-9  chat-left scroll-bar\">\n                                <Pagetitle title=\"ホットな話題\" />\n                                <div className=\"row ps-2 pe-2\">\n                                <div className=\"col-lg-6 col-md-6 col-sm-6 mb-3 pe-2 ps-2\">\n                                    {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                                    {!profile.id ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <ProfileRecommender />\n                                    </div>:\n                                    <></>\n                                    }\n                                    {listMonoPages}\n                                </div>  \n                                \n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter />\n        </Fragment>\n    );\n    \n}\n\nexport default RecommendPosts;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Request.jsx",["1021","1022"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Pagetitle from '../components/Pagetitle';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport RequestEach from '../components/RequestEach'\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\n\nconst Request = () => {\n\n  const { profiles, profile,  friendrequest} = useContext(\n    ApiContext\n\n  );\n  const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n  const listProfiles =\n    profile.id &&\n    friendrequest.map(ask =>\n      <RequestEach\n        key={ask.id}\n        ask = {ask}\n        prof = {profiles.find(item=> {return item.userProfile === ask.askFrom})}\n      />\n    );\n\n    return (\n        <Fragment>\n\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12\">\n                                <Pagetitle title=\"フレンド申請\"/>\n                                <div className=\"row ps-3 pe-3\">\n                                {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                                {!profile.id ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <ProfileRecommender />\n                                    </div>:\n                                    <></>\n                                    }\n                                    {listProfiles}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <Popupchat />\n            <Appfooter /> \n \n        </Fragment>\n    );\n\n}\n\n\nexport default Request;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Mono.jsx",["1023","1024","1025","1026"],"import React, {useState, Fragment, useContext} from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport Slider from \"react-slick\";\nimport 'react-image-lightbox/style.css';\nimport LinearProgress from '@mui/joy/LinearProgress'\nimport MonoPicture from \"../components/MonoPicture\";\nimport Createpost from '../components/Createpost';\nimport Postview from './Postview';\nimport { ApiContext } from '../context/ApiContext'\nimport Button from '@mui/joy/Button';\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Mono = () => {\n    const history = useHistory()\n\n    const hotelsettings = {\n        arrows: false,\n        dots: false,\n        infinite: true,\n        speed: 300,\n        slidesToShow: 1,\n        centerMode: false,\n        variableWidth: false,\n        responsive: [{\n            breakpoint: 800,\n            settings: {\n                slidesToShow: 2,\n            }\n        },\n        {\n            breakpoint: 420,\n            settings: {\n                slidesToShow: 1,\n            }\n        }]\n    };\n\n    const { profile, profiles, intpage, postsforintpage, followPage, followingpage,affiliates,owningpage, getUserInterest, newUserIntPage} =  useContext(\n        ApiContext\n    );\n\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const listMonoPosts = \n    profiles && \n        postsforintpage.map( post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find((item) =>{return item.userProfile === Number(post.userPost)})}\n            reposting = {post.reposting}\n            repostingProfileData = {profiles.find((item) => {return item.userProfile === post.repostingFromUser})}\n                />)\n\n    const [num, setNum] =useState(1)\n    const [display, setDisplay] = useState(null)\n\n    \n    const slice = (arr, size) => arr.flatMap((_, i, a) => i % size ? [] : [a.slice(i, i + size)]);\n\n    const slicedpostlist=slice(listMonoPosts, 5)\n\n\n    const getMorePosts = () => {\n        const next = num +1\n        setNum(next)\n        const slicedpostlistdisplay = slicedpostlist.slice(0, num)\n        const display = slicedpostlistdisplay.map((posts) =>\n        <>\n        {posts}\n        </>\n        )\n        setDisplay(display)\n    }\n\n    const toGetPage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",intpage.intPageId)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/getpage\")\n    }\n\n    const toOwnPage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",intpage.intPageId)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/owningpage\")\n    }\n\n    const rates = postsforintpage.map((post) => {\n        return post.rating\n    })\n    let sum = 0\n    for (let i = 0; i<rates.length; i++){\n        sum += rates[i]\n    }\n    const rate = Math.round(sum/rates.length)\n\n    const isfollow =\n        followingpage.find(item=>\n            {return item.id === intpage.id})\n    \n    const isown =\n    owningpage.find(item=>\n        {return item.id === intpage.id})\n\n    \n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                            <div className=\"pe-2\">\n                                <img src={intpage.img} alt=\"avater\" className=\"rounded-3 img-fluid w-100\" />\n                            </div>\n\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n\n                                <div className=\"card d-block mt-3 border-0 shadow-xss bg-white p-lg-5 pt-4 p-4\">\n                                    {!isown ? \n                                    <span className=\"pointer font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-primary-gradiant d-inline-block text-white \" onClick={() => toGetPage()}>このページの情報を取得しませんか？</span>:\n                                    <span className=\"pointer font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-dark d-inline-block text-white \" onClick={() => toOwnPage()}>購入済みのページ</span>}\n                                    <h2 className=\"fw-700 font-lg mt-3 mb-2\">{intpage.title}</h2>\n                                    <p className=\"font-xsss fw-500 text-grey-500 lh-30 pe-3 mt-3\">{intpage.summary}</p>\n                                    <div>\n\n                                    {/* <a href=\"/defaulthoteldetails\" className=\"btn-round-lg ms-2 d-inline-block rounded-3 bg-greylight\"><i className=\"feather-share-2 font-sm text-grey-700\"></i></a>\n                                    <a href=\"/defaulthoteldetails\" className=\"btn-round-lg ms-2 d-inline-block rounded-3 bg-danger\"><i className=\"feather-bookmark font-sm text-white\"></i> </a> */}\n                                    {!isfollow ?\n                                    <Button className=\"bg-success  border-0 text-white fw-600 text-uppercase font-xssss float-left rounded-3 d-inline-block mt-0 p-2 lh-34 text-center pointer ls-3 w200 mb-3\" onClick={() => followPage(intpage.id)}>この話題をフォロー</Button>\n                                    :\n                                    <Button className=\"bg-success border-0 text-white fw-600 text-uppercase font-xssss float-left rounded-3 d-inline-block mt-0 p-2 lh-34 text-center pointer ls-3 w200 mb-3\" disabled >フォロー済み</Button>\n                                    }\n                                    </div>\n\n                                    <div className=\"card w-100 border-0 mt-3 mb-4 p-lg-4 p-3 shadow-xss position-relative rounded-3 bg-white\">\n                                    <div className=\"section full mb-4 p-4 bg-light theme-dark-bg theme-light-bg rounded-3\">\n                                    \n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className=\"font-xss text-grey-600 fw-600 mt-2\">総シンパシー</h4>\n                                            </div>\n                                            {rate?\n                                            <div className=\"col-12 text-center\">\n                                            <h2 className=\"display2-size lh-1 m-0 text-grey-900 fw-700\">{rate}%</h2>\n                                            </div>:\n                                            <div className=\"col-12 text-center\">\n                                            <h2 className=\"display2-size lh-1 m-0 text-grey-900 fw-700\">0%</h2>\n                                            </div>\n                                            }\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className=\"font-xssss text-grey-600 fw-600 mt-2\">{postsforintpage.length}件のPost</h4>\n                                            </div>\n                                        </div>\n                                        {rate ?\n                                        <LinearProgress\n                                        color=\"primary\"\n                                        determinate\n                                        size=\"lg\"\n                                        value={rate}\n                                        variant=\"soft\"\n                                        />:\n                                        <LinearProgress\n                                                color=\"primary\"\n                                                determinate\n                                                size=\"lg\"\n                                                value={0}\n                                                variant=\"soft\"\n                                                />\n                                        }\n                                        \n                                    </div>\n                                    \n                                </div>\n\n\n                                <div className=\"card d-block border-0 rounded-3 overflow-hidden p-4 shadow-xss mt-4 alert-success mb-4\">\n                                    <h2 className=\"fw-700 font-sm mb-3 mt-1 ps-1 text-success mb-4\">概要</h2>\n                                    <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\" ti-check font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.goodpoint}</h4>\n                                    <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"ti-close   font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.badpoint}</h4>\n\n\n                                </div>\n\n                                <MonoPicture />\n\n                                    <div className=\"card-body p-0 mt-4 d-flex\">\n                                        <div className=\"card-body p-0 mb-1\">\n                                                \n                                            <div className=\"card shadow-xss rounded-xxl border-0 p-1 mb-0\">\n                                                \n                                                <div className=\"card-body pointer\">\n                                                    <figure className=\"avatar\"><img src={affiliates.img} alt=\"avater\" className=\"shadow-sm rounded-3 img-fluid\" /></figure>\n                                                    <h4 className=\"fw-500 text-grey-500 font-xssss \"> {affiliates.title}\n                                                    </h4>\n                                                    \n                                                </div>\n                                            </div>\n                                           \n                                        </div>\n                                    </div>\n\n                                </div>\n                                {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                                {!profile.id ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <ProfileRecommender />\n                                </div>:\n                                <></>\n                                }\n\n                                <Createpost \n                                postTo = {intpage.id}\n                                profileData = {profile}/>\n\n                                {num === 1 ?\n                                    slicedpostlist[0]\n                                    :\n                                    display\n                                }\n                                <div className=\"card-body p-0 mb-3\">\n                                    <div className=\"text-center\" >\n                                        <Button\n                                        className=\" fw-700 text-white font-xssss text-center bg-current \"\n                                        onClick={() => getMorePosts()}\n                                        size=\"sm\"\n                                        variant=\"solid\"\n                                        >さらに読み込み\n                                        </Button>\n                                    </div>\n                                </div>\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>          \n\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 ps-0\">\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n    \n}\n\nexport default Mono;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Login.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Logout.jsx",["1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038"],"import React, {useContext, useCallback, useState} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { Link } from \"react-router-dom\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { useCookies } from \"react-cookie\";\nexport const ASPECT_RATIO = 1 / 1;\nexport const CROP_WIDTH = 400;\n\nconst Logout = () => {\n    const {profile, editedProfile, setEditedProfile, deleteProfile, setCover, coverBack, createProfile, editProfile} = useContext(ApiContext)\n\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n    const Logout = () => {\n        removeCookie(\"current-token\")\n    }\n\n\n    \n    return (\n        <div className=\"main-content bg-lightblue theme-dark-bg right-chat-active\">\n\n            <div className=\"middle-sidebar-bottom\">\n                <div className=\"middle-sidebar-left\">\n                    <div className=\"middle-wrap\">\n                        <div className=\"card w-100 border-0 bg-white shadow-xs p-0 mb-4\">\n                            <div className=\"card-body p-4 w-100 bg-current border-0 d-flex rounded-3\">\n                                <Link to=\"/settings\" className=\"d-inline-block mt-2\"><i className=\"ti-arrow-left font-sm text-white\"></i></Link>\n                                <h4 className=\"font-xs text-white fw-600 ms-4 mb-0 mt-2\">ログアウト</h4>\n                            </div>\n                            <div className=\"card-body p-lg-5 p-4 w-100 border-0\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-lg-4 text-center\">\n                                    {profile.id ? (\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src={profile.img} alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>):(\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>)}\n                                    <h2 className=\"fw-700 font-sm text-grey-900 mt-3\">{profile.nickName}</h2>\n                                    <h4 className=\"text-grey-500 fw-500 mb-3 font-xsss mb-4\">{profile.created_on}</h4>\n                                </div>\n                            </div>\n                                <div className=\"row\">\n                                <div className=\"col-lg-12 \">\n                                        <div className=\"file-upload-container\">\n                                        <a href='/login'>\n                                            <Button \n                                            onClick={() => Logout()} className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" variant=\"contained\" component=\"label\" >\n                                            ログアウトする\n                                            </Button>\n                                        </a>\n                                        </div>\n                                        <div className='card-body  position-relative'>\n                                            \n                                            <label className=\"mont-font fw-600 font-xssss mb-2\">！再ログインが必要になります！\n                                            </label>\n                                        </div>\n                                     \n    \n                                        \n                                </div>\n                                    \n                                    <div className=\"col-lg-12\">\n                                        \n                                        <a href='/settings' className='bg-grey text-center text-black ms-2 font-xsss fw-600 p-3 w175 rounded-3 d-inline-block'>戻る</a>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n            \n            </div>\n\n        </div>\n    )   \n}\n\nexport default Logout","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Account.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/SpecificUserpage.jsx",["1039","1040","1041"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport SpecificUserpagePicture from \"../components/SpecificUserpagePicture\";\nimport SpecificUserpageEach from '../components/SpecificUserpageEach';\nimport Postview from './Postview';\nimport SpecificUserProfiledetail from \"../components/SpecificUserProfileDetail\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\n\nconst SpecificUserpage = () => {\n    const {  profile, postsforintuser,profiles } =  useContext(\n        ApiContext\n    );\n    const posts = postsforintuser\n\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n\n    const listMonoPosts = \n        posts.map(post =>\n            <Postview\n            key={post.id}\n            postData= {post}\n            profileData = {profiles.find(item =>{return item.userProfile === post.userPost})}\n            reposting = {post.reposting}\n            repostingProfileData = {profiles.find((item) => {return item.userProfile === post.repostingFromUser})}\n            />\n        )\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left ps-2 pe-2\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3 \">\n                            <SpecificUserpageEach />\n\n\n\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-0\">\n     \n                                <SpecificUserProfiledetail/>\n                                <SpecificUserpagePicture />\n                            </div>\n                            <div className=\"col-xl-8 col-xxl-9 col-lg-8\">\n                            {!cookies[\"current-token\"] ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                    <LoginComponent />\n                                    </div>:\n                                    <></>\n                                    }\n                            {!profile.id ?\n                                    <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                    <ProfileRecommender />\n                                    </div>:\n                                    <></>\n                                    }\n\n                                {listMonoPosts}\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default SpecificUserpage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Settings.jsx",["1042","1043","1044","1045","1046"],"import React, {  Fragment } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useCookies, useContext } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\nimport { ApiContext } from '../context/ApiContext'\n\n\nconst Settings = (props) => {\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content bg-lightblue theme-dark-bg right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left\">\n                        <div className=\"middle-wrap\">\n                            <div className=\"card w-100 border-0 bg-white shadow-xs p-0 mb-4\">\n                                \n                                <div className=\"card-body p-lg-5 p-4 w-100 border-0\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-12\">\n                                        {!cookies[\"current-token\"] ?\n                                        <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 me-3 bg-current'>\n                                        <LoginComponent />\n                                        </div>:\n                                        <></>\n                                        }\n                                            <h4 className=\"mb-4 font-xxl fw-700 mont-font mb-lg-5 mb-4 font-md-xs\">設定</h4>\n                                            <div className=\"nav-caption fw-600 font-xssss text-grey-500 mb-2\">一般</div>\n                                            <ul className=\"list-inline mb-4\">\n                                                <li className=\"list-inline-item d-block border-bottom me-0\"><Link to=\"/account\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-primary-gradiant text-white feather-home font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">アカウント情報</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link></li>\n                                            </ul>\n\n                                            {/* <div className=\"nav-caption fw-600 font-xsss text-grey-500 mb-2\">アカウント</div>\n                                            <ul className=\"list-inline mb-4\">\n                                                <li className=\"list-inline-item d-block border-bottom me-0\"><Link to=\"/payment\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-mini-gradiant text-white feather-credit-card font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">登録カード</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link>\n                                                </li>\n                                                <li className=\"list-inline-item d-block  me-0\"><Link to=\"/password\" className=\"pt-2 pb-2 d-flex align-items-center\"><i className=\"btn-round-md bg-blue-gradiant text-white feather-inbox font-md me-3\"></i> <h4 className=\"fw-600 font-xsss mb-0 mt-0\">パスワード</h4><i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i></Link></li>\n                                                \n                                            </ul> */}\n\n                                            <div className=\"nav-caption fw-600 font-xsss text-grey-500 mb-2\">その他</div>\n                                            <ul className=\"list-inline\">\n                                                <li className=\"list-inline-item d-block me-0\">\n                                                    <a href=\"/logout\" className=\"pointer pt-2 pb-2 d-flex align-items-center\">\n                                                        <i className=\"btn-round-md bg-red-gradiant text-white feather-lock font-md me-3\"></i>\n                                                        <h4 className=\"fw-600 font-xsss mb-0 mt-0\">ログアウト</h4>\n                                                        <i className=\"ti-angle-right font-xsss text-grey-500 ms-auto mt-3\"></i>\n                                                    </a>\n                                                </li>\n                                                \n                                            </ul>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter />\n            \n        </Fragment>\n    );\n    \n}\n\nexport default Settings;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Analytics.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Postview.jsx",["1047","1048","1049","1050","1051","1052","1053"],"import React,{useState, useContext} from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport Commentview from './Commentview';\nimport Createcomment from '../components/Createcomment';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Lightbox from 'react-image-lightbox';\n\nconst Postview = ({postData, profileData,reposting, repostingProfileData}) =>  {\n    const history = useHistory()\n    const { profile,monocomments,  commentsforintpost,  monopages, profiles, newUserIntPage,likePost,newUserIntUser , getUserInterest,newUserIntPost, createRepost, monoposts} =  useContext(\n        ApiContext, \n    );\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const [tab1, setTab1] = useState(0)\n\n\n    const toSpecificUserPage = () => {\n        if (profile.userProfile === profileData.userProfile) {\n            console.log(\"本人\")\n            history.push(\"/userpage\")\n        \n        } else {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intUserId\", profileData.userProfile)\n        newUserIntUser(createdIntData)\n        console.log(\"ちがう\")\n        getUserInterest()\n        history.push(\"/specificuserpage\")\n            \n        }\n    }\n\n    const toSpecificUserPageRepost = () => {\n        if (profile.userProfile === repostingProfileData.userProfile) {\n            console.log(\"本人\")\n            history.push(\"/userpage\")\n        \n        } else {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intUserId\", repostingProfileData.userProfile)\n        newUserIntUser(createdIntData)\n        console.log(\"ちがう\")\n        getUserInterest()\n        history.push(\"/specificuserpage\")\n            \n        }\n    }\n\n    const showcomment = () => {\n        getUserInterest()\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPostId\", postData.id)\n        newUserIntPost(createdIntData)\n        getUserInterest()\n        setIsOpen(!isOpen)\n    }\n\n    \n\n\n    const listMonoComment =\n    commentsforintpost &&\n    commentsforintpost.map(comment =>\n        <Commentview\n        key={comment.id}\n        commentData={comment}\n        profileData= {profiles.find((item) => {return item.userProfile === Number(comment.userComment)})}\n        />)\n    \n    const comments = monocomments.filter((item) => {return item.post === Number(postData.id)})\n    const repostedtimes = monoposts.filter((item) => {return item.repostingFrom === Number(postData.id)})\n    const targetpost = monoposts.find((item) => {\n        return item.id === Number(postData.id)})\n    const likedtimes = targetpost.liked\n\n\n    const monopage = monopages.find((item) => {return item.id === Number(postData.reviewTo)})\n\n\n    const toMonopage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",postData.reviewTo)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/mono\")\n    }\n\n    \n\n    \n\n\n\n    return (\n        \n\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 ps-3 pe-3 pt-3 pb-2 mb-3\">\n           \n            {!reposting ?<>\n\n            <div className=\"card-body ps-1 pe-1 pt-0 pb-0 d-flex\">\n                <div>\n                    <div className=\"card-body p-0 d-flex\"> \n                    { profileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPage()} ><img src={profileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w40\"  /></figure>:\n                    <figure className=\"avatar me-3\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                    {profileData ? <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> {profileData.nickName} <span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>:\n                    <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> Nick Name<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>}\n                    </div>\n\n                    <div className=\"card-body p-0 me-lg-5\" >\n                        <p className=\"fw-600 text-grey-600 lh-26 font-xssss w-100 mb-2\">{postData.text}</p>\n                    </div>\n                </div>                \n            </div>\n\n             \n            \n            \n            <div className=\"card-body d-block ps-1 pe-1 pt-0 pb-0\">\n            {postData.img ?\n                <div className=\"row ps-2 pe-2\">\n                    <div className=\"col-sm-12 p-1\">\n                        {/* <img src={postData.img} className=\"rounded-3 w-100\" alt=\"post\" /> */}\n                        {isOpenModal && (\n                            <Lightbox\n                                mainSrc={postData.img}\n                                onCloseRequest={() => setIsOpenModal(false)}\n                            />\n                        )}\n                         <div onClick={() => setIsOpenModal(true)}>\n                            <a>\n                                <img src={`${postData.img}`}  className=\"img-fluid rounded-3 w-100\"/>\n                            </a>\n                        </div>\n                    </div>                                        \n                </div>\n                : <></>}\n            </div>\n            <div className=\"pointer \">\n            <div className=\"card shadow-xss rounded-xxl border-0 pt-3 pb-2 pe-3 ps-3 mb-0\">\n                <div className=\"card-body p-0 d-flex pointer\" onClick={() => toMonopage()}>\n                    <figure className=\"avatar me-3\"><img src={monopage.img} alt=\"avater\" className=\"shadow-sm rounded-3 w45\" /></figure>\n                    <h4 className=\"fw-600 text-grey-600 font-xssss\"> {monopage.title.slice(0,12)}..\n                    <span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {monopage.created_on}</span>\n                    </h4>\n                    \n                </div>\n\n                <div className=\"card-body p-0 mb-2\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h2 className=\"font-xsssss  lh-1 mt-2 text-grey-600 fw-500\">話題へのシンパシー：{postData.rating}%</h2>\n                        </div>\n                    </div>\n                    <LinearProgress\n                        color=\"info\"\n                        determinate\n                        size=\"sm\"\n                        value= {postData.rating}\n                        variant=\"soft\"\n                        />\n                </div>\n            </div>\n            </div>\n\n            <div className=\"card-body d-flex p-0 mt-1\">\n                <div className=\"emoji-bttn pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xsssss me-2\" onClick={() => likePost(postData)} ><i className=\"feather-thumbs-up text-dark text-grey-600 btn-round-sm font-sm\"></i> {\n                likedtimes.length} Liked</div>\n\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xsssss\" onClick={() => createRepost(postData)}><i className=\"feather-repeat text-dark text-grey-600 btn-round-sm font-sm\"></i><span className=\"d-none-xss\">{repostedtimes.length} Reposted</span></a>\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xsssss\" onClick={() => {\n                    showcomment();}}><i className=\"feather-message-circle text-dark text-grey-600 btn-round-sm font-sm\"></i><span className=\"d-none-xss\">{comments.length} Comments</span></a>\n                \n            </div> \n\n            <div className=\"card-body d-block p-0\">\n                \n                {isOpen ?\n                <>\n                {listMonoComment}\n                <Createcomment\n                commentTo = {postData.id}\n                profileData= {profile}\n                />\n                </>\n                : \n                <></>\n                }\n            </div></>\n\n\n            :<>\n            <div className=\"card-body ps-1 pe-1 pt-0 pb-0 d-flex\">\n                    { profileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPage()} ><img src={profileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w40\"  /></figure>:\n                    <figure className=\"avatar me-3\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                    {profileData ? <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> {profileData.nickName} <span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>:\n                    <h4 className=\"fw-700 text-grey-900 font-xssss mt-1\"> Nick Name<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                    </h4>}\n\n                    \n\n                </div>\n\n            <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-3 mb-1\">\n                <div className=\"card-body p-0 d-flex\">\n                    <div>\n                        <div className=\"card-body p-0 d-flex\">\n                        { repostingProfileData ? <figure className=\"avatar me-3 pointer\" onClick={() => toSpecificUserPageRepost()} ><img src={repostingProfileData.img} alt=\"avater\" className=\"shadow-sm rounded-circle w30\"  /></figure>:\n                        <figure className=\"avatar me-3\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.img\" alt=\"avater\" className=\"shadow-sm rounded-circle w45\" /></figure>}\n                        {repostingProfileData ? <h4 className=\"fw-700 text-grey-600 font-xsssss mt-1\"> {repostingProfileData.nickName} <span className=\"d-block font-xsssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                        </h4>:\n                        <h4 className=\"fw-700 text-grey-600 font-xsssss mt-1\"> Nick Name<span className=\"d-block font-xsssss fw-500 mt-1 lh-3 text-grey-500\"> {postData.created_on}</span>\n                        </h4>}\n                        </div>\n\n                        <div className=\"card-body p-0 me-lg-5\" >\n                            <p className=\"fw-600 text-grey-500 lh-26 font-xssss w-100 mb-2\">{postData.text}</p>\n                        </div>\n                        \n                    </div>\n\n                   \n                    \n                    <div className=\"card-body p-0 mb-1 d-flex\">\n                   \n                    </div>\n \n                    \n                    \n                </div>\n\n                <div className=\"card-body d-block p-0\">\n                    {postData.img ?\n                        <div className=\"row ps-2 pe-2\">\n                            <div className=\"col-sm-12 p-1\"><img src={postData.img} className=\"rounded-3 w-100\" alt=\"post\" /></div>        \n                                                            \n                        </div>\n\n                        : <></>}\n                \n                </div>\n                <div className=\"pointer\">\n                            \n                <div className=\"card shadow-xss rounded-xxl border-0 pt-3 pb-2 pe-3 ps-3 mb-0\">\n                    \n                    <div className=\"card-body p-0 d-flex pointer\" onClick={() => toMonopage()}>\n                        <figure className=\"avatar me-3\"><img src={monopage.img} alt=\"avater\" className=\"shadow-sm rounded-3 w45\" /></figure>\n                        <h4 className=\"fw-600 text-grey-600 font-xssss\"> {monopage.title.slice(0,12)}..<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\"> {monopage.created_on}</span>\n                        </h4>\n                        \n                    </div>\n                    <div className=\"card-body p-0 mb-2\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h2 className=\"font-xsssss  lh-1 mt-2 text-grey-600 fw-500\">話題へのシンパシー：{postData.rating}%</h2>\n                        </div>\n                    </div>\n                    <LinearProgress\n                        color=\"info\"\n                        determinate\n                        size=\"sm\"\n                        value= {postData.rating}\n                        variant=\"soft\"\n\n                        />\n                    </div>\n                </div>\n                </div>\n                </div>\n\n\n            <div className=\"card-body d-flex  p-0\">\n                <div className=\"emoji-bttn pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xsssss me-2\" onClick={() => likePost(postData)} ><i className=\"feather-thumbs-up text-dark text-dark text-grey-600 btn-round-sm font-sm\"></i> {\n                likedtimes.length} Liked</div>\n\n                <a className=\"pointer d-flex align-items-center fw-600 text-grey-600 text-dark lh-26 font-xsssss\" onClick={() => showcomment()}><i className=\"feather-message-circle text-dark text-grey-600 btn-round-sm font-sm\"></i><span className=\"d-none-xss\">{comments.length} Comments</span></a>\n                \n            </div> \n\n            <div className=\"card-body d-block p-0\">\n                \n                {isOpen ?\n                <>\n                {listMonoComment}\n                <Createcomment\n                commentTo = {postData.id}\n                profileData= {profile}\n                />\n                </>\n                : \n                <></>\n                }\n            </div>\n            \n            \n            </>}\n        </div>\n\n\n    );\n    \n}\n\nexport default Postview;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FriendRecommendslider.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/HomeReccomendPage.jsx",["1054"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/FollowingPage.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/RecommendEach.jsx",["1055","1056","1057"],"import React,{useContext, useState} from 'react';\n\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport LinearProgress from '@mui/joy/LinearProgress'\n\nconst RecommendEach = (pageData, isfollow) => {\n    const history = useHistory()\n    const { newUserIntPage,getUserInterest, monoposts } =  useContext(\n        ApiContext\n    );\n    \n\n    const toMonopage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",pageData.pageData.id)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/mono\")\n    }\n\n    const [rate, setRate] = useState([]);\n    // const [rates, setRates] = useState([]);\n    \n    const postsforpage = monoposts.filter((each)=> {\n        return each.reviewTo === Number(pageData.pageData.id)\n    })\n\n    const rates = postsforpage.map((post) => {\n        return post.rating })\n\n    let sum = 0\n    for (let i = 0; i<rates.length; i++){\n        sum += rates[i]\n    }\n   \n    // rates&& setRate(Math.round(sum/rates.length))\n    (Math.round(sum/rates.length))\n\n\n\n    \n\n    return (\n        <div className=\"col-md-5 col-sm-6 pe-2 ps-2\">\n        <div className=\"card w-100 p-0 hover-card shadow-xss border-0 rounded-3 overflow-hidden me-2 ms-2 mb-3\" onClick={toMonopage}>\n            {/* {value.feature ? <span className=\"font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-primary-gradiant d-inline-block text-white position-absolute mt-3 ms-3 z-index-1\">Featured</span> : ''} */}\n            <div className=\"card-image w-100 mb-3\">\n                <a className=\"position-relative d-block\"><img src={pageData.pageData.img} alt=\"hotel\" className=\"w-100\" /></a>\n            </div>\n            <div className=\"card-body pt-0\">\n                {/* <i className=\"feather-bookmark font-md text-grey-500 position-absolute right-0 me-3\"></i> */}\n                <h4 className=\"fw-700 font-xss mt-0 lh-28 mb-0 pe-3\"><a href=\"/mono\" className=\"text-dark text-grey-900\">{pageData.pageData.title}</a></h4>\n                <h6 className=\"font-xsssss text-grey-500 fw-600 mt-0 mb-2\"> {pageData.pageData.created_on}</h6>\n\n                <div className=\"card-body p-1 mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"font-xss  lh-1 mt-2 text-grey-900 fw-300\">{Math.round(sum/rates.length)}</h2>\n                    </div>\n                </div>\n                <LinearProgress\n                    color=\"info\"\n                    determinate\n                    size=\"sm\"\n                    value= {pageData.pageData.rating}\n                    variant=\"plain\"\n                    />\n                </div>\n                <div className=\"clearfix\"></div>\n                <span className=\"font-xsss fw-700 mt-0 pe-5 ls-2 lh-32 d-inline-block text-success float-left\"><span className=\"font-xssss\"></span>\n                 {/* {pageData.summary.slice(0,10)}.. */}\n                 </span>\n                <a href=\"/mono\" className=\"position-absolute bottom-15 mb-5 ms-2 right-15\"><i className=\"btn-round-sm bg-primary-gradiant text-white font-sm feather-chevron-right\"></i></a>\n            </div>\n        </div>\n        </div>\n\n    )\n} \n\nexport default RecommendEach;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Appfooter.jsx",["1058"],"import React  from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\nconst Appfooter = () => {\n    const { profile} = useContext(\n        ApiContext\n      );\n\n        return (\n            <div className=\"app-footer border-0 shadow-lg bg-primary-gradiant\">\n                <Link to=\"/home\" className=\"nav-content-bttn nav-center\"><i className=\"feather-home\"></i></Link>\n                <Link to=\"/recommend\" className=\"nav-content-bttn\"><i className=\"feather-trending-up\"></i></Link>\n                <Link to=\"/recommenduser\" className=\"nav-content-bttn\" data-tab=\"chats\"><i className=\"feather-user\"></i></Link>           \n                <Link to=\"/owningpages\" className=\"nav-content-bttn\"><i className=\"feather-zap\"></i></Link>\n                <Link to=\"/userpage\" className=\"nav-content-bttn\">\n                { profile.id ?\n                <img src={profile.img} alt=\"user\" className=\"w40 shadow-xss rounded-circle\" />:\n                <img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"user\" className=\"w40 shadow-xss rounded-circle\" />}\n\n                </Link>\n            </div>        \n        );\n    \n}\n\nexport default Appfooter;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Header.jsx",["1059","1060"],"import React from 'react';\nimport { Link , NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\nimport Darkbutton from './Darkbutton';\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [isNoti, setIsNoti] = useState(false)\n    const toggleisNoti = () => setIsNoti( !isNoti);\n\n    const { profile} = useContext(\n        ApiContext\n      );\n\n\n\n    return (\n        <div className=\"nav-header bg-white shadow-xs border-0\">\n            <div className=\"nav-top\">\n                <Link to=\"/home\"><i className=\"feather-zap text-success display2-size me-3 ms-0\"></i><span className=\"d-inline-block fredoka-font ls-3 fw-600 text-current font-xxl logo-text mb-0\">Tatami </span> </Link>\n                {/* <Link to=\"/videos\" className=\"mob-menu me-2\"><i className=\"feather-video text-grey-900 font-sm btn-round-md bg-greylight\"></i></Link>\n                <span  className=\"me-2 menu-search-icon mob-menu\"><i className=\"feather-search text-grey-900 font-sm btn-round-md bg-greylight\"></i></span> */}\n                {/* <button onClick={this.toggleOpen} className={`nav-menu me-0 ms-2 ${buttonClass}`}></button> */}\n            </div>\n            \n\n            \n\n\n                \n            <span className={`p-2 pointer text-center ms-auto menu-icon`} id=\"dropdownMenu3\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => toggleisNoti()}></span>\n\n            { isOpen ?\n            <div className={`dropdown-menu p-4 right-0 rounded-xxl border-0 shadow-lg show`} aria-labelledby=\"dropdownMenu3\">\n                <h4 className=\"fw-700 font-xss mb-4\">通知</h4>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 3分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 2分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5 mb-3\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 1 分前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n                <div className=\"card bg-transparent-card w-100 border-0 ps-5\">\n                    <img src=\"assets/images/user.png\" alt=\"user\" className=\"w40 position-absolute left-0\" />\n                    <h5 className=\"font-xsss text-grey-900 mb-1 mt-0 fw-700 d-block\">Kei Ichikawa <span className=\"text-grey-400 font-xsssss fw-600 float-right mt-1\"> 30秒前</span></h5>\n                    <h6 className=\"text-grey-500 fw-500 font-xssss lh-4\">少子化対策についてどう思う？に投稿が..</h6>\n                </div>\n            </div>: <></>\n            }\n            {/* <NavLink activeClassName=\"active\" to=\"/home\" className=\"p-2 text-center ms-3 menu-icon center-menu-icon\"><i className=\"feather-home font-lg bg-greylight btn-round-lg theme-dark-bg text-grey-500 \"></i></NavLink>\n            <NavLink activeClassName=\"active\" to=\"/request\" className=\"p-2 text-center ms-0 menu-icon center-menu-icon\"><i className=\"feather-bell font-lg bg-greylight btn-round-lg theme-dark-bg text-grey-500 \"></i></NavLink> */}\n            <Darkbutton />\n            {profile.img ? \n            <Link to=\"/userpage\" className=\"p-0 ms-3 menu-icon\"><img src={profile.img} alt=\"user\" className=\"w40 mt--1 rounded-circle\" /></Link>:\n            <Link to=\"/userpage\" className=\"p-0 ms-3 menu-icon\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"user\" className=\"w40 mt--1 rounded-circle\" /></Link>\n\n            }\n\n            <nav className=\"navigation scroll-bar\">\n                <div className=\"container ps-0 pe-0\">\n                    <div className=\"nav-content\">\n                        <div className=\"nav-wrap bg-white bg-transparent-card rounded-xxl shadow-xss pt-3 pb-1 mb-2 mt-2\">\n                            <div className=\"nav-caption fw-600 font-xssss text-grey-500\"><span></span>見つけよう</div>\n                            <ul className=\"mb-1 top-content\">\n                                <li className=\"logo d-none d-xl-block d-lg-block\"></li>\n                                <li><Link to=\"/recommend\" className=\"nav-content-bttn open-font\"><i className=\"feather-zap btn-round-md bg-gold-gradiant me-3\"></i><span>Topics</span></Link></li>\n                                <li><Link to=\"/recommenduser\" className=\"nav-content-bttn open-font\"><i className=\"feather-user btn-round-md bg-success me-3\"></i><span>Users</span></Link></li> \n                                {/* <li><Link to=\"/request\" className=\"nav-content-bttn open-font\"><i className=\"feather-bell btn-round-md bg-warning me-3\"></i><span>Requests</span></Link></li>       */}\n                                <li><Link to=\"/home\" className=\"nav-content-bttn open-font\"><i className=\"feather-home btn-round-md bg-orange me-3\"></i><span>Home</span></Link></li>      \n\n                            </ul>\n                        </div>\n\n                    \n                        <div className=\"nav-wrap bg-white bg-transparent-card rounded-xxl shadow-xss pt-3 pb-1\">\n                            <div className=\"nav-caption fw-600 font-xssss text-grey-500\"><span></span> 拡張機能</div>\n                            <ul className=\"mb-1\">\n                                <li className=\"logo d-none d-xl-block d-lg-block\"></li>\n                                <li><Link to=\"/owningpages\" className=\"nav-content-bttn open-font h-auto pt-2 pb-2\"><i className=\"font-sm feather-pie-chart me-3 text-grey-500\"></i><span>購入したページ</span>\n                                {/* <span className=\"circle-count bg-warning mt-0\">企業限定</span> */}\n                                </Link></li>\n                                <li><Link to=\"/settings\" className=\"nav-content-bttn open-font h-auto pt-2 pb-2\"><i className=\"font-sm feather-settings me-3 text-grey-500\"></i><span>設定</span></Link></li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n            \n            <div className=\"app-header-search\">\n                <form className=\"search-form\">\n                    <div className=\"form-group searchbox mb-0 border-0 p-1\">\n                        <input type=\"text\" className=\"form-control border-0\" placeholder=\"Search...\" />\n                        <i className=\"input-icon\">\n                            <ion-icon name=\"search-outline\" role=\"img\" className=\"md hydrated\" aria-label=\"search outline\"></ion-icon>\n                        </i>\n                        <span className=\"ms-1 mt-1 d-inline-block close searchbox-close\">\n                            <i className=\"ti-close font-xs\" ></i>\n                        </span>\n                    </div>\n                </form>\n            </div>\n            \n        </div>\n    );\n    \n}\n\nexport default Header;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Leftnav.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/LoginComponent.jsx",["1061","1062"],"import React, { useReducer, Fragment, useContext } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { ApiContext } from '../context/ApiContext'\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    START_FETCH,\n    FETCH_SUCCESS,\n    ERROR_CATCHED,\n    //INPUT_EDIT,\n    INPUT_EDIT_LOG,\n    INPUT_EDIT_REG,\n    TOGGLE_MODE,\n  } from \"./actionTypes\"\n\n  const initialState = {\n    isLoading: false,\n    isLoginView: true,\n    error: \"\",\n    credentialsLog: {\n      username: \"\",\n      password: \"\",\n    },\n    credentialsReg: {\n      email: \"\",\n      password: \"\",\n    },\n  };\n\n\n  const loginReducer = (state, action) => {\n    switch (action.type) {\n      case START_FETCH: {\n        return {\n          ...state,\n          isLoading: true,\n        };\n      }\n      case FETCH_SUCCESS: {\n        return {\n          ...state,\n          isLoading: false,\n        };\n      }\n      case ERROR_CATCHED: {\n        return {\n          ...state,\n          error: \"Email or password is not correct!\",\n          isLoading: false,\n        };\n      }\n      // case INPUT_EDIT: {\n      //   return {\n      //     ...state,\n      //     [action.inputName]: action.payload,\n      //     error: \"\",\n      //   };\n      // }\n      case INPUT_EDIT_LOG: {\n        return {\n          ...state,\n          //[action.inputName]: action.payload,\n          credentialsLog: {\n            ...state.credentialsLog,\n            [action.inputName]: action.payload,\n          },\n          error: \"\",\n        };\n      }\n      case INPUT_EDIT_REG: {\n        return {\n          ...state,\n          //[action.inputName]: action.payload,\n          credentialsReg: {\n            ...state.credentialsReg,\n            [action.inputName]: action.payload,\n          },\n          error: \"\",\n        };\n      }\n      case TOGGLE_MODE: {\n        return {\n          ...state,\n          isLoginView: !state.isLoginView,\n        };\n      }\n      default:\n        return state;\n    }\n  };\n\n  const LoginComponent = (props) => {\n    const [state, dispatch] = useReducer(loginReducer, initialState);\n    const {profile} = useContext(ApiContext)\n  \n    const inputChangedLog = () => (event) => {\n      //const cred = state.credentialsLog;\n      //cred[event.target.name] = event.target.value;\n      dispatch({\n        type: INPUT_EDIT_LOG,\n        //inputName: \"state.credentialLog\",\n        //payload: cred,\n        inputName: event.target.name,\n        payload: event.target.value,\n      });\n    };\n  \n    const inputChangedReg = () => (event) => {\n      //const cred = state.credentialsReg;\n      //cred[event.target.name] = event.target.value;\n      dispatch({\n        type: INPUT_EDIT_REG,\n        //inputName: \"state.credentialReg\",\n        //payload: cred,\n        inputName: event.target.name,\n        payload: event.target.value,\n      });\n    };\n  \n    const login = async (event) => {\n      event.preventDefault();\n      if (state.isLoginView) {\n        try {\n          dispatch({ type: START_FETCH });\n          const res = await axios.post(\n            \"http://localhost:8000/authen/\",\n            state.credentialsLog,\n            {\n              headers: { \"Content-Type\": \"application/json\" },\n            }\n          );\n          props.cookies.set(\"current-token\", res.data.token);\n          (res.data.token\n            ? \n              (window.location.href = \"/home\")\n              \n            : (window.location.href = \"/login\"));\n          dispatch({ type: FETCH_SUCCESS });\n        } catch {\n          dispatch({ type: ERROR_CATCHED });\n        }\n      } else {\n        try {\n          dispatch({ type: START_FETCH });\n          await axios.post(\n            \"http://localhost:8000/api/user/register/\",\n            state.credentialsReg,\n            {\n              headers: { \"Content-Type\": \"application/json\" },\n            }\n          );\n          dispatch({ type: FETCH_SUCCESS });\n          dispatch({ type: TOGGLE_MODE });\n        } catch {\n          dispatch({ type: ERROR_CATCHED });\n        }\n      }\n    };\n\n  const toggleView = () => {\n    dispatch({ type: TOGGLE_MODE });\n  };\n\n\n    return (\n        <div className=\"card shadow-none border-0 ms-auto me-auto login-card bg-current\">\n            <div className=\"card-body rounded-0 text-left\">\n            { state.isLoginView ?\n            <h2 className=\"fw-700 display1-size display2-md-size mb-3 text-white\">Tatamiに <br />ログイン</h2>:\n            <h2 className=\"fw-700 display1-size display2-md-size mb-3 text-white\">アカウントを <br />新規作成</h2>} \n                \n                \n                \n                    {state.isLoading && <CircularProgress />}\n                    { state.isLoginView ?\n                    <form onSubmit={login}>\n                    <div className=\"form-group icon-input mb-3\">\n                        <i className=\"font-sm ti-email text-grey-500 pe-0\"></i>\n                        <input onChange={inputChangedLog()} name=\"username\" value={state.credentialsLog.username} type=\"text\" className=\"style2-input ps-5 form-control text-grey-900 font-xsss fw-600\" placeholder=\"Your Email Address\" />                        \n                    </div>\n                    <div className=\"form-group icon-input mb-1\">\n                      <input onChange={inputChangedLog()}name=\"password\" value={state.credentialsLog.password} type=\"password\" className=\"style2-input ps-5 form-control text-grey-900 font-xss ls-3\" placeholder=\"Password\" />\n                      <i className=\"font-sm ti-lock text-grey-500 pe-0\"></i>\n                    </div>\n                    {/* <div className=\"form-check text-left mb-3\">\n                          <input type=\"checkbox\" className=\"form-check-input mt-2\" id=\"exampleCheck5\" />\n                          <label className=\"form-check-label font-xsss text-grey-500\">自動でログインする</label>\n                          <a href=\"/forgot\" className=\"fw-600 font-xsss text-grey-700 mt-1 float-right\">パスワードをお忘れですか？</a>\n                    </div> */}\n\n                    <div className=\"col-sm-12 p-0 text-left mt-3\">\n                    <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\">{state.error}</h6>\n                    <div className=\"form-group mb-1\"><button type=\"subimt\" className=\"form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 \">ログイン</button></div>\n                    </div>\n                    </form>\n\n                    :\n                    <form onSubmit={login}>\n                    <div className=\"form-group icon-input mb-3\">\n                    <i className=\"font-sm ti-user text-grey-500 pe-0\"></i>\n                    <input onChange={inputChangedReg()} name=\"email\" type=\"text\"  value={state.credentialsReg.email} className=\"style2-input ps-5 form-control text-grey-900 font-xsss fw-600\" placeholder=\"Email\" />                        \n                    </div>\n\n                    <div className=\"form-group icon-input mb-3\">\n                        <input type=\"password\" className=\"style2-input ps-5 form-control text-grey-900 font-xss ls-3\" placeholder=\"パスワード\" />\n                        <i className=\"font-sm ti-lock text-grey-500 pe-0\"></i>\n                    </div>\n                    <div className=\"form-group icon-input mb-1\">\n                            <input type=\"password\" onChange={inputChangedReg()} value={state.credentialsReg.password} name= \"password\"className=\"style2-input ps-5 form-control text-grey-900 font-xss ls-3\" placeholder=\"パスワード（確認）\" />\n                            <i className=\"font-sm ti-lock text-grey-500 pe-0\"></i>\n                        </div><div className=\"form-check text-left mb-3\">\n                            <input type=\"checkbox\" className=\"form-check-input mt-2\" id=\"exampleCheck2\" />\n                            <label className=\"form-check-label font-xsss text-white\">規約に同意する</label>\n                        </div>\n\n                        <div className=\"col-sm-12 p-0 text-left\">\n                        <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\">{state.error}</h6>\n                        <div className=\"form-group mb-1\"><button type=\"submit\" className=\"form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 \">アカウントを作成</button></div>\n                    </div>\n                </form>}\n\n                <h6 onClick={()=>toggleView()} className=\"pointer  text-white font-xsss fw-500 mt-2 mb-0 lh-32 \">{state.isLoginView ? '初めてTatamiをご利用される方はこちら' : 'アカウントをお持ちの方はこちら'}</h6>\n                \n            </div>\n        </div> \n                        \n    );\n}\n\nexport default withCookies(LoginComponent);","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/HomePicture.jsx",["1063"],"\nimport React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\n\n\nconst HomePicture = () => {\n    const { followinguserpost } =  useContext(\n        ApiContext\n    );\n    const [tab1, setTab1] = useState(0)\n    const [isOpen, setIsOpen] =useState(false)\n    const listpostimg = followinguserpost.map(post =>\n        post.img &&\n         post.img)\n    const listimg=listpostimg.filter(v=>v)\n\n\n\n    const TabOne = [\n        {\n            image: '01',\n            bigImage: listimg[0],\n        },\n        {\n            image: '02',\n            bigImage: listimg[1],\n        },\n        {\n            image: '03',\n            bigImage: listimg[2],\n        },\n        {\n            image: '04',\n            bigImage: listimg[3],\n        },\n        {\n            image: '05',\n            bigImage: listimg[4],\n        },\n        {\n            image: '06',\n            bigImage: listimg[5],\n        },].slice(0,listimg.length)\n\n    const closeRequest= () => {\n        const a = (tab1 + TabOne.length - 1) % TabOne.length\n        setTab1(a)\n    }\n    const moveNextRequest=()=>{\n        const b = (tab1 + 1) % TabOne.length\n        setTab1(b)\n    }\n    return (\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 mb-3\">\n            <div className=\"card-body d-flex align-items-center  ps-4 pe-4 pt-4 pb-3\">\n                <h4 className=\"fw-700 mb-0 font-xssss text-grey-900\">最近の画像</h4>\n                {/* <a href=\"/home\" className=\"fw-600 ms-auto font-xssss text-primary\">全て見る</a> */}\n            </div>\n            <div className=\"card-body d-block pt-0 pb-2\">\n                <div className=\"row ps-3 pe-3\">\n                    {TabOne.map((value , index) => (\n                        <div className=\"col-6 mb-1 p-1\" key={index}>\n                            {isOpen && (\n                                <Lightbox\n                                    mainSrc={TabOne[tab1].bigImage}\n                                    onCloseRequest={() => setIsOpen(false)}\n                                    onMovePrevRequest={() => closeRequest()\n                                    }\n                                    onMoveNextRequest={() => moveNextRequest()\n                                    }\n                                />\n                            )}\n                            \n                            <div onClick={() => {setIsOpen(true);\n                            setTab1(index)}}>\n                                <a href=\"#portfolio-details\">\n                                    <img src={`${value.bigImage}`}  className=\"img-fluid rounded-3 w-100\"/>\n                                </a>\n                    \n                            </div>\n                        \n                        </div>\n                    ))}\n                </div>\n            </div>\n            {/* <div className=\"card-body d-block w-100 pt-0\">\n                <a href=\"/home\" className=\"p-2 lh-28 w-100 d-block bg-grey text-grey-800 text-center font-xssss fw-700 rounded-xl\"><i className=\"feather-external-link font-xss me-2\"></i> More</a>\n            </div> */}\n        </div>\n    );\n    \n}\n\nexport default HomePicture;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Requestleft.jsx",["1064","1065"],"import React from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { RequestleftEach } from '../components/RequestleftEach'\n\n\nconst Requestleft = () => {\n    const { profiles, profile, friendrequest, followeduser} = useContext(\n        ApiContext\n      );\n    const listProfiles =\n    profile.id &&\n    followeduser.map(prof =>\n      <RequestleftEach\n        key={prof.id}\n        prof = {prof}\n      />\n    ).slice(0,2);\n\n    return (\n        <div className='card w-100 shadow-xss rounded-xxl border-0 p-0 mb-3'>\n            <div className='ard-body d-flex align-items-center ps-4 pe-4 pt-3 pb-3'>\n                <h4 className='fw-700 mb-0 font-xssss text-grey-900'>新しいフォロワー</h4>\n                <a href='/followed' className='fw-600 ms-auto font-xssss text-primary'>全て表示</a>\n            </div>\n            {listProfiles}\n\n\n        </div>\n    )\n    \n}\n\nexport default Requestleft ;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Profiledetail.jsx",["1066"],"import React,{Component} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\nconst Profiledetail = () => {\n    const {profile, followinguser, mutualfollowinguser } = useContext(ApiContext)\n\n    return (\n        <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3'>\n            <div className='card-body d-block p-4'>\n                <h4 className='fw-700 mb-3 font-xsss text-grey-900'>About</h4>\n                <p className='fw-500 text-grey-500 lh-24 font-xssss mb-0'>{profile.caption}</p>\n            </div>\n            <div className=\"card-body d-flex pt-0\">\n                <i className=\"feather-user text-grey-500 me-3 font-lg\"></i>\n                <a href=\"/following\">\n                <h4 className=\"fw-700 text-grey-600 font-xssss mt-1 pointer\">{followinguser.length}人のフォロー</h4></a>\n            </div>\n            <div className=\"card-body d-flex pt-0\">\n                <i className=\"feather-users text-grey-500 me-3 font-lg\"></i>\n                <a href=\"/mutualfollowing\">\n                <h4 className=\"fw-700 text-grey-600 font-xssss mt-1 pointer\">{mutualfollowinguser.length}人の相互フォロー</h4></a>\n            </div>\n            <div className=\"card-body d-flex pt-0\">\n                <i className=\"feather-settings text-grey-500 me-3 font-lg\"></i>\n                <a href=\"/settings\">\n                <h4 className=\"fw-700 text-grey-600 font-xssss mt-1 pointer\">設定</h4></a>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profiledetail;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserProfileDetail.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Popupchat.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/AttributeEach.jsx",["1067"],"import React,{ useContext} from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AttributeEach = (attributeData) =>  {\n    const {  getUserInterest, newUserIntAttribute} =  useContext(\n        ApiContext, \n    );\n    const history = useHistory()\n\n\n\n\n    const toAttribute = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intAttributeId\",attributeData.attributeData.id)\n        newUserIntAttribute(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n    }\n\n\n\n\n\n\n    return (\n        \n        <div className=\"  d-flex\">\n        <div className=\" pointercard shadow-xss rounded-xxl border-0 text-center ps-2 pe-2 pt-2 pb-0 mb-2 \">\n            <div className=\"card-body p-0 pointer\" onClick={() => toAttribute()}>\n                <h4 className=\"fw-700 text-grey-700 font-xssss \"> {attributeData.attributeData.attributeName}\n                </h4>\n                \n            </div>\n        </div>\n        </div>\n\n    );\n    \n}\n\nexport default AttributeEach;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Pagetitle.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/UsersEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/UserpagePicture.jsx",["1068"],"\nimport React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\n\n\nconst UserpagePicture = () => {\n    const { profile, monoposts } =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n    const [tab1, setTab1] = useState(0)\n    const [isOpen, setIsOpen] =useState(false)\n    const listpostimg = posts.map(post =>\n        post.img &&\n         post.img)\n    const listimg=listpostimg.filter(v=>v)\n\n\n\n    const TabOne = [\n        {\n            image: '01',\n            bigImage: listimg[0],\n        },\n        {\n            image: '02',\n            bigImage: listimg[1],\n        },\n        {\n            image: '03',\n            bigImage: listimg[2],\n        },\n        {\n            image: '04',\n            bigImage: listimg[3],\n        },\n        {\n            image: '05',\n            bigImage: listimg[4],\n        },\n        {\n            image: '06',\n            bigImage: listimg[5],\n        },].slice(0,listimg.length)\n\n\n    const closeRequest= () => {\n        const a = (tab1 + TabOne.length - 1) % TabOne.length\n        setTab1(a)\n    }\n    const moveNextRequest=()=>{\n        const b = (tab1 + 1) % TabOne.length\n        setTab1(b)\n    }\n\n\n    return (\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 mb-3\">\n            <div className=\"card-body d-flex align-items-center  p-4\">\n                <h4 className=\"fw-700 mb-0 font-xssss text-grey-900\">最近の画像</h4>\n                {/* <a href=\"/home\" className=\"fw-600 ms-auto font-xssss text-primary\">全て見る</a> */}\n            </div>\n            <div className=\"card-body d-block pt-0 pb-2\">\n                <div className=\"row ps-3 pe-3\">\n                    {TabOne.map((value , index) => (\n                        <div className=\"col-6 mb-1 p-1\" key={index}>\n                        {isOpen && (\n                            <Lightbox\n                                mainSrc={TabOne[tab1].bigImage}\n                                onCloseRequest={() => setIsOpen(false)}\n                                onMovePrevRequest={() => closeRequest()\n                                }\n                                onMoveNextRequest={() => moveNextRequest()\n                                }\n                            />\n                        )}\n                        \n                        <div onClick={() => {setIsOpen(true);\n                        setTab1(index)}}>\n                            <a href=\"#portfolio-details\">\n                                <img src={`${value.bigImage}`}  className=\"img-fluid rounded-3 w-100\"/>\n                            </a>\n                \n                        </div>\n                    \n                    </div>\n                    ))}\n                </div>\n            </div>\n            {/* <div className=\"card-body d-block w-100 pt-0\">\n                <a href=\"/home\" className=\"p-2 lh-28 w-100 d-block bg-grey text-grey-800 text-center font-xssss fw-700 rounded-xl\"><i className=\"feather-external-link font-xss me-2\"></i> More</a>\n            </div> */}\n        </div>\n    );\n    \n}\n\nexport default UserpagePicture;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserpageEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/SpecificUserpagePicture.jsx",["1069","1070"],"\nimport React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\n\n\nconst SpecificUserpagePicture = () => {\n    const { postsforintuser } =  useContext(\n        ApiContext\n    );\n    const [tab1, setTab1] = useState(0)\n    const [isOpen, setIsOpen] =useState(false)\n    const listpostimg = postsforintuser.map(post =>\n        post.img &&\n         post.img)\n    const listimg=listpostimg.filter(v=>v)\n\n\n\n    const TabOne = [\n        {\n            image: '01',\n            bigImage: listimg[0],\n        },\n        {\n            image: '02',\n            bigImage: listimg[1],\n        },\n        {\n            image: '03',\n            bigImage: listimg[2],\n        },\n        {\n            image: '04',\n            bigImage: listimg[3],\n        },\n        {\n            image: '05',\n            bigImage: listimg[4],\n        },\n        {\n            image: '06',\n            bigImage: listimg[5],\n        },].slice(0,listimg.length)\n\n\n    const closeRequest= () => {\n        const a = (tab1 + TabOne.length - 1) % TabOne.length\n        setTab1(a)\n    }\n    const moveNextRequest=()=>{\n        const b = (tab1 + 1) % TabOne.length\n        setTab1(b)\n    }\n\n    return (\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 mb-3\">\n            <div className=\"card-body d-flex align-items-center  p-4\">\n                <h4 className=\"fw-700 mb-0 font-xssss text-grey-900\">最近の画像</h4>\n                {/* <a href=\"/home\" className=\"fw-600 ms-auto font-xssss text-primary\">全て見る</a> */}\n            </div>\n            <div className=\"card-body d-block pt-0 pb-2\">\n                <div className=\"row ps-3 pe-3\">\n                    {TabOne.map((value , index) => (\n                        <div className=\"col-6 mb-1 p-1\" key={index}>\n                        {isOpen && (\n                            <Lightbox\n                                mainSrc={TabOne[tab1].bigImage}\n                                onCloseRequest={() => setIsOpen(false)}\n                                onMovePrevRequest={() => closeRequest()\n                                }\n                                onMoveNextRequest={() => moveNextRequest()\n                                }\n                            />\n                        )}\n                        \n                        <div onClick={() => {setIsOpen(true);\n                        setTab1(index)}}>\n                            <a>\n                                <img src={`${value.bigImage}`}  className=\"img-fluid rounded-3 w-100\"/>\n                            </a>\n                \n                        </div>\n                    \n                    </div>\n                    ))}\n                </div>\n            </div>\n            {/* <div className=\"card-body d-block w-100 pt-0\">\n                <a href=\"/home\" className=\"p-2 lh-28 w-100 d-block bg-grey text-grey-800 text-center font-xssss fw-700 rounded-xl\"><i className=\"feather-external-link font-xss me-2\"></i> More</a>\n            </div> */}\n        </div>\n    );\n    \n}\n\nexport default SpecificUserpagePicture;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RecommenduserEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/FollowEach.jsx",["1071","1072"],"import React, {useContext} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst FollowEach = ({ prof}) => {\n    const { profile, newUserIntUser, getUserInterest, changeApprovalRequest,getFriendRequest } = useContext(ApiContext);\n    const history = useHistory()\n\n\n    const toSpecificUserPage = () => {\n    if (profile.userProfile === prof.userProfile) {\n        console.log(\"本人\")\n        history.push(\"/userpage\")\n    \n    } else {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intUserId\", prof.userProfile)\n        newUserIntUser(createdIntData)\n        console.log(\"ちがう\")\n        getUserInterest()\n        history.push(\"/specificuserpage\")}\n    }\n            \n\n    \n    \n    return (\n            <div className=\"col-md-3 col-sm-4 pe-2 ps-2\">\n                <div className=\"card d-block border-0 shadow-xss rounded-3 overflow-hidden mb-3\">\n                    <div className=\"card-body d-block w-100 ps-3 pe-3 pb-4 text-center\">\n                        {prof.img ? (\n                        <figure className=\"overflow-hidden avatar ms-auto me-auto mb-0 position-relative w65 z-index-1 pointer\" onClick={() => toSpecificUserPage()}><img src={prof.img} alt=\"avater\" className=\"float-right p-0 bg-white rounded-circle w-100 shadow-xss\" /></figure>): (\n                        <figure className=\"overflow-hidden avatar ms-auto me-auto mb-0 position-relative w65 z-index-1\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.img\" alt=\"avater\" className=\"float-right p-0 bg-white rounded-circle w-100 shadow-xss\" /></figure>)}\n                        <div className=\"clearfix w-100\"></div>\n                        <h4 className=\"fw-700 font-xsss mt-3 mb-0\">{prof.nickName} </h4>\n                        <p className=\"fw-500 font-xssss text-grey-500 mt-0 mb-3\">{prof.created_on}</p>\n                    </div>\n                </div>\n            </div> \n    )\n}\n\nexport default FollowEach","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/ProfileRecommender.jsx",["1073","1074","1075","1076","1077","1078","1079"],"import React, { useReducer, Fragment, useContext } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { ApiContext } from '../context/ApiContext'\n  \n  const ProfileRecommender= () => {\n  \n\n\n    return (\n        <div className=\"card shadow-none border-0 ms-auto me-auto login-card bg-current pt-4 pb-4 ps-3\">\n            <div className=\"card-body rounded-0 text-left p-0\">\n            <h2 className=\"fw-700 display1-size display2-md-size mt-5 mb-5 text-white\">まずはプロフィールを<br />登録しよう</h2>\n                \n              \n\n                    <div className=\"col-sm-12 p-0 text-left mt-3\">\n                    <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\"></h6>\n                    <div className=\"form-group mb-1\">\n                      <a href=\"/account\"><button className=\"form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 \">プロフィールを作成</button></a>\n                    </div>\n                    </div>\n                \n            </div>\n        </div> \n                        \n    );\n}\n\nexport default ProfileRecommender;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/MonoPicture.jsx",["1080"],"\nimport React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\n\n\n\n\n\nconst MonoPicture = () => {\n    const { postsforintpage } =  useContext(\n        ApiContext\n    );\n    const [tab1, setTab1] = useState(0)\n    const [isOpen, setIsOpen] =useState(false)\n    const listpostimg = postsforintpage.map(post =>\n        post.img &&\n         post.img)\n    const listimg=listpostimg.filter(v=>v)\n\n\n\n    const TabOne = [\n        {\n            image: '01',\n            bigImage: listimg[0],\n        },\n        {\n            image: '02',\n            bigImage: listimg[1],\n        },\n        {\n            image: '03',\n            bigImage: listimg[2],\n        },\n        {\n            image: '04',\n            bigImage: listimg[3],\n        },\n        {\n            image: '05',\n            bigImage: listimg[4],\n        },\n        {\n            image: '06',\n            bigImage: listimg[5],\n        },].slice(0,listimg.length)\n\n    const closeRequest= () => {\n        const a = (tab1 + TabOne.length - 1) % TabOne.length\n        setTab1(a)\n    }\n    const moveNextRequest=()=>{\n        const b = (tab1 + 1) % TabOne.length\n        setTab1(b)\n    }\n\n    return (\n        <div className=\"card w-100 shadow-xss rounded-xxl border-0 mb-3\">\n            <div className=\"card-body d-flex align-items-center  p-4\">\n                <h4 className=\"fw-700 mb-0 font-xssss text-grey-900\">最近の画像</h4>\n                {/* <a href=\"/home\" className=\"fw-600 ms-auto font-xssss text-primary\">全て見る</a> */}\n            </div>\n            <div className=\"card-body d-block pt-0 pb-2\">\n                <div className=\"row ps-3 pe-3\">\n                    {TabOne.map((value , index) => (\n                        <div className=\"col-6 mb-1 p-1\" key={index}>\n                        {isOpen && (\n                            <Lightbox\n                                mainSrc={TabOne[tab1].bigImage}\n                                onCloseRequest={() => setIsOpen(false)}\n                                onMovePrevRequest={() => closeRequest()\n                                }\n                                onMoveNextRequest={() => moveNextRequest()\n                                }\n                            />\n                        )}\n                        \n                        <div onClick={() => {setIsOpen(true);\n                        setTab1(index)}}>\n                            <a href=\"#portfolio-details\">\n                                <img src={`${value.bigImage}`}  className=\"img-fluid rounded-3 w-100\"/>\n                            </a>\n                \n                        </div>\n                    \n                    </div>\n                    ))}\n                </div>\n            </div>\n            {/* <div className=\"card-body d-block w-100 pt-0\">\n                <a href=\"/home\" className=\"p-2 lh-28 w-100 d-block bg-grey text-grey-800 text-center font-xssss fw-700 rounded-xl\"><i className=\"feather-external-link font-xss me-2\"></i> More</a>\n            </div> */}\n        </div>\n    );\n    \n}\n\nexport default MonoPicture;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/AccountEach.jsx",["1081","1082"],"import React, {useContext, useCallback, useState} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { Link } from \"react-router-dom\";\nimport getCroppedImg from './getCroppedImg';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModalforprof from \"./CropperModalforprof\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport ProfBack from './ProfBack';\nexport const ASPECT_RATIO = 1 / 1;\nexport const CROP_WIDTH = 400;\n\nconst AccountEach = () => {\n    const {profile, editedProfile, setEditedProfile, deleteProfile, setCover, coverBack, createProfile, editProfile} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 30,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n\n     \n    const classes = useStyles();\n\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n\n\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n\n\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setCover(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n\n    const handleInputChange = () => event => {\n        const value = event.target.value\n        const name = event.target.name\n        setEditedProfile({...editedProfile, [name]:value})\n    }\n\n\n    \n    return (\n        <div className=\"main-content bg-lightblue theme-dark-bg right-chat-active\">\n\n            <div className=\"middle-sidebar-bottom\">\n                <div className=\"middle-sidebar-left\">\n                    <div className=\"middle-wrap\">\n                        <div className=\"card w-100 border-0 bg-white shadow-xs p-0 mb-4\">\n                            <div className=\"card-body p-4 w-100 bg-current border-0 d-flex rounded-3\">\n                                <Link to=\"/settings\" className=\"d-inline-block mt-2\"><i className=\"ti-arrow-left font-sm text-white\"></i></Link>\n                                <h4 className=\"font-xs text-white fw-600 ms-4 mb-0 mt-2\">アカウント情報</h4>\n                            </div>\n                            <div className=\"card-body p-lg-5 p-4 w-100 border-0\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-lg-4 text-center\">\n                                    {profile.id ? (\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src={profile.img} alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>):(\n                                    <figure className=\"avatar ms-auto me-auto mb-0 mt-2 w100\"><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className=\"shadow-sm rounded-3 w-100\" /></figure>)}\n                                    <h2 className=\"fw-700 font-sm text-grey-900 mt-3\">{profile.nickName}</h2>\n                                    <h4 className=\"text-grey-500 fw-500 mb-3 font-xsss mb-4\">{profile.created_on}</h4>\n                                </div>\n                            </div>\n\n                            <form action=\"#\">\n                                <div className=\"row\">\n                                <div className=\"col-lg-12 \">\n                                        <div className={classes.root}>\n                                        <div className=\"file-upload-container\">\n                                            <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" variant=\"contained\" component=\"label\" >\n                                            トップ画像を追加\n                                            <input type=\"file\" hidden onChange={onFileChange} />\n                                            </Button>\n                                        </div>\n                                        <CropperModalforprof\n                                            crop={crop}\n                                            setCrop={setCrop}\n                                            zoom={zoom}\n                                            setZoom={setZoom}\n                                            onCropComplete={onCropComplete}\n                                            open={isOpen}\n                                            onClose={() => setIsOpen(false)}\n                                            imgSrc={imgSrc}\n                                            showCroppedImage={showCroppedImage}\n                                            onMediaLoaded={onMediaLoaded}\n                                            minZoom={minZoom}\n                                        />\n                                        {imgSrc ?\n                                        <div className='card-body  position-relative'>\n                                            <label className=\"mont-font fw-600 font-xssss mb-2\">Top Image has uploaded!\n                                            </label>\n                                        </div>\n                                        : <></>}\n                                        </div>\n    \n                                        \n                                    </div>\n                                    <div className=\"col-lg-12 mb-3\">\n                                        <ProfBack/>\n                                        \n                                    </div>\n                              \n                                    \n                                    <div className=\"col-lg-12 mb-3\">\n                                        <div className=\"form-group\">\n                                            <label className=\"mont-font fw-600 font-xsss mb-2\">アカウント名</label>\n                                            {profile ? (\n                                                <input type=\"text\" className=\"form-control\" value={editedProfile.nickName} name='nickName' onChange={handleInputChange()}/>) : (\n                                                <input type=\"text\" className=\"form-control\"  disabled/>\n                                                )}\n                                        </div>        \n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n                                   \n\n                                 \n\n                                    <div className=\"col-lg-12 mb-3\">\n                                        <label className=\"mont-font fw-600 font-xsss mb-2 text-dark\">キャプション</label>\n                                            <textarea className=\"form-control mb-0 p-3 h100 bg-greylight lh-16\" name = 'caption'rows=\"5\" placeholder={profile.caption} onChange={handleInputChange()} ></textarea>\n                                        \n                                        \n                                    </div>\n\n                                    <div className=\"col-lg-12\">\n                                        {editedProfile.id ? (\n                                            <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 ms-3 w175 rounded-3 mt-3\" variant=\"contained\" component=\"label\" onClick={() => editProfile()}>\n                                            編集結果を保存\n                                            </Button>)\n                                            // <button className=\"pointer me-2 bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => editProfile()}>編集結果を保存</button>)\n                                        :   (\n                                            <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 ms-3 w175 rounded-3 mt-3\" variant=\"contained\" component=\"label\" onClick={() => createProfile()}>\n                                            新規作成\n                                            </Button>)\n                                            // <button className=\"bg-current me-2 text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => createProfile()}>編集結果を保存</button>)\n                                        }\n                                        <Button className=\"bg-dark text-center text-white font-xsss fw-600 p-3 ms-3 w175 rounded-3 mt-3\" variant=\"contained\" component=\"label\" onClick={() => deleteProfile()} >\n                                        プロフィールを削除\n                                        </Button>\n                                        {/* <button onClick={() => deleteProfile()} className='bg-grey text-center text-black mt-3 font-xsss fw-600 p-3 w175 rounded-3 d-inline-block'>プロフィールを削除</button> */}\n                                    </div>\n                                </div>\n                            </form>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n            \n            </div>\n\n        </div>\n    )   \n}\n\nexport default AccountEach","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Createpost.jsx",["1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093"],"import React,{useCallback, useState} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport getCroppedImg from './getCroppedImg';\nimport { Link } from \"react-router-dom\";\nimport { profile } from 'console';\nimport { post } from 'jquery';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModal from \"./CropperModal\";\nimport LinearProgress from '@mui/joy/LinearProgress'\nimport { Button, makeStyles, Slider } from \"@material-ui/core\";\nimport { create } from 'domain';\nexport const ASPECT_RATIO = 2 / 1;\nexport const CROP_WIDTH = 400;\n\n\nconst Createpost: React.FC = (postTo, profileData) => {\n    const {createMonoPost, profile, postimg, setPostimg, createdmonopost, setCreatedMonopost} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 3,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n    const classes = useStyles();\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n    /** 切り取ったあとの画像URL */\n    const [croppedImgSrc, setCroppedImgSrc] = useState(\"\");\n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        setCroppedImgSrc(croppedImage);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setPostimg(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n      \n    const handleInputChange = () => event => {\n        const value = event.target.value \n        const name = event.target.name \n        setCreatedMonopost({...createdmonopost, [name]:value, reviewTo: postTo.postTo})\n    }\n    const handleSliderChange = () => event => {\n        const value = event.target.value \n        setCreatedMonopost({...createdmonopost, rating:value, reviewTo: postTo.postTo})\n    }\n    const [rate, setRate] = useState(null)\n\n    const handleChange = (event, newValue) => {\n        setCreatedMonopost({...createdmonopost, rating:newValue, reviewTo: postTo.postTo})\n      };\n\n\n\n\n    return (\n        <form action=\"#\">\n        <div className='card w-100 shadow-xss rounded-xxl border-0 ps-3 pt-0 pe-3 pb-3 mt-3 mb-3'>\n            <div className='card-body  position-relative'>\n                <div className=\"ms-3 mt-3 col-12\">\n                        <h2 className=\"font-xsss  lh-1 text-grey-500 fw-600\">スライドしてシンパシーを示す</h2>\n                </div>\n                <div className='card-body  w-100 ps-1 pe-1 pt-0 pb-0' >\n\n                    {/* <input type=\"range\" step=\"1\" min=\"1\" max=\"100\"className=\" form-control rounded-xxl\" name='rating' onChange={handleInputChange()}/> */}\n\n                    <Slider\n                        defaultValue={70}\n                        valueLabelDisplay=\"auto\"\n                        marks\n                        step={5}\n                        color=\"secondary\"\n                        aria-label=\"Default\"\n                        onChange={handleChange}\n                        \n                        />\n            </div>\n            </div>\n            {/* <div className=\"ms-auto\">\n                <div className=\"card w-30 shadow-xss rounded-xxl border-0 mt-2 p-3 mb-0\">\n                    <div className=\"card-body p-0 d-flex pointer\" >\n                        <label className=\"display2-size lh-1 m-0 text-grey-900 fw-700\"> { createdmonopost.rating ?\n                        createdmonopost.rating:\n                        0}%\n                        </label>\n                        \n                    </div>\n                    <div className=\"card-body p-0 mt-2\">\n                        <LinearProgress\n                            color=\"info\"\n                            determinate\n                            size=\"sm\"\n                            value= {createdmonopost.rating}\n                            variant=\"plain\"\n                            />\n                    </div>\n                </div>\n            </div> */}\n        \n            \n            \n\n\n            <div className='card-body ps-2 pe-2 pt-0 pb-1 position-relative'>\n                <figure className='avatar position-absolute ms-2 mt-2 top-5'><img src={profile.img} alt=\"icon\" className='shadow-sm rounded-circle w30'/>\n                </figure>\n                <textarea onChange={handleInputChange()} name='text' className='h100 bor-0 w-100 rounded-xxl p-2 ps-5 font-xssss text-grey-500 fw-500 border-light-md theme-dark-bg' cols=\"30\" rows=\"10\" placeholder='意見をポスト...'></textarea>\n            </div>\n            <div className=\"card-body d-block p-0\">\n            {croppedImgSrc ?\n                <div className='card-body  position-relative'>\n                <label className=\"mont-font fw-600 font-xssss mb-1\">Image has uploaded!\n                </label>\n                </div>\n                : <></>}\n            </div>\n\n            \n            {/* ここからトリミング */}\n            <div className='card-body p-0 d-flex'>\n                    <div className=\"file-upload-container\">\n                        <Button className=\"bg-current text-center text-white font-xsss fw-600 pt-1 pb-1 ps-1 pe-1 ms-2 w125 rounded-3\" variant=\"contained\" component=\"label\" >\n                        Upload\n                        <input type=\"file\" hidden onChange={onFileChange} />\n                        </Button>\n                    </div>\n                    <CropperModal\n                        crop={crop}\n                        setCrop={setCrop}\n                        zoom={zoom}\n                        setZoom={setZoom}\n                        onCropComplete={onCropComplete}\n                        open={isOpen}\n                        onClose={() => setIsOpen(false)}\n                        imgSrc={imgSrc}\n                        showCroppedImage={showCroppedImage}\n                        onMediaLoaded={onMediaLoaded}\n                        minZoom={minZoom}\n                    />\n                    <div className='card-body p-0'>\n                        {createdmonopost.text ? (\n                            <Button className=\"bg-current text-center text-white font-xsss fw-600 pt-1 pb-1 ps-1 pe-1 ms-3 w125 rounded-3\" variant=\"contained\" component=\"label\" onClick={() => createMonoPost()}>\n                            Post!\n                            </Button>)\n                        \n                        // <a className=\"pointer bg-current text-center text-white font-xsss fw-600 ms-3 p-3 mt-3 w175 rounded-3 d-inline-block\" onClick={() => createMonoPost()}>Post!</a>)\n                        :   \n                        (\n                            <Button className=\"bg-dark text-center text-white font-xsss fw-600 pt-1 pb-1 ps-1 pe-1 ms-3 w125 rounded-3\" variant=\"contained\" component=\"label\" disabled>\n                            Post\n                            </Button>)\n                        // (<a className=\"bg-dark text-center text-white ms-3 mt-3 font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" disabled>Post</a>)\n                        }\n                    </div>\n                \n                    </div> \n                \n\n            </div>\n            \n        </form>\n    )\n}\n\n\nexport default Createpost","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/actionTypes.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RequestEach.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Createcomment.jsx",["1094","1095","1096","1097"],"import React,{useCallback, useState} from 'react';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext'\nimport \"./styles.css\";\nexport const ASPECT_RATIO = 2 / 1;\nexport const CROP_WIDTH = 400;\n\nconst Createcomment = (commentTo, profileData) => {\n    const { profile, createdcomment,setCreatedcomment,getUserInterest, createMonoComment} = useContext(ApiContext)\n      \n    const handleInputChange = () => event => {\n        const value = event.target.value \n        const name = event.target.name \n        setCreatedcomment({...createdcomment, [name]:value, post: commentTo.commentTo})\n        getUserInterest()\n\n    }\n\n    return (\n        <form action=\"#\">\n        <div className='card w-100 shadow-xss rounded-xxl border-0 ps-4 pt-1 pe-4 pb-2 mt-2'>\n            <div className='card-body p-0 mt-3 position-relative'>\n                <figure className='avatar position-absolute ms-2 mt-1 top-5'><img src={profile.img} alt=\"icon\" className='shadow-sm rounded-circle w30'/>\n                </figure>\n                <textarea onChange={handleInputChange()} name='text' className='h100 bor-0 w-100 rounded-xxl p-2 ps-5 font-xssss text-grey-500 fw-500 border-light-md theme-dark-bg' cols=\"30\" rows=\"10\" placeholder='コメントする...'></textarea>\n            </div>\n            \n            <div className='card-body p-0 mt-0 mb-1 position-relative'>\n                <div className='card-body p-0'>\n                {createdcomment ? (\n                <a className=\"pointer bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" onClick={() => createMonoComment()}>投稿</a>)\n                :   (\n                <a className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" disabled>投稿</a>)}\n                </div>\n            </div>\n\n        </div>\n        </form>\n    )\n}\n\n\nexport default Createcomment","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/Commentview.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/RequestleftEach.jsx",["1098","1099","1100","1101"],"import React, {useContext} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\n\n\nexport const RequestleftEach = ({ prof}) => {\n    const { profile, newUserIntUser, getUserInterest,changeApprovalRequest, followinguser, newRequestFriend, getFriendRequest } = useContext(ApiContext);\n    const history = useHistory()\n\n    // const changeApproval = () => {\n    //     const uploadDataAsk = new FormData();\n    //     uploadDataAsk.append(\"askTo\", ask.askTo);\n    //     uploadDataAsk.append(\"approved\", true);\n    //     changeApprovalRequest(uploadDataAsk, ask);\n    //     getFriendRequest()\n    //   };\n    \n    const toSpecificUserPage = () => {\n    if (profile.userProfile === prof.userProfile) {\n        console.log(\"本人\")\n        history.push(\"/userpage\")\n    \n    } else {\n    const createdIntData = new FormData()\n    createdIntData.append(\"intUserId\", prof.userProfile)\n    newUserIntUser(createdIntData)\n    console.log(\"ちがう\")\n    getUserInterest()\n    history.push(\"/specificuserpage\")}\n    }\n\n    const createNewRequest = () => {\n        const uploadDataAsk = new FormData();\n        uploadDataAsk.append(\"askTo\",prof.userProfile)\n        uploadDataAsk.append(\"approved\", false);\n        newRequestFriend(uploadDataAsk);\n      };\n\n      const isfollow = \n      followinguser.find(item =>\n        {return item.userProfile === prof.userProfile})\n        \n\n    \n    \n    return (\n        <div className='wrap'>\n            <div className='card-body d-flex pt-0 ps-4 pe-4 pb-0 bor-0'>\n                <figure className='avatar me-3 pointer'onClick={() => toSpecificUserPage()}><img src ={prof.img} alt=\"avator\" className='shadow-sm rounded-circle w45'/></figure>\n                <h4 className='fw-700 text-grey-900 font-xssss mt-1'>{prof.nickName}<span className=\"d-block font-xssss fw-500 mt-1 lh-3 text-grey-500\">{prof.created_on}にTatamiに参加</span></h4>\n                \n            </div>\n            <div className='card-body d-flex align-items-center pt-0 ps-4 pe-4 pb-2'>\n                \n                {/* {!isfollow?\n                    <button  className=\"mt-0 btn pt-2 pb-2 ps-3 pe-3 lh-24 ms-1 ls-3 d-inline-block rounded-xl bg-success font-xsssss fw-700 ls-lg text-white\" onClick={() => createNewRequest()}>フォロー</button>:\n                    <button  className=\"mt-0 btn pt-2 pb-2 ps-3 pe-3 lh-24 ms-1 ls-3 d-inline-block rounded-xl bg-success font-xsssss fw-700 ls-lg text-white\" disabled>フォロー中</button>} */}\n                {/* <a href='' onClick={() => createNewRequest()} className='p-2 lh-20 w100 bg-primary-gradiant me-2 text-white text-center font-xssss fw-600 ls-1 rounded-xl'>承認</a>\n                <a className='p-2 lh-20 w100 bg-grey text-grey-800 text-center font-xssss fw-600 ls-1 rounded-xl'>削除</a> */}\n\n            </div>\n        </div>\n        \n    )\n}\n\n","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/Darkbutton.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/getCroppedImg.jsx",["1102"],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModalforprof.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/ProfBack.jsx",["1103","1104","1105"],"import React, {useContext, useCallback, useState} from 'react'\nimport { ApiContext } from '../context/ApiContext'\nimport getCroppedImg from './getCroppedImg';\nimport  Area from \"react-easy-crop\";\nimport  MediaSize from \"react-easy-crop\";\nimport \"./styles.css\";\nimport CropperModalforback from \"./CropperModalforback\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nexport const ASPECT_RATIO = 4 / 1;\nexport const CROP_WIDTH =400;\n\nconst ProfBack = () => {\n    const {profile, coverBack, setCoverBack} = useContext(ApiContext)\n\n    const useStyles = makeStyles({\n        root: {\n          marginTop: 30,\n          minWidth: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          flexFlow: \"column\",\n          \"& .file-upload-container\": {\n            width: 500,\n            marginTop: 10,\n            \"& .button\": {\n              backgroundColor: \"#00A0FF\",\n              color: \"white\"\n            }\n          },\n          \"& .img-container\": {\n            marginTop: 40,\n            width: `${CROP_WIDTH}px`,\n            height: `${CROP_WIDTH / ASPECT_RATIO}px`,\n            display: \"flex\",\n            alinItems: \"center\",\n            borderRadius: 5,\n            border: \"1px solid gray\",\n            overflow: \"hidden\",\n            backgroundColor: \"#EAEAEA\",\n            \"& .img\": {\n              width: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: \"#EAEAEA\"\n            },\n            \"& .no-img\": {\n              backgroundColor: \"#EAEAEA\",\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#000\"\n            }\n          }\n        }\n      });\n\n     \n    const classes = useStyles();\n\n    /** Cropモーダルの開閉 */\n    const [isOpen, setIsOpen] = useState(false);\n    \n    /** アップロードした画像URL */\n    const [imgSrc, setImgSrc] = useState(\"\");\n    \n    /** 画像の拡大縮小倍率 */\n    const [zoom, setZoom] = useState(1);\n    /** 画像拡大縮小の最小値 */\n    const [minZoom, setMinZoom] = useState(1);\n    \n    /** 切り取る領域の情報 */\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    /** 切り取る領域の情報 */\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    \n    /** 切り取ったあとの画像URL */\n    const [croppedImgSrc, setCroppedImgSrc] = useState(\"\");\n      \n    /**\n     * ファイルアップロード後\n     * 画像ファイルのURLをセットしモーダルを表示する\n     */\n    const onFileChange = useCallback(\n        async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n            if (reader.result) {\n                setImgSrc(reader.result.toString() || \"\");\n                setIsOpen(true);\n            }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        },\n        []\n    );\n\n    /**\n     * Cropper側で画像データ読み込み完了\n     * Zoomの最小値をセットしZoomの値も更新\n     */\n    const onMediaLoaded = useCallback((mediaSize: MediaSize) => {\n        const { width, height } = mediaSize;\n        const mediaAspectRadio = width / height;\n        if (mediaAspectRadio > ASPECT_RATIO) {\n        // 縦幅に合わせてZoomを指定\n        const result = CROP_WIDTH / ASPECT_RATIO / height;\n        setZoom(result);\n        setMinZoom(result);\n        return;\n        }\n        // 横幅に合わせてZoomを指定\n        const result = CROP_WIDTH / width;\n        setZoom(result);\n        setMinZoom(result);\n    }, []);\n\n\n    \n    /**\n     * 切り取り完了後、切り取り領域の情報をセット\n     */\n    const onCropComplete = useCallback(\n        (croppedArea: Area, croppedAreaPixels: Area) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n        },\n        []\n    );\n    \n    /**\n     * 切り取り後の画像を生成し画面に表示\n     */\n    const showCroppedImage = useCallback(async () => {\n        if (!croppedAreaPixels) return;\n        try {\n        const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n        setCroppedImgSrc(croppedImage);\n        const file = new File([croppedImage], `${profile.nickName}.jpg`, { type: croppedImage.type })\n        setCoverBack(file)\n        } catch (e) {\n        console.error(e);\n        }\n    }, [croppedAreaPixels, imgSrc]);\n\n\n    \n    return (\n        <div className=\"col-lg-12 mb-3\">\n                <div className={classes.root}>\n                <div className=\"file-upload-container\">\n                    <Button className=\"bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block\" variant=\"contained\" component=\"label\" >\n                    背景画像を追加\n                    <input type=\"file\" hidden onChange={onFileChange} />\n                    </Button>\n                </div>\n                <CropperModalforback\n                    crop={crop}\n                    setCrop={setCrop}\n                    zoom={zoom}\n                    setZoom={setZoom}\n                    onCropComplete={onCropComplete}\n                    open={isOpen}\n                    onClose={() => setIsOpen(false)}\n                    imgSrc={imgSrc}\n                    showCroppedImage={showCroppedImage}\n                    onMediaLoaded={onMediaLoaded}\n                    minZoom={minZoom}\n                />\n                {imgSrc ?\n                  <div className='card-body  position-relative'>\n                      <label className=\"mont-font fw-600 font-xssss mb-2\">Back Image has uploaded!\n                      </label>\n                  </div>\n                  : <></>}\n                </div>\n                \n            \n                \n            \n            \n                \n            </div>\n                              \n    )   \n}\n\nexport default ProfBack","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModal.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/components/CropperModalforback.jsx",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/api/checkout_sessions.js",[],"/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/GetPage.jsx",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"import React, { useReducer, Fragment, useContext } from \"react\";\nimport { useShoppingCart } from 'use-shopping-cart'\nimport { formatCurrencyString } from 'use-shopping-cart'\nimport axios from \"axios\";\nimport { ApiContext } from '../context/ApiContext'\n\n\n\nconst GetPage = (props) => {\n  const { profile,monocomments,  commentsforintpost,  monopages, profiles, newUserIntPage,likePost,newUserIntUser , getUserInterest,newUserIntPost, createRepost, monoposts} =  useContext(\n    ApiContext, \n);\n  const { checkoutSingleItem } = useShoppingCart()\n  const productData = [\n    {\n      name: 'Tatami Single Page',\n      price_id: 'price_1NNqrCBweimbndG767O4crda',\n      price: 100\n    },\n  ]\n\n//   const toMonopage = () => {\n//     const createdIntData = new FormData()\n//     createdIntData.append(\"intPageId\",postData.reviewTo)\n//     newUserIntPage(createdIntData)\n//     getUserInterest()\n//     getUserInterest()\n//     getUserInterest()\n//     getUserInterest()\n//     history.push(\"/mono\")\n// }\n\n\n    return (\n        <Fragment> \n            <div className=\"main-wrap\">\n                <div className=\"nav-header bg-transparent shadow-none border-0\">\n                    <div className=\"nav-top w-100\">\n                        <a href=\"/home\"><i className=\"feather-zap text-success display1-size me-2 ms-0\"></i><span className=\"d-inline-block fredoka-font ls-3 fw-600 text-current font-xxl logo-text mb-0\">Tatami </span> </a>\n\n        \n                        {/* <a href=\"/login\" className=\"header-btn d-none d-lg-block bg-dark fw-500 text-white font-xsss p-3 ms-auto w100 text-center lh-20 rounded-xl\">ログイン</a>\n                        <a href=\"/register\" className=\"header-btn d-none d-lg-block bg-current fw-500 text-white font-xsss p-3 ms-2 w100 text-center lh-20 rounded-xl\">新規登録</a> */}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-5 d-none d-xl-block p-0 vh-100 bg-image-cover bg-no-repeat\"\n                    style={{backgroundImage: `https://ow6r85j5w096clt.site/media/image/login.jpg`}}></div>\n                        <div className=\"col-xl-7 vh-100 align-items-center d-flex bg-white rounded-3 overflow-hidden\">\n                            <div className=\"card shadow-none border-0 ms-auto me-auto login-card\">\n                                <div className=\"card-body rounded-0 text-left\">\n                                <h2 className=\"fw-700 display1-size display2-md-size mb-3\">このページの情報を <br />取得できます</h2>\n                            \n\n                                        <div className=\"col-sm-12 p-0 text-left\">\n                                        <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\"></h6>\n                                        <div className=\"form-group mb-1\"\n                                                                                >\n  \n                                          <button onClick={() => checkoutSingleItem({ price: 'price_1NNqrCBweimbndG767O4crda' })}className=\"form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 mt-5 \">ページの情報を購入する</button>\n                                        </div>\n                                        </div>\n                                        \n\n    \n    \n                                    \n                                </div>\n                            </div> \n                        </div>\n                    \n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default GetPage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningPage.jsx",["1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133"],"import React, {useState, Fragment, useContext} from \"react\";\nimport Chart from \"react-apexcharts\";\n\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { ApiContext } from '../context/ApiContext'\n\nconst OwningPage = () => {\n    const { profile, profiles, intpage, postsforintpage, followPage, followingpage,affiliates,owningpage, getUserInterest, newUserIntPage} =  useContext(\n        ApiContext\n    );\n\n    const state = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May' ,'Jun', 'Jul', 'Aug', 'Sep', 'Oct' , 'Nov', 'Dec'],\n            series: [{\n            name: '',\n            data: [35, 66, 34, 56, 18 ,35, 66, 34, 56, 18 , 56, 18]\n            },{\n            name: '',\n            data: [12, 34, 12, 11, 7 ,12, 34, 12, 11, 7 , 11, 7]\n            }],\n            options: {\n                chart: {\n                type: 'bar',\n            //   width:'100%',\n                height: 250,\n                stacked: true,\n                toolbar: {\n                show: false\n                },    \n            },\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                legend: {\n                    position: 'bottom',\n                    offsetX: -10,\n                    offsetY: 0\n                }\n                }\n            }],\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                },\n            },\n            legend: {\n                show: false\n            },\n            fill: {\n                opacity: 1\n            },\n            },\n            \n        };\n    \n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n            <div className=\"main-content bg-white right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <div className=\"card w-100 border-0 shadow-none p-5 rounded-xxl bg-lightblue2 mb-3\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6\">\n                                            <img src={intpage.img} alt=\"banner\" className=\"w-100\" />\n                                        </div>\n                                        <div className=\"col-lg-6 ps-lg-5\">\n                                            <h2 className=\"mt-3 display1-size d-block mb-2 text-grey-900 fw-700\">{intpage.title}</h2>\n                                            <p className=\"font-xssss fw-500 text-grey-500 lh-26\">{intpage.summary}</p>\n                                        </div>\n                                        <div className=\"card d-block border-0 rounded-3 overflow-hidden p-4 shadow-xss mt-4 alert-success mb-4\">\n                                            <h2 className=\"fw-700 font-sm mb-3 mt-1 ps-1 text-success mb-4\">議論のポイント</h2>\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\" ti-check font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.goodpoint}</h4>\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"ti-close   font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\"></i>{intpage.badpoint}</h4>\n                                        </div>\n                                        <div className=\"card d-block border-0 rounded-3 overflow-hidden p-4 shadow-xss mt-4 alert-success mb-4\">\n                                            <h2 className=\"fw-700 font-sm mb-3 mt-1 ps-1 text-success mb-4\">話題理解のポイント</h2>\n                                            {intpage.point1 ?\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"  font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\">1</i>{intpage.point1}</h4>:<></>}\n                                            {intpage.point2 ?\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"  font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\">2</i>{intpage.point2}</h4>:<></>}\n                                            {intpage.point3 ?\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"  font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\">3</i>{intpage.point3}</h4>:<></>}\n                                            {intpage.point4 ?\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\"  font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\">4</i>{intpage.point4}</h4>:<></>}\n                                            {intpage.point5 ?\n                                            <h4 className=\"font-xssss fw-500 text-grey-600 mb-3 pl-35 position-relative lh-24\"><i className=\" font-xssss btn-round-xs bg-success text-white position-absolute left-0 top-5\">5</i>{intpage.point5}</h4>:<></>}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-3 pe-2\">\n                                <div className=\"card w-100 border-0 shadow-none p-4 rounded-xxl mb-3\" style={{background:`#e5f6ff`}}>\n                                    <div className=\"card-body d-flex p-0\">\n                                        <i className=\"btn-round-lg d-inline-block me-3 bg-primary-gradiant feather-home font-md text-white\"></i>\n                                        <h4 className=\"text-primary font-xl fw-700\">2.3M <span className=\"fw-500 mt-0 d-block text-grey-500 font-xssss\">1日の閲覧回数</span></h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-3 pe-2 ps-2\">\n                                <div className=\"card w-100 border-0 shadow-none p-4 rounded-xxl mb-3\" style={{background:`#f6f3ff`}}>\n                                    <div className=\"card-body d-flex p-0\">\n                                        <i className=\"btn-round-lg d-inline-block me-3 bg-secondary feather-lock font-md text-white\"></i>\n                                        <h4 className=\"text-secondary font-xl fw-700\">44.6K <span className=\"fw-500 mt-0 d-block text-grey-500 font-xssss\">アクションユーザー</span></h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-3 pe-2 ps-2\">\n                                <div className=\"card w-100 border-0 shadow-none p-4 rounded-xxl mb-3\" style={{background:`#e2f6e9`}}>\n                                    <div className=\"card-body d-flex p-0\">\n                                        <i className=\"btn-round-lg d-inline-block me-3 bg-success feather-command font-md text-white\"></i>\n                                        <h4 className=\"text-success font-xl fw-700\">603 <span className=\"fw-500 mt-0 d-block text-grey-500 font-xssss\">クリック数</span></h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-3 ps-2\">\n                                <div className=\"card w-100 border-0 shadow-none p-4 rounded-xxl mb-3\" style={{background:`#fff0e9`}}>\n                                    <div className=\"card-body d-flex p-0\">\n                                        <i className=\"btn-round-lg d-inline-block me-3 bg-warning feather-shopping-bag font-md text-white\"></i>\n                                        <h4 className=\"text-warning font-xl fw-700\">3M <span className=\"fw-500 mt-0 d-block text-grey-500 font-xssss\">潜在ユーザー数</span></h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-12 mb-3\">\n                            <div className=\"card w-100 p-3 border-0 mb-3 rounded-xxl bg-lightblue2 shadow-none overflow-hidden\">\n                                <Chart options={state.options}\n                                series={state.series}\n                                type=\"bar\"\n                                width=\"100%\"/>\n\n                            </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n            <Appfooter />\n        </Fragment>\n    )\n}\n \n\nexport default OwningPage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/GotPage.jsx",["1134","1135","1136","1137","1138","1139"],"import React, { useReducer, Fragment, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useShoppingCart } from 'use-shopping-cart'\nimport { formatCurrencyString } from 'use-shopping-cart'\nimport axios from \"axios\";\nimport { ApiContext } from '../context/ApiContext'\n\n\n\nconst GotPage = (props) => {\n    const history = useHistory()\n    const { ownPage, intpage} =  useContext(\n        ApiContext, \n    );\n\n\n    return (\n        <Fragment> \n            <div className=\"main-wrap\">\n                <div className=\"nav-header bg-transparent shadow-none border-0\">\n                    <div className=\"nav-top w-100\">\n                        <a href=\"/home\"><i className=\"feather-zap text-success display1-size me-2 ms-0\"></i><span className=\"d-inline-block fredoka-font ls-3 fw-600 text-current font-xxl logo-text mb-0\">Tatami </span> </a>\n\n        \n                        {/* <a href=\"/login\" className=\"header-btn d-none d-lg-block bg-dark fw-500 text-white font-xsss p-3 ms-auto w100 text-center lh-20 rounded-xl\">ログイン</a>\n                        <a href=\"/register\" className=\"header-btn d-none d-lg-block bg-current fw-500 text-white font-xsss p-3 ms-2 w100 text-center lh-20 rounded-xl\">新規登録</a> */}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-5 d-none d-xl-block p-0 vh-100 bg-image-cover bg-no-repeat\"\n                    style={{backgroundImage: `https://ow6r85j5w096clt.site/media/image/login.jpg`}}></div>\n                        <div className=\"col-xl-7 vh-100 align-items-center d-flex bg-white rounded-3 overflow-hidden\">\n                            <div className=\"card shadow-none border-0 ms-auto me-auto login-card\">\n                                <div className=\"card-body rounded-0 text-left\">\n                                <h2 className=\"fw-700 display1-size display2-md-size mb-3\">ご購入いただき <br />ありがとうございます</h2>\n                            \n                                        \n\n                                        <div className=\"col-sm-12 p-0 text-left\">\n                                        <h6 className=\"text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32\"></h6>\n                                        <a href=\"/owningpage\">\n                                        <div className=\"form-group mb-1\">\n  \n                                          <button onClick={() => ownPage(intpage.id)}\n                                          className=\"form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 \">購入を完了する</button>\n                                        </div>\n                                        </a>\n                                        </div>\n                                        \n\n    \n    \n                                    \n                                </div>\n                            </div> \n                        </div>\n                    \n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default GotPage;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningPages.jsx",["1140","1141","1142","1143","1144","1145","1146","1147","1148","1149"],"import React, {  Fragment } from \"react\";\nimport Header from '../components/Header';\nimport Leftnav from '../components/Leftnav';\nimport Appfooter from '../components/Appfooter';\nimport Popupchat from '../components/Popupchat';\nimport { useContext } from 'react';\nimport { ApiContext } from '../context/ApiContext';\nimport Profiledetail from '../components/Profiledetail';\nimport UserpagePicture from \"../components/UserpagePicture\";\nimport FollowEach from \"../components/FollowEach\";\nimport { useCookies } from \"react-cookie\";\nimport LoginComponent from \"../components/LoginComponent\";\nimport RecommendEach from \"./RecommendEach\";\nimport ProfileRecommender from \"../components/ProfileRecommender\";\nimport OwningEach from \"./OwningEach\";\n\nconst OwningPages = () => {\n    const { profile, monoposts,owningpage, profiles, followingpage} =  useContext(\n        ApiContext\n    );\n    const posts = monoposts.filter(item =>{return item.userPost === profile.userProfile})\n    const [cookies, setCookie, removeCookie] = useCookies([\"current-token\"]);\n\n    const pages =\n        owningpage.map(page =>\n            <OwningEach\n            key={page.id}\n            pageData ={page}/>)\n\n    return (\n        <Fragment>\n            <Header />\n            <Leftnav />\n\n\n            <div className=\"main-content right-chat-active\">\n                <div className=\"middle-sidebar-bottom\">\n                    <div className=\"middle-sidebar-left pe-0\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12 mb-3\">\n                                \n\n                                <div className='card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl'>\n                                <div className=\"card-body d-block  p-3\">\n                                    {/* {profile.imgBackground ?\n                                        <div className=\"row ps-2 pe-2\">\n                                            <div className=\"col-sm-12 p-1\"><img src={profile.imgBackground} className=\"rounded-xxl w-100\" alt=\"post\" /></div>                                        \n                                        </div>\n                                        : <></>} */}\n                                </div>\n                                <div className='card-body mt-5 p-0 position-relative'>\n                                    { profile.id ?\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src={profile.img} alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>:\n                                    <figure className='avatar position-absolute w100 z-index-1' style={{top:'-40px',left:'30px'}}><img src=\"https://ow6r85j5w096clt.site/media/image/サラリーマン.jpeg\" alt=\"avater\" className='float-right p-1 bg-white rounded-circle w-100'/></figure>}\n                                    <h4 className='fw-700 font-sm mt-0 mb-lg-5 mb-4 pl-15'>{profile.nickName}さんが所有中のページ<span className='fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block'>{profile.created_on}</span></h4>\n                                </div>\n\n                                <div className='card-body d-block w-100 shadow-none mb-0 p-0 border-top-xs'>\n                                    <ul className='nav nav-tabs h55 d-flex product-info-tab border-bottom-0 ps-4' id=\"pills-tab\" role=\"tablist\" >\n                                        <li className=\"active list-inline-item me-5\"><a className=\"active fw-700 font-xssss text-grey-500 pt-3 pb-3 ls-1 d-inline-block\" href=\"/followingpagelist\" data-toggle=\"tab\">話題</a></li>\n                                    </ul>\n\n                                </div>\n\n                             </div>\n                            </div>\n                            <div className=\"col-xl-4 col-xxl-3 col-lg-4 pe-3\">\n     \n                                {/* <Profiledetail />\n                                <UserpagePicture /> */}\n                            </div>\n                            <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\n                            {!cookies[\"current-token\"] ?\n                                <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                                <LoginComponent />\n                                </div>:\n                                <></>\n                                }\n                            {/* {!profile.id ?\n                            <div className='card w-100 shadow-xss rounded-xxl border-0 mb-3 bg-current'>\n                            <ProfileRecommender />\n                            </div>:\n                            <></>\n                            } */}\n                                <div className=\"row ps-2 pe-2\">\n                                    {pages}\n                                </div>\n\n                                <div className=\"card-body p-0 mb-3\">\n                                <div className=\"card w-100 shadow-xss rounded-xxl border-0 p-4 mb-3\">\n                                <div className=\"snippet mt-2 ms-auto me-auto\" data-title=\".dot-typing\">\n                                    <div className=\"stage\">\n                                    <div className=\"dot-typing\"></div>\n                                    </div>\n                                </div>\n                                </div>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Popupchat />\n            <Appfooter /> \n        </Fragment>\n    );\n}\n\nexport default OwningPages;","/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/OwningEach.jsx",["1150"],"import React,{useContext} from 'react';\n\nimport { ApiContext } from '../context/ApiContext'\nimport { useHistory } from \"react-router-dom\";\nimport LinearProgress from '@mui/joy/LinearProgress'\n\nconst OwningEach = (pageData, isfollow) => {\n    const history = useHistory()\n    const page = pageData\n    const { newUserIntPage,getUserInterest } =  useContext(\n        ApiContext\n    );\n    \n\n    const toOwnPage = () => {\n        const createdIntData = new FormData()\n        createdIntData.append(\"intPageId\",page.pageData.id)\n        newUserIntPage(createdIntData)\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        getUserInterest()\n        history.push(\"/owningpage\")\n    }\n\n    return (\n        <div className=\"col-md-5 col-sm-6 pe-2 ps-2\">\n        <div className=\"card w-100 p-0 hover-card shadow-xss border-0 rounded-3 overflow-hidden me-2 ms-2 mb-3\" onClick={() => toOwnPage()}>\n            {/* {value.feature ? <span className=\"font-xsssss fw-700 ps-3 pe-3 lh-32 text-uppercase rounded-3 ls-2 bg-primary-gradiant d-inline-block text-white position-absolute mt-3 ms-3 z-index-1\">Featured</span> : ''} */}\n            <div className=\"card-image w-100 mb-3\">\n                <a className=\"position-relative d-block\"><img src={page.pageData.img} alt=\"hotel\" className=\"w-100\" /></a>\n            </div>\n            <div className=\"card-body pt-0\">\n                {/* <i className=\"feather-bookmark font-md text-grey-500 position-absolute right-0 me-3\"></i> */}\n                <h4 className=\"fw-700 font-xss mt-0 lh-28 mb-0 pe-3\"><a href=\"/mono\" className=\"text-dark text-grey-900\">{page.pageData.title}</a></h4>\n                <h6 className=\"font-xsssss text-grey-500 fw-600 mt-0 mb-2\"> {page.pageData.created_on}</h6>\n\n                <div className=\"card-body p-1 mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"font-xss  lh-1 mt-2 text-grey-900 fw-300\">{pageData.pageData.rating}</h2>\n                    </div>\n                </div>\n                <LinearProgress\n                    color=\"info\"\n                    determinate\n                    size=\"sm\"\n                    value= {pageData.pageData.rating}\n                    variant=\"plain\"\n                    />\n                </div>\n                <div className=\"clearfix\"></div>\n                <span className=\"font-xsss fw-700 mt-0 pe-5 ls-2 lh-32 d-inline-block text-success float-left\"><span className=\"font-xssss\"></span>\n                 {/* {page.pageData.summary.slice(0,10)}.. */}\n                 </span>\n                <a href=\"/mono\" className=\"position-absolute bottom-15 mb-5 ms-2 right-15\"><i className=\"btn-round-sm bg-primary-gradiant text-white font-sm feather-chevron-right\"></i></a>\n            </div>\n        </div>\n        </div>\n\n    )\n} \n\nexport default OwningEach;",{"ruleId":"1151","severity":1,"message":"1152","line":27,"column":10,"nodeType":"1153","messageId":"1154","endLine":27,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1155","line":650,"column":13,"nodeType":"1153","messageId":"1154","endLine":650,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":679,"column":13,"nodeType":"1153","messageId":"1154","endLine":679,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":703,"column":13,"nodeType":"1153","messageId":"1154","endLine":703,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":811,"column":11,"nodeType":"1153","messageId":"1154","endLine":811,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1156","line":849,"column":11,"nodeType":"1153","messageId":"1154","endLine":849,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1155","line":1002,"column":13,"nodeType":"1153","messageId":"1154","endLine":1002,"endColumn":16},{"ruleId":"1157","severity":1,"message":"1158","line":112,"column":37,"nodeType":"1159","endLine":112,"endColumn":245},{"ruleId":"1157","severity":1,"message":"1158","line":45,"column":95,"nodeType":"1159","endLine":45,"endColumn":165},{"ruleId":"1151","severity":1,"message":"1160","line":13,"column":33,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1161","line":13,"column":58,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":77},{"ruleId":"1151","severity":1,"message":"1162","line":16,"column":11,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1164","line":13,"column":22,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1160","line":13,"column":33,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1165","line":13,"column":43,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":56},{"ruleId":"1157","severity":1,"message":"1158","line":143,"column":17,"nodeType":"1159","endLine":143,"endColumn":153},{"ruleId":"1157","severity":1,"message":"1158","line":145,"column":17,"nodeType":"1159","endLine":145,"endColumn":144},{"ruleId":"1157","severity":1,"message":"1158","line":247,"column":17,"nodeType":"1159","endLine":247,"endColumn":144},{"ruleId":"1157","severity":1,"message":"1158","line":26,"column":17,"nodeType":"1159","endLine":26,"endColumn":58},{"ruleId":"1157","severity":1,"message":"1158","line":28,"column":17,"nodeType":"1159","endLine":28,"endColumn":58},{"ruleId":"1151","severity":1,"message":"1166","line":2,"column":17,"nodeType":"1153","messageId":"1154","endLine":2,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1167","line":10,"column":20,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":29},{"ruleId":"1151","severity":1,"message":"1168","line":3,"column":10,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1169","line":10,"column":11,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1170","severity":1,"message":"1171","line":86,"column":37,"nodeType":"1159","endLine":86,"endColumn":108},{"ruleId":"1151","severity":1,"message":"1172","line":5,"column":10,"nodeType":"1153","messageId":"1154","endLine":5,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1173","line":6,"column":10,"nodeType":"1153","messageId":"1154","endLine":6,"endColumn":17},{"ruleId":"1151","severity":1,"message":"1174","line":7,"column":10,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1175","line":19,"column":37,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1176","line":64,"column":11,"nodeType":"1153","messageId":"1154","endLine":64,"endColumn":18},{"ruleId":"1177","severity":1,"message":"1178","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1180"},{"ruleId":"1157","severity":1,"message":"1158","line":227,"column":25,"nodeType":"1159","endLine":227,"endColumn":176},{"ruleId":"1157","severity":1,"message":"1158","line":229,"column":25,"nodeType":"1159","endLine":229,"endColumn":141},{"ruleId":"1151","severity":1,"message":"1181","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1182","line":7,"column":55,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":76},{"ruleId":"1151","severity":1,"message":"1183","line":7,"column":77,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":93},{"ruleId":"1157","severity":1,"message":"1158","line":32,"column":21,"nodeType":"1159","endLine":32,"endColumn":187},{"ruleId":"1151","severity":1,"message":"1184","line":15,"column":79,"nodeType":"1153","messageId":"1154","endLine":15,"endColumn":88},{"ruleId":"1177","severity":1,"message":"1185","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1186"},{"ruleId":"1157","severity":1,"message":"1158","line":240,"column":45,"nodeType":"1159","endLine":240,"endColumn":183},{"ruleId":"1157","severity":1,"message":"1187","line":242,"column":45,"nodeType":"1159","endLine":242,"endColumn":185},{"ruleId":"1157","severity":1,"message":"1187","line":244,"column":41,"nodeType":"1159","endLine":244,"endColumn":183},{"ruleId":"1151","severity":1,"message":"1188","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":28,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":36},{"ruleId":"1157","severity":1,"message":"1158","line":31,"column":17,"nodeType":"1159","endLine":31,"endColumn":161},{"ruleId":"1157","severity":1,"message":"1158","line":33,"column":17,"nodeType":"1159","endLine":33,"endColumn":126},{"ruleId":"1151","severity":1,"message":"1189","line":1,"column":8,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":12},{"ruleId":"1157","severity":1,"message":"1187","line":43,"column":17,"nodeType":"1159","endLine":43,"endColumn":170},{"ruleId":"1157","severity":1,"message":"1158","line":44,"column":17,"nodeType":"1159","endLine":44,"endColumn":115},{"ruleId":"1151","severity":1,"message":"1184","line":13,"column":21,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1190","line":79,"column":12,"nodeType":"1153","messageId":"1154","endLine":79,"endColumn":25},{"ruleId":"1177","severity":1,"message":"1191","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1192"},{"ruleId":"1151","severity":1,"message":"1193","line":34,"column":25,"nodeType":"1153","messageId":"1154","endLine":34,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1193","line":37,"column":25,"nodeType":"1153","messageId":"1154","endLine":37,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1152","line":27,"column":10,"nodeType":"1153","messageId":"1154","endLine":27,"endColumn":22},{"ruleId":"1177","severity":1,"message":"1194","line":464,"column":6,"nodeType":"1179","endLine":464,"endColumn":25,"suggestions":"1195"},{"ruleId":"1151","severity":1,"message":"1155","line":844,"column":13,"nodeType":"1153","messageId":"1154","endLine":844,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":873,"column":13,"nodeType":"1153","messageId":"1154","endLine":873,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":902,"column":13,"nodeType":"1153","messageId":"1154","endLine":902,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1196","line":1011,"column":11,"nodeType":"1153","messageId":"1154","endLine":1011,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1155","line":1024,"column":11,"nodeType":"1153","messageId":"1154","endLine":1024,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1156","line":1075,"column":11,"nodeType":"1153","messageId":"1154","endLine":1075,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1155","line":1228,"column":13,"nodeType":"1153","messageId":"1154","endLine":1228,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1165","line":20,"column":76,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":89},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":21,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":32,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1199","line":59,"column":11,"nodeType":"1153","messageId":"1154","endLine":59,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1197","line":21,"column":19,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1198","line":21,"column":30,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":42},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1160","line":16,"column":33,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1161","line":16,"column":58,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":77},{"ruleId":"1151","severity":1,"message":"1162","line":19,"column":11,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":21,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":32,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":19,"column":21,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":19,"column":32,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":22,"column":21,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":22,"column":32,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1202","line":6,"column":8,"nodeType":"1153","messageId":"1154","endLine":6,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1203","line":22,"column":11,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1204","line":44,"column":96,"nodeType":"1153","messageId":"1154","endLine":44,"endColumn":111},{"ruleId":"1151","severity":1,"message":"1197","line":48,"column":21,"nodeType":"1153","messageId":"1154","endLine":48,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":48,"column":32,"nodeType":"1153","messageId":"1154","endLine":48,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":19,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":30,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":42},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1164","line":16,"column":22,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1160","line":16,"column":33,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1165","line":16,"column":43,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":56},{"ruleId":"1151","severity":1,"message":"1197","line":19,"column":21,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":19,"column":32,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":24,"column":23,"nodeType":"1153","messageId":"1154","endLine":24,"endColumn":32},{"ruleId":"1151","severity":1,"message":"1198","line":24,"column":34,"nodeType":"1153","messageId":"1154","endLine":24,"endColumn":46},{"ruleId":"1151","severity":1,"message":"1205","line":7,"column":22,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":32},{"ruleId":"1151","severity":1,"message":"1201","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1206","line":10,"column":10,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":20},{"ruleId":"1151","severity":1,"message":"1197","line":14,"column":21,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":14,"column":32,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":44},{"ruleId":"1157","severity":1,"message":"1158","line":31,"column":17,"nodeType":"1159","endLine":31,"endColumn":58},{"ruleId":"1151","severity":1,"message":"1207","line":17,"column":12,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1208","line":17,"column":18,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":25},{"ruleId":"1157","severity":1,"message":"1158","line":138,"column":29,"nodeType":"1159","endLine":138,"endColumn":32},{"ruleId":"1170","severity":1,"message":"1171","line":139,"column":33,"nodeType":"1159","endLine":139,"endColumn":102},{"ruleId":"1157","severity":1,"message":"1158","line":178,"column":17,"nodeType":"1159","endLine":178,"endColumn":154},{"ruleId":"1157","severity":1,"message":"1158","line":180,"column":17,"nodeType":"1159","endLine":180,"endColumn":145},{"ruleId":"1157","severity":1,"message":"1158","line":285,"column":17,"nodeType":"1159","endLine":285,"endColumn":145},{"ruleId":"1157","severity":1,"message":"1158","line":26,"column":17,"nodeType":"1159","endLine":26,"endColumn":58},{"ruleId":"1151","severity":1,"message":"1166","line":2,"column":17,"nodeType":"1153","messageId":"1154","endLine":2,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1167","line":10,"column":20,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":29},{"ruleId":"1151","severity":1,"message":"1181","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1182","line":7,"column":55,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":76},{"ruleId":"1151","severity":1,"message":"1183","line":7,"column":77,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":93},{"ruleId":"1170","severity":1,"message":"1171","line":87,"column":33,"nodeType":"1159","endLine":87,"endColumn":104},{"ruleId":"1157","severity":1,"message":"1158","line":84,"column":29,"nodeType":"1159","endLine":84,"endColumn":32},{"ruleId":"1170","severity":1,"message":"1171","line":85,"column":33,"nodeType":"1159","endLine":85,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1169","line":10,"column":11,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1170","severity":1,"message":"1171","line":84,"column":33,"nodeType":"1159","endLine":84,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1172","line":5,"column":10,"nodeType":"1153","messageId":"1154","endLine":5,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1173","line":6,"column":10,"nodeType":"1153","messageId":"1154","endLine":6,"endColumn":17},{"ruleId":"1151","severity":1,"message":"1174","line":7,"column":10,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1209","line":12,"column":8,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1210","line":14,"column":10,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1175","line":20,"column":37,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1176","line":65,"column":11,"nodeType":"1153","messageId":"1154","endLine":65,"endColumn":18},{"ruleId":"1177","severity":1,"message":"1178","line":147,"column":8,"nodeType":"1179","endLine":147,"endColumn":35,"suggestions":"1211"},{"ruleId":"1151","severity":1,"message":"1212","line":154,"column":11,"nodeType":"1153","messageId":"1154","endLine":154,"endColumn":29},{"ruleId":"1151","severity":1,"message":"1213","line":158,"column":12,"nodeType":"1153","messageId":"1154","endLine":158,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1214","line":158,"column":18,"nodeType":"1153","messageId":"1154","endLine":158,"endColumn":25},{"ruleId":"1170","severity":1,"message":"1171","line":83,"column":37,"nodeType":"1159","endLine":83,"endColumn":108},{"ruleId":"1151","severity":1,"message":"1184","line":15,"column":79,"nodeType":"1153","messageId":"1154","endLine":15,"endColumn":88},{"ruleId":"1177","severity":1,"message":"1185","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1215"},{"ruleId":"1151","severity":1,"message":"1168","line":3,"column":10,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1160","line":8,"column":13,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1216","line":8,"column":32,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":45},{"ruleId":"1151","severity":1,"message":"1188","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":28,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":36},{"ruleId":"1157","severity":1,"message":"1158","line":31,"column":17,"nodeType":"1159","endLine":31,"endColumn":161},{"ruleId":"1157","severity":1,"message":"1158","line":33,"column":17,"nodeType":"1159","endLine":33,"endColumn":126},{"ruleId":"1151","severity":1,"message":"1189","line":1,"column":8,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":12},{"ruleId":"1151","severity":1,"message":"1184","line":13,"column":21,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1190","line":79,"column":12,"nodeType":"1153","messageId":"1154","endLine":79,"endColumn":25},{"ruleId":"1177","severity":1,"message":"1191","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1217"},{"ruleId":"1151","severity":1,"message":"1182","line":7,"column":54,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":75},{"ruleId":"1151","severity":1,"message":"1183","line":7,"column":110,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":126},{"ruleId":"1151","severity":1,"message":"1218","line":32,"column":11,"nodeType":"1153","messageId":"1154","endLine":32,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1219","line":39,"column":13,"nodeType":"1153","messageId":"1154","endLine":39,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1188","line":1,"column":28,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":39},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":41,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":49},{"ruleId":"1151","severity":1,"message":"1220","line":4,"column":18,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1221","line":10,"column":21,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":34},{"ruleId":"1151","severity":1,"message":"1222","line":10,"column":36,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":52},{"ruleId":"1151","severity":1,"message":"1223","line":10,"column":54,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":67},{"ruleId":"1151","severity":1,"message":"1224","line":10,"column":69,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":77},{"ruleId":"1151","severity":1,"message":"1184","line":10,"column":79,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":88},{"ruleId":"1151","severity":1,"message":"1225","line":10,"column":90,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":103},{"ruleId":"1151","severity":1,"message":"1226","line":10,"column":105,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":116},{"ruleId":"1151","severity":1,"message":"1227","line":12,"column":12,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":19},{"ruleId":"1151","severity":1,"message":"1197","line":12,"column":21,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1228","line":1,"column":29,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":37},{"ruleId":"1151","severity":1,"message":"1229","line":94,"column":12,"nodeType":"1153","messageId":"1154","endLine":94,"endColumn":19},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1162","line":19,"column":11,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1230","line":10,"column":8,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1201","line":14,"column":8,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1160","line":17,"column":33,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1162","line":20,"column":11,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":21,"column":21,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":21,"column":32,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1231","line":1,"column":17,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1228","line":1,"column":29,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":37},{"ruleId":"1151","severity":1,"message":"1205","line":1,"column":39,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":49},{"ruleId":"1151","severity":1,"message":"1232","line":2,"column":10,"nodeType":"1153","messageId":"1154","endLine":2,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1233","line":3,"column":8,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":13},{"ruleId":"1151","severity":1,"message":"1206","line":4,"column":10,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":20},{"ruleId":"1234","severity":1,"message":"1235","line":18,"column":21,"nodeType":"1159","endLine":18,"endColumn":84},{"ruleId":"1236","replacedBy":"1237"},{"ruleId":"1238","replacedBy":"1239"},{"ruleId":"1151","severity":1,"message":"1193","line":41,"column":25,"nodeType":"1153","messageId":"1154","endLine":41,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1152","line":27,"column":10,"nodeType":"1153","messageId":"1154","endLine":27,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1240","line":43,"column":27,"nodeType":"1153","messageId":"1154","endLine":43,"endColumn":45},{"ruleId":"1151","severity":1,"message":"1241","line":44,"column":10,"nodeType":"1153","messageId":"1154","endLine":44,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1242","line":44,"column":24,"nodeType":"1153","messageId":"1154","endLine":44,"endColumn":39},{"ruleId":"1177","severity":1,"message":"1194","line":494,"column":6,"nodeType":"1179","endLine":494,"endColumn":25,"suggestions":"1243"},{"ruleId":"1151","severity":1,"message":"1155","line":901,"column":13,"nodeType":"1153","messageId":"1154","endLine":901,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":930,"column":13,"nodeType":"1153","messageId":"1154","endLine":930,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":959,"column":13,"nodeType":"1153","messageId":"1154","endLine":959,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1196","line":1068,"column":11,"nodeType":"1153","messageId":"1154","endLine":1068,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1155","line":1081,"column":11,"nodeType":"1153","messageId":"1154","endLine":1081,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1156","line":1132,"column":11,"nodeType":"1153","messageId":"1154","endLine":1132,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1155","line":1287,"column":13,"nodeType":"1153","messageId":"1154","endLine":1287,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1155","line":1307,"column":13,"nodeType":"1153","messageId":"1154","endLine":1307,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1165","line":20,"column":76,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":89},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":21,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":32,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1199","line":59,"column":11,"nodeType":"1153","messageId":"1154","endLine":59,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":24,"column":23,"nodeType":"1153","messageId":"1154","endLine":24,"endColumn":32},{"ruleId":"1151","severity":1,"message":"1198","line":24,"column":34,"nodeType":"1153","messageId":"1154","endLine":24,"endColumn":46},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1230","line":10,"column":8,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1201","line":14,"column":8,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1160","line":17,"column":33,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1162","line":20,"column":11,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":21,"column":21,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":21,"column":32,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":19,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":30,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":42},{"ruleId":"1151","severity":1,"message":"1197","line":19,"column":21,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":19,"column":32,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1162","line":19,"column":11,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1160","line":16,"column":33,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1161","line":16,"column":58,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":77},{"ruleId":"1151","severity":1,"message":"1162","line":19,"column":11,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":20,"column":21,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":20,"column":32,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1201","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1164","line":16,"column":22,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1160","line":16,"column":33,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":41},{"ruleId":"1151","severity":1,"message":"1165","line":16,"column":43,"nodeType":"1153","messageId":"1154","endLine":16,"endColumn":56},{"ruleId":"1151","severity":1,"message":"1197","line":19,"column":21,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":19,"column":32,"nodeType":"1153","messageId":"1154","endLine":19,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":22,"column":21,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":22,"column":32,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1197","line":21,"column":19,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1198","line":21,"column":30,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":42},{"ruleId":"1151","severity":1,"message":"1202","line":6,"column":8,"nodeType":"1153","messageId":"1154","endLine":6,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1203","line":23,"column":11,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1197","line":49,"column":21,"nodeType":"1153","messageId":"1154","endLine":49,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":49,"column":32,"nodeType":"1153","messageId":"1154","endLine":49,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1188","line":1,"column":28,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":39},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":41,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":49},{"ruleId":"1151","severity":1,"message":"1220","line":4,"column":18,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":28},{"ruleId":"1151","severity":1,"message":"1221","line":10,"column":21,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":34},{"ruleId":"1151","severity":1,"message":"1222","line":10,"column":36,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":52},{"ruleId":"1151","severity":1,"message":"1223","line":10,"column":54,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":67},{"ruleId":"1151","severity":1,"message":"1224","line":10,"column":69,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":77},{"ruleId":"1151","severity":1,"message":"1184","line":10,"column":79,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":88},{"ruleId":"1151","severity":1,"message":"1225","line":10,"column":90,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":103},{"ruleId":"1151","severity":1,"message":"1226","line":10,"column":105,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":116},{"ruleId":"1151","severity":1,"message":"1227","line":12,"column":12,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":19},{"ruleId":"1151","severity":1,"message":"1197","line":12,"column":21,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1197","line":23,"column":21,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":23,"column":32,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1205","line":7,"column":22,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":32},{"ruleId":"1151","severity":1,"message":"1201","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1206","line":10,"column":10,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":20},{"ruleId":"1151","severity":1,"message":"1197","line":14,"column":21,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":14,"column":32,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1207","line":17,"column":12,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1208","line":17,"column":18,"nodeType":"1153","messageId":"1154","endLine":17,"endColumn":25},{"ruleId":"1157","severity":1,"message":"1158","line":138,"column":29,"nodeType":"1159","endLine":138,"endColumn":32},{"ruleId":"1170","severity":1,"message":"1171","line":139,"column":33,"nodeType":"1159","endLine":139,"endColumn":102},{"ruleId":"1157","severity":1,"message":"1158","line":178,"column":17,"nodeType":"1159","endLine":178,"endColumn":154},{"ruleId":"1157","severity":1,"message":"1158","line":180,"column":17,"nodeType":"1159","endLine":181,"endColumn":38},{"ruleId":"1157","severity":1,"message":"1158","line":286,"column":17,"nodeType":"1159","endLine":286,"endColumn":145},{"ruleId":"1157","severity":1,"message":"1158","line":26,"column":17,"nodeType":"1159","endLine":26,"endColumn":58},{"ruleId":"1151","severity":1,"message":"1213","line":23,"column":12,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1214","line":23,"column":18,"nodeType":"1153","messageId":"1154","endLine":23,"endColumn":25},{"ruleId":"1157","severity":1,"message":"1158","line":50,"column":17,"nodeType":"1159","endLine":50,"endColumn":58},{"ruleId":"1151","severity":1,"message":"1168","line":3,"column":10,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1166","line":2,"column":17,"nodeType":"1153","messageId":"1154","endLine":2,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1167","line":10,"column":20,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":29},{"ruleId":"1151","severity":1,"message":"1228","line":1,"column":29,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":37},{"ruleId":"1151","severity":1,"message":"1229","line":94,"column":12,"nodeType":"1153","messageId":"1154","endLine":94,"endColumn":19},{"ruleId":"1170","severity":1,"message":"1171","line":83,"column":37,"nodeType":"1159","endLine":83,"endColumn":108},{"ruleId":"1151","severity":1,"message":"1160","line":8,"column":13,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1216","line":8,"column":32,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":45},{"ruleId":"1151","severity":1,"message":"1181","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1169","line":10,"column":11,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1170","severity":1,"message":"1171","line":87,"column":33,"nodeType":"1159","endLine":87,"endColumn":104},{"ruleId":"1157","severity":1,"message":"1158","line":84,"column":29,"nodeType":"1159","endLine":84,"endColumn":32},{"ruleId":"1170","severity":1,"message":"1171","line":85,"column":33,"nodeType":"1159","endLine":85,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1182","line":7,"column":55,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":76},{"ruleId":"1151","severity":1,"message":"1183","line":7,"column":77,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":93},{"ruleId":"1151","severity":1,"message":"1231","line":1,"column":17,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1228","line":1,"column":29,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":37},{"ruleId":"1151","severity":1,"message":"1205","line":1,"column":39,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":49},{"ruleId":"1151","severity":1,"message":"1232","line":2,"column":10,"nodeType":"1153","messageId":"1154","endLine":2,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1233","line":3,"column":8,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":13},{"ruleId":"1151","severity":1,"message":"1206","line":4,"column":10,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":20},{"ruleId":"1234","severity":1,"message":"1235","line":18,"column":21,"nodeType":"1159","endLine":18,"endColumn":84},{"ruleId":"1170","severity":1,"message":"1171","line":84,"column":33,"nodeType":"1159","endLine":84,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1184","line":15,"column":79,"nodeType":"1153","messageId":"1154","endLine":15,"endColumn":88},{"ruleId":"1177","severity":1,"message":"1185","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1244"},{"ruleId":"1151","severity":1,"message":"1172","line":5,"column":10,"nodeType":"1153","messageId":"1154","endLine":5,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1173","line":6,"column":10,"nodeType":"1153","messageId":"1154","endLine":6,"endColumn":17},{"ruleId":"1151","severity":1,"message":"1174","line":7,"column":10,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":14},{"ruleId":"1151","severity":1,"message":"1209","line":12,"column":8,"nodeType":"1153","messageId":"1154","endLine":12,"endColumn":22},{"ruleId":"1151","severity":1,"message":"1210","line":14,"column":10,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1175","line":20,"column":37,"nodeType":"1153","messageId":"1154","endLine":20,"endColumn":44},{"ruleId":"1151","severity":1,"message":"1176","line":65,"column":11,"nodeType":"1153","messageId":"1154","endLine":65,"endColumn":18},{"ruleId":"1177","severity":1,"message":"1178","line":147,"column":8,"nodeType":"1179","endLine":147,"endColumn":35,"suggestions":"1245"},{"ruleId":"1151","severity":1,"message":"1212","line":154,"column":11,"nodeType":"1153","messageId":"1154","endLine":154,"endColumn":29},{"ruleId":"1151","severity":1,"message":"1213","line":158,"column":12,"nodeType":"1153","messageId":"1154","endLine":158,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1214","line":158,"column":18,"nodeType":"1153","messageId":"1154","endLine":158,"endColumn":25},{"ruleId":"1151","severity":1,"message":"1188","line":1,"column":15,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":28,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":36},{"ruleId":"1157","severity":1,"message":"1158","line":31,"column":17,"nodeType":"1159","endLine":31,"endColumn":161},{"ruleId":"1157","severity":1,"message":"1158","line":33,"column":17,"nodeType":"1159","endLine":33,"endColumn":126},{"ruleId":"1151","severity":1,"message":"1182","line":7,"column":54,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":75},{"ruleId":"1151","severity":1,"message":"1183","line":7,"column":110,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":126},{"ruleId":"1151","severity":1,"message":"1218","line":32,"column":11,"nodeType":"1153","messageId":"1154","endLine":32,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1219","line":39,"column":13,"nodeType":"1153","messageId":"1154","endLine":39,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1189","line":1,"column":8,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":12},{"ruleId":"1151","severity":1,"message":"1184","line":13,"column":21,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1190","line":79,"column":12,"nodeType":"1153","messageId":"1154","endLine":79,"endColumn":25},{"ruleId":"1177","severity":1,"message":"1191","line":146,"column":8,"nodeType":"1179","endLine":146,"endColumn":35,"suggestions":"1246"},{"ruleId":"1151","severity":1,"message":"1231","line":1,"column":17,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1247","line":3,"column":10,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1233","line":4,"column":8,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":13},{"ruleId":"1151","severity":1,"message":"1229","line":10,"column":11,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1248","line":10,"column":19,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1249","line":10,"column":34,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":52},{"ruleId":"1151","severity":1,"message":"1250","line":10,"column":55,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":64},{"ruleId":"1151","severity":1,"message":"1160","line":10,"column":66,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":74},{"ruleId":"1151","severity":1,"message":"1251","line":10,"column":76,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":90},{"ruleId":"1151","severity":1,"message":"1252","line":10,"column":91,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":99},{"ruleId":"1151","severity":1,"message":"1253","line":10,"column":100,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":114},{"ruleId":"1151","severity":1,"message":"1254","line":10,"column":117,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":132},{"ruleId":"1151","severity":1,"message":"1255","line":10,"column":133,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":147},{"ruleId":"1151","severity":1,"message":"1256","line":10,"column":149,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":161},{"ruleId":"1151","severity":1,"message":"1164","line":10,"column":163,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":172},{"ruleId":"1151","severity":1,"message":"1257","line":14,"column":9,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":20},{"ruleId":"1234","severity":1,"message":"1235","line":56,"column":41,"nodeType":"1159","endLine":56,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1168","line":1,"column":16,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":24},{"ruleId":"1151","severity":1,"message":"1258","line":7,"column":8,"nodeType":"1153","messageId":"1154","endLine":7,"endColumn":17},{"ruleId":"1151","severity":1,"message":"1229","line":11,"column":13,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":20},{"ruleId":"1151","severity":1,"message":"1160","line":11,"column":22,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1259","line":11,"column":41,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":56},{"ruleId":"1151","severity":1,"message":"1260","line":11,"column":58,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":68},{"ruleId":"1151","severity":1,"message":"1261","line":11,"column":70,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":83},{"ruleId":"1151","severity":1,"message":"1262","line":11,"column":84,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":94},{"ruleId":"1151","severity":1,"message":"1263","line":11,"column":95,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":105},{"ruleId":"1151","severity":1,"message":"1254","line":11,"column":107,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":122},{"ruleId":"1151","severity":1,"message":"1251","line":11,"column":124,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":138},{"ruleId":"1151","severity":1,"message":"1231","line":1,"column":17,"nodeType":"1153","messageId":"1154","endLine":1,"endColumn":27},{"ruleId":"1151","severity":1,"message":"1264","line":3,"column":10,"nodeType":"1153","messageId":"1154","endLine":3,"endColumn":25},{"ruleId":"1151","severity":1,"message":"1247","line":4,"column":10,"nodeType":"1153","messageId":"1154","endLine":4,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1233","line":5,"column":8,"nodeType":"1153","messageId":"1154","endLine":5,"endColumn":13},{"ruleId":"1151","severity":1,"message":"1169","line":11,"column":11,"nodeType":"1153","messageId":"1154","endLine":11,"endColumn":18},{"ruleId":"1234","severity":1,"message":"1235","line":40,"column":41,"nodeType":"1159","endLine":40,"endColumn":104},{"ruleId":"1151","severity":1,"message":"1163","line":8,"column":8,"nodeType":"1153","messageId":"1154","endLine":8,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1153","messageId":"1154","endLine":9,"endColumn":23},{"ruleId":"1151","severity":1,"message":"1230","line":10,"column":8,"nodeType":"1153","messageId":"1154","endLine":10,"endColumn":18},{"ruleId":"1151","severity":1,"message":"1265","line":13,"column":8,"nodeType":"1153","messageId":"1154","endLine":13,"endColumn":21},{"ruleId":"1151","severity":1,"message":"1201","line":14,"column":8,"nodeType":"1153","messageId":"1154","endLine":14,"endColumn":26},{"ruleId":"1151","severity":1,"message":"1160","line":18,"column":44,"nodeType":"1153","messageId":"1154","endLine":18,"endColumn":52},{"ruleId":"1151","severity":1,"message":"1261","line":18,"column":54,"nodeType":"1153","messageId":"1154","endLine":18,"endColumn":67},{"ruleId":"1151","severity":1,"message":"1162","line":21,"column":11,"nodeType":"1153","messageId":"1154","endLine":21,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1197","line":22,"column":21,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":30},{"ruleId":"1151","severity":1,"message":"1198","line":22,"column":32,"nodeType":"1153","messageId":"1154","endLine":22,"endColumn":44},{"ruleId":"1157","severity":1,"message":"1158","line":31,"column":17,"nodeType":"1159","endLine":31,"endColumn":58},"no-unused-vars","'intattribute' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'createData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'profiles' is assigned a value but never used.","'mutualfollowinguser' is assigned a value but never used.","'posts' is assigned a value but never used.","'Profiledetail' is defined but never used.","'monoposts' is assigned a value but never used.","'followinguser' is assigned a value but never used.","'NavLink' is defined but never used.","'setIsOpen' is assigned a value but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'profile' is defined but never used.","'post' is defined but never used.","'postimg' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'profile.nickName' and 'setPostimg'. Either include them or remove the dependency array.","ArrayExpression",["1266"],"'Component' is defined but never used.","'changeApprovalRequest' is assigned a value but never used.","'getFriendRequest' is assigned a value but never used.","'coverBack' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'profile.nickName' and 'setCover'. Either include them or remove the dependency array.",["1267"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useCallback' is defined but never used.","'area' is defined but never used.","'croppedImgSrc' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'profile.nickName' and 'setCoverBack'. Either include them or remove the dependency array.",["1268"],"'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'profile.userProfile'. Either include it or remove the dependency array.",["1269"],"'compareFunc' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'listMonoPages' is assigned a value but never used.","'UserpagePicture' is defined but never used.","'ProfileRecommender' is defined but never used.","'Slider' is defined but never used.","'hotelsettings' is assigned a value but never used.","'isfollowingpage' is assigned a value but never used.","'useContext' is defined but never used.","'ApiContext' is defined but never used.","'tab1' is assigned a value but never used.","'setTab1' is assigned a value but never used.","'LinearProgress' is defined but never used.","'create' is defined but never used.",["1270"],"'handleSliderChange' is assigned a value but never used.","'rate' is assigned a value but never used.","'setRate' is assigned a value but never used.",["1271"],"'friendrequest' is assigned a value but never used.",["1272"],"'createNewRequest' is assigned a value but never used.","'isfollow' is assigned a value but never used.","'makeStyles' is defined but never used.","'editedProfile' is assigned a value but never used.","'setEditedProfile' is assigned a value but never used.","'deleteProfile' is assigned a value but never used.","'setCover' is assigned a value but never used.","'createProfile' is assigned a value but never used.","'editProfile' is assigned a value but never used.","'cookies' is assigned a value but never used.","'Fragment' is defined but never used.","'profile' is assigned a value but never used.","'FollowEach' is defined but never used.","'useReducer' is defined but never used.","'withCookies' is defined but never used.","'axios' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-native-reassign",["1273"],"no-negated-in-lhs",["1274"],"'setIsfollowingpage' is assigned a value but never used.","'isowningpage' is assigned a value but never used.","'setIsOwningpage' is assigned a value but never used.",["1275"],["1276"],["1277"],["1278"],"'formatCurrencyString' is defined but never used.","'monocomments' is assigned a value but never used.","'commentsforintpost' is assigned a value but never used.","'monopages' is assigned a value but never used.","'newUserIntPage' is assigned a value but never used.","'likePost' is assigned a value but never used.","'newUserIntUser' is assigned a value but never used.","'getUserInterest' is assigned a value but never used.","'newUserIntPost' is assigned a value but never used.","'createRepost' is assigned a value but never used.","'productData' is assigned a value but never used.","'Popupchat' is defined but never used.","'postsforintpage' is assigned a value but never used.","'followPage' is assigned a value but never used.","'followingpage' is assigned a value but never used.","'affiliates' is assigned a value but never used.","'owningpage' is assigned a value but never used.","'useShoppingCart' is defined but never used.","'RecommendEach' is defined but never used.",{"desc":"1279","fix":"1280"},{"desc":"1281","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"desc":"1279","fix":"1287"},{"desc":"1281","fix":"1288"},{"desc":"1283","fix":"1289"},"no-global-assign","no-unsafe-negation",{"desc":"1285","fix":"1290"},{"desc":"1281","fix":"1291"},{"desc":"1279","fix":"1292"},{"desc":"1283","fix":"1293"},"Update the dependencies array to be: [croppedAreaPixels, imgSrc, profile.nickName, setPostimg]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [croppedAreaPixels, imgSrc, profile.nickName, setCover]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [croppedAreaPixels, imgSrc, profile.nickName, setCoverBack]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [token, profile.id, profile.userProfile]",{"range":"1300","text":"1301"},{"range":"1302","text":"1295"},{"range":"1303","text":"1297"},{"range":"1304","text":"1299"},{"range":"1305","text":"1301"},{"range":"1306","text":"1297"},{"range":"1307","text":"1295"},{"range":"1308","text":"1299"},[4455,4482],"[croppedAreaPixels, imgSrc, profile.nickName, setPostimg]",[4241,4268],"[croppedAreaPixels, imgSrc, profile.nickName, setCover]",[4217,4244],"[croppedAreaPixels, imgSrc, profile.nickName, setCoverBack]",[15099,15118],"[token, profile.id, profile.userProfile]",[4496,4523],[4241,4268],[4217,4244],[15889,15908],[4241,4268],[4496,4523],[4217,4244]]