{"ast":null,"code":"var _jsxFileName = \"/Users/hirakuono/Desktop/\\u958B\\u767A/tatamiproject_0.5/tatami-react/src/components/CropperModal.jsx\",\n  _s = $RefreshSig$();\nimport { Button, makeStyles, Modal, Slider } from \"@material-ui/core\";\nimport React from \"react\";\nimport Cropper, { Area, MediaSize } from \"react-easy-crop\";\nimport { ASPECT_RATIO, CROP_WIDTH } from \"./Createpost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modal: {\n    width: 420,\n    height: 500,\n    backgroundColor: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexFlow: \"column\",\n    borderRadius: \"0px 0px 10px 10px\",\n    \"& .crop-container\": {\n      height: 400,\n      borderRadius: \"10px 10px 0px 0px\",\n      backgroundColor: \"#f4f7fb\",\n      position: \"relative\",\n      \"& .container\": {},\n      \"& .crop-area\": {\n        border: \"3px solid #00A0FF\"\n      },\n      \"& .media\": {}\n    },\n    \"& .controls\": {\n      height: 40,\n      marginLeft: 50,\n      marginRight: 50,\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: 10,\n      \"& .zoom-range\": {\n        color: \"#00A0FF\"\n      }\n    },\n    \"& .buttons\": {\n      height: 40,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      marginRight: 90,\n      marginLeft: 90,\n      marginBottom: 10,\n      \"& .close\": {\n        backgroundColor: \"gray\",\n        color: \"#fff\"\n      },\n      \"& .ok\": {\n        backgroundColor: \"#00A0FF\",\n        color: \"#fff\"\n      }\n    }\n  }\n});\nconst CropperModal = _ref => {\n  _s();\n  let {\n    crop,\n    setCrop,\n    onCropComplete,\n    setZoom,\n    zoom,\n    open,\n    onClose,\n    imgSrc,\n    showCroppedImage,\n    onMediaLoaded,\n    minZoom\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.modal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-space\",\n          children: /*#__PURE__*/_jsxDEV(Cropper, {\n            image: imgSrc,\n            crop: crop,\n            zoom: zoom,\n            minZoom: minZoom,\n            maxZoom: minZoom + 3,\n            aspect: ASPECT_RATIO,\n            onCropChange: setCrop,\n            onCropComplete: onCropComplete,\n            onZoomChange: setZoom,\n            cropSize: {\n              width: CROP_WIDTH,\n              height: CROP_WIDTH / ASPECT_RATIO\n            },\n            classes: {\n              containerClassName: \"container\",\n              cropAreaClassName: \"crop-area\",\n              mediaClassName: \"media\"\n            },\n            onMediaLoaded: onMediaLoaded,\n            showGrid: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          min: minZoom,\n          value: zoom,\n          max: minZoom + 3,\n          step: 0.1,\n          onChange: (e, value) => {\n            if (typeof value === \"number\") {\n              setZoom(value);\n            }\n          },\n          className: \"zoom-range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"close\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"ok\",\n          onClick: () => {\n            onClose();\n            showCroppedImage();\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(CropperModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CropperModal;\nexport default CropperModal;\nvar _c;\n$RefreshReg$(_c, \"CropperModal\");","map":{"version":3,"names":["Button","makeStyles","Modal","Slider","React","Cropper","Area","MediaSize","ASPECT_RATIO","CROP_WIDTH","jsxDEV","_jsxDEV","useStyles","root","display","alignItems","justifyContent","modal","width","height","backgroundColor","flexFlow","borderRadius","position","border","marginLeft","marginRight","marginTop","color","marginBottom","CropperModal","_ref","_s","crop","setCrop","onCropComplete","setZoom","zoom","open","onClose","imgSrc","showCroppedImage","onMediaLoaded","minZoom","classes","className","children","image","maxZoom","aspect","onCropChange","onZoomChange","cropSize","containerClassName","cropAreaClassName","mediaClassName","showGrid","fileName","_jsxFileName","lineNumber","columnNumber","min","value","max","step","onChange","e","onClick","_c","$RefreshReg$"],"sources":["/Users/hirakuono/Desktop/開発/tatamiproject_0.5/tatami-react/src/components/CropperModal.jsx"],"sourcesContent":["import { Button, makeStyles, Modal, Slider } from \"@material-ui/core\";\nimport React from \"react\";\nimport Cropper, { Area, MediaSize } from \"react-easy-crop\";\nimport { ASPECT_RATIO, CROP_WIDTH } from \"./Createpost\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modal: {\n    width: 420,\n    height: 500,\n    backgroundColor: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexFlow: \"column\",\n    borderRadius: \"0px 0px 10px 10px\",\n    \"& .crop-container\": {\n      height: 400,\n      borderRadius: \"10px 10px 0px 0px\",\n      backgroundColor: \"#f4f7fb\",\n      position: \"relative\",\n      \"& .container\": {},\n      \"& .crop-area\": {\n        border: \"3px solid #00A0FF\"\n      },\n      \"& .media\": {}\n    },\n    \"& .controls\": {\n      height: 40,\n      marginLeft: 50,\n      marginRight: 50,\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: 10,\n      \"& .zoom-range\": {\n        color: \"#00A0FF\"\n      }\n    },\n    \"& .buttons\": {\n      height: 40,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      marginRight: 90,\n      marginLeft: 90,\n      marginBottom: 10,\n      \"& .close\": {\n        backgroundColor: \"gray\",\n        color: \"#fff\"\n      },\n      \"& .ok\": {\n        backgroundColor: \"#00A0FF\",\n        color: \"#fff\"\n      }\n    }\n  }\n});\ntype Props = {\n  crop: {\n    x: number;\n    y: number;\n  };\n  setCrop: (crop: { x: number; y: number }) => void;\n  zoom: number;\n  setZoom: (zoom: number) => void;\n  onCropComplete: (croppedArea: Area, croppedAreaPixels: Area) => void;\n  open: boolean;\n  onClose: () => void;\n  imgSrc: string;\n  showCroppedImage: () => void;\n  onMediaLoaded: (mediaSize: MediaSize) => void;\n  minZoom: number;\n};\nconst CropperModal: React.FC<Props> = ({\n  crop,\n  setCrop,\n  onCropComplete,\n  setZoom,\n  zoom,\n  open,\n  onClose,\n  imgSrc,\n  showCroppedImage,\n  onMediaLoaded,\n  minZoom\n}) => {\n  const classes = useStyles();\n  return (\n    <Modal open={open} onClose={onClose} className={classes.root}>\n      <div className={classes.modal}>\n        <div className=\"crop-container\">\n          <div className=\"crop-space\">\n            <Cropper\n              image={imgSrc}\n              crop={crop}\n              zoom={zoom}\n              minZoom={minZoom}\n              maxZoom={minZoom + 3}\n              aspect={ASPECT_RATIO}\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n              cropSize={{\n                width: CROP_WIDTH,\n                height: CROP_WIDTH / ASPECT_RATIO\n              }}\n              classes={{\n                containerClassName: \"container\",\n                cropAreaClassName: \"crop-area\",\n                mediaClassName: \"media\"\n              }}\n              onMediaLoaded={onMediaLoaded}\n              showGrid={false}\n            />\n          </div>\n        </div>\n        <div className=\"controls\">\n          <Slider\n            min={minZoom}\n            value={zoom}\n            max={minZoom + 3}\n            step={0.1}\n            onChange={(e, value) => {\n              if (typeof value === \"number\") {\n                setZoom(value);\n              }\n            }}\n            className=\"zoom-range\"\n          />\n        </div>\n        <div className=\"buttons\">\n          <Button className=\"close\" onClick={onClose}>\n            Close\n          </Button>\n          <Button\n            className=\"ok\"\n            onClick={() => {\n              onClose();\n              showCroppedImage();\n            }}\n          >\n            OK\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\nexport default CropperModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}