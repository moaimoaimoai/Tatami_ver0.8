{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Accounts = void 0;\nconst StripeResource_js_1 = require(\"../StripeResource.js\");\nconst stripeMethod = StripeResource_js_1.StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path;\nexports.Accounts = StripeResource_js_1.StripeResource.extend({\n  create: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts'\n  }),\n  retrieve(id) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n    // old account ids and api keys. To request the account for an api key, send null as the id\n    if (typeof id === 'string') {\n      return stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{id}'\n      }).apply(this, [id, ...args]);\n    } else {\n      if (id === null || id === undefined) {\n        // Remove id as stripeMethod would complain of unexpected argument\n        [].shift.apply([id, ...args]);\n      }\n      return stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/account'\n      }).apply(this, [id, ...args]);\n    }\n  },\n  update: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts',\n    methodType: 'list'\n  }),\n  del: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/accounts/{account}'\n  }),\n  createExternalAccount: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/external_accounts'\n  }),\n  createLoginLink: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/login_links'\n  }),\n  createPerson: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/persons'\n  }),\n  deleteExternalAccount: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/accounts/{account}/external_accounts/{id}'\n  }),\n  deletePerson: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/accounts/{account}/persons/{person}'\n  }),\n  listCapabilities: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/capabilities',\n    methodType: 'list'\n  }),\n  listExternalAccounts: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/external_accounts',\n    methodType: 'list'\n  }),\n  listPersons: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/persons',\n    methodType: 'list'\n  }),\n  reject: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/reject'\n  }),\n  retrieveCapability: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/capabilities/{capability}'\n  }),\n  retrieveExternalAccount: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/external_accounts/{id}'\n  }),\n  retrievePerson: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/accounts/{account}/persons/{person}'\n  }),\n  updateCapability: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/capabilities/{capability}'\n  }),\n  updateExternalAccount: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/external_accounts/{id}'\n  }),\n  updatePerson: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/accounts/{account}/persons/{person}'\n  })\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","Accounts","StripeResource_js_1","require","stripeMethod","StripeResource","method","extend","create","fullPath","retrieve","id","_len","arguments","length","args","Array","_key","apply","undefined","shift","update","list","methodType","del","createExternalAccount","createLoginLink","createPerson","deleteExternalAccount","deletePerson","listCapabilities","listExternalAccounts","listPersons","reject","retrieveCapability","retrieveExternalAccount","retrievePerson","updateCapability","updateExternalAccount","updatePerson"],"sources":["/Users/hirakuono/Desktop/é–‹ç™º/tatamiproject_0.8_local/tatami-react/node_modules/stripe/cjs/resources/Accounts.js"],"sourcesContent":["\"use strict\";\n// File generated from our OpenAPI spec\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Accounts = void 0;\nconst StripeResource_js_1 = require(\"../StripeResource.js\");\nconst stripeMethod = StripeResource_js_1.StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path;\nexports.Accounts = StripeResource_js_1.StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts',\n    }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}',\n    }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}