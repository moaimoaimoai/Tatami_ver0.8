{"ast":null,"code":"const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    try {\n      // Create Checkout Sessions from body params.\n      const session = await stripe.checkout.sessions.create({\n        line_items: [{\n          // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n          price: 'price_1NNqrCBweimbndG767O4crda',\n          quantity: 1\n        }],\n        mode: 'payment',\n        success_url: `${req.headers.origin}/?success=true`,\n        cancel_url: `${req.headers.origin}/?canceled=true`,\n        automatic_tax: {\n          enabled: true\n        }\n      });\n      res.redirect(303, session.url);\n    } catch (err) {\n      res.status(err.statusCode || 500).json(err.message);\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n}","map":{"version":3,"names":["stripe","require","process","env","STRIPE_SECRET_KEY","handler","req","res","method","session","checkout","sessions","create","line_items","price","quantity","mode","success_url","headers","origin","cancel_url","automatic_tax","enabled","redirect","url","err","status","statusCode","json","message","setHeader","end"],"sources":["/Users/hirakuono/Desktop/開発/tatamiproject_0.8_local/tatami-react/src/pages/api/checkout_sessions.js"],"sourcesContent":["const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\n\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    try {\n      // Create Checkout Sessions from body params.\n      const session = await stripe.checkout.sessions.create({\n        line_items: [\n          {\n            // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n            price: 'price_1NNqrCBweimbndG767O4crda',\n            quantity: 1,\n          },\n        ],\n        mode: 'payment',\n        success_url: `${req.headers.origin}/?success=true`,\n        cancel_url: `${req.headers.origin}/?canceled=true`,\n        automatic_tax: {enabled: true},\n      });\n      res.redirect(303, session.url);\n    } catch (err) {\n      res.status(err.statusCode || 500).json(err.message);\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n}"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;AAE/D,eAAe,eAAeC,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC9C,IAAID,GAAG,CAACE,MAAM,KAAK,MAAM,EAAE;IACzB,IAAI;MACF;MACA,MAAMC,OAAO,GAAG,MAAMT,MAAM,CAACU,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC;QACpDC,UAAU,EAAE,CACV;UACE;UACAC,KAAK,EAAE,gCAAgC;UACvCC,QAAQ,EAAE;QACZ,CAAC,CACF;QACDC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAG,GAAEX,GAAG,CAACY,OAAO,CAACC,MAAO,gBAAe;QAClDC,UAAU,EAAG,GAAEd,GAAG,CAACY,OAAO,CAACC,MAAO,iBAAgB;QAClDE,aAAa,EAAE;UAACC,OAAO,EAAE;QAAI;MAC/B,CAAC,CAAC;MACFf,GAAG,CAACgB,QAAQ,CAAC,GAAG,EAAEd,OAAO,CAACe,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZlB,GAAG,CAACmB,MAAM,CAACD,GAAG,CAACE,UAAU,IAAI,GAAG,CAAC,CAACC,IAAI,CAACH,GAAG,CAACI,OAAO,CAAC;IACrD;EACF,CAAC,MAAM;IACLtB,GAAG,CAACuB,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC;IAC9BvB,GAAG,CAACmB,MAAM,CAAC,GAAG,CAAC,CAACK,GAAG,CAAC,oBAAoB,CAAC;EAC3C;AACF"},"metadata":{},"sourceType":"module"}